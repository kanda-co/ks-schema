import { StringIndexedObject } from '../types';
export declare function createStore<PageKeys extends StringIndexedObject>(): import("@reduxjs/toolkit/dist/configureStore").ToolkitStore<{
    authUser: import("./slices/generated/authUser").AuthUserState;
    company: import("./slices/generated/company").CompanyState;
    credit: import("./slices/generated/credit").CreditState;
    document: import("./slices/generated/document").DocumentState;
    event: import("./slices/generated/event").EventState;
    infoAuth: import("./slices/generated/infoAuth").InfoAuthState;
    infoCompany: import("./slices/generated/infoCompany").InfoCompanyState;
    infoEntity: import("./slices/generated/infoEntity").InfoEntityState;
    infoGhost: import("./slices/generated/infoGhost").InfoGhostState;
    infoIP: import("./slices/generated/infoIP").InfoIPState;
    infoOnboarding: import("./slices/generated/infoOnboarding").InfoOnboardingState;
    infoQuery: import("./slices/generated/infoQuery").InfoQueryState;
    job: import("./slices/generated/job").JobState;
    monitor: import("./slices/generated/monitor").MonitorState;
    onboarding: import("./slices/generated/onboarding").OnboardingState;
    partner: import("./slices/generated/partner").PartnerState;
    payment: import("./slices/generated/payment").PaymentState;
    rate: import("./slices/generated/rate").RateState;
    subscription: import("./slices/generated/subscription").SubscriptionState;
    app: import("./slices/app").AppState<PageKeys>;
    auth: import("./slices/auth").AuthState;
}, import("redux").AnyAction, import("@reduxjs/toolkit").MiddlewareArray<[import("@reduxjs/toolkit").ThunkMiddleware<{
    authUser: import("./slices/generated/authUser").AuthUserState;
    company: import("./slices/generated/company").CompanyState;
    credit: import("./slices/generated/credit").CreditState;
    document: import("./slices/generated/document").DocumentState;
    event: import("./slices/generated/event").EventState;
    infoAuth: import("./slices/generated/infoAuth").InfoAuthState;
    infoCompany: import("./slices/generated/infoCompany").InfoCompanyState;
    infoEntity: import("./slices/generated/infoEntity").InfoEntityState;
    infoGhost: import("./slices/generated/infoGhost").InfoGhostState;
    infoIP: import("./slices/generated/infoIP").InfoIPState;
    infoOnboarding: import("./slices/generated/infoOnboarding").InfoOnboardingState;
    infoQuery: import("./slices/generated/infoQuery").InfoQueryState;
    job: import("./slices/generated/job").JobState;
    monitor: import("./slices/generated/monitor").MonitorState;
    onboarding: import("./slices/generated/onboarding").OnboardingState;
    partner: import("./slices/generated/partner").PartnerState;
    payment: import("./slices/generated/payment").PaymentState;
    rate: import("./slices/generated/rate").RateState;
    subscription: import("./slices/generated/subscription").SubscriptionState;
    app: import("./slices/app").AppState<PageKeys>;
    auth: import("./slices/auth").AuthState;
}, import("redux").AnyAction, undefined>]>>;
