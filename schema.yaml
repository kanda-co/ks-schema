openapi: "3.0.0"
info:
  version: 1.0.0
  title: Kanda Service - API schema
  description: Kanda Service API Schema

servers:
  - url: https://hub.kanda.co.uk
  - url: https://hub-qa.kanda.co.uk
  - url: http://localhost:8080

paths:
  /api/me:
    get:
      operationId: me
      summary: get me info
      tags:
        - AuthUser
      responses:
        200:
          description: got me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putMe
      summary: put me info
      tags:
        - AuthUser
      requestBody:
        description: put me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/company:
    get:
      operationId: infoCompany
      summary: query company info with its directors
      tags:
        - InfoCompany
      parameters:
        - in: query
          name: company_name
          schema:
            type: string
          description: query keyword of company name
        - in: query
          name: company_number
          schema:
            type: string
          description: exact company number match
        - in: query
          name: directors
          schema:
            type: boolean
          description: include directors info?
      responses:
        200:
          description: got company info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/customer:
    get:
      operationId: infoCustomer
      summary: query customer info with loose query
      tags:
        - InfoCustomer
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: query keyword of loosely matched customer
      responses:
        200:
          description: got customer info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company:
    get:
      operationId: getCompanies
      summary: get all companies
      tags:
        - Company
      responses:
        200:
          description: got all companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompany
      summary: post new company
      tags:
        - Company
      requestBody:
        description: post new company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: posted new company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}:
    get:
      operationId: getCompany
      summary: get existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCompany
      summary: put existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: put existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCompany
      summary: delete existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job:
    get:
      operationId: getJobs
      summary: get all jobs
      tags:
        - Job
      responses:
        200:
          description: got all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postJob
      summary: post new job
      tags:
        - Job
      requestBody:
        description: post new job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: posted new job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}:
    get:
      operationId: getJob
      summary: get existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putJob
      summary: put existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: put existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteJob
      summary: delete existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/send:
    post:
      operationId: sendJob
      summary: send existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: sent existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/archive:
    post:
      operationId: archiveJob
      summary: archive existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: archived existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/application:
    get:
      operationId: getApplications
      summary: get all applications
      tags:
        - Application
      responses:
        200:
          description: got all applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postApplication
      summary: post new application
      tags:
        - Application
      requestBody:
        description: post new application
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Application"
      responses:
        200:
          description: posted new application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/application/{id}:
    get:
      operationId: getApplication
      summary: get existing application
      tags:
        - Application
      parameters:
        - name: id
          in: path
          description: application id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putApplication
      summary: put existing application
      tags:
        - Application
      parameters:
        - name: id
          in: path
          description: application id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing application
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Application"
      responses:
        200:
          description: put existing application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteApplication
      summary: delete existing application
      tags:
        - Application
      parameters:
        - name: id
          in: path
          description: application id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment:
    get:
      operationId: getPayments
      summary: get all payments
      tags:
        - Payment
      responses:
        200:
          description: got all payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postPayment
      summary: post new payment
      tags:
        - Payment
      requestBody:
        description: post new payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: posted new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}:
    get:
      operationId: getPayment
      summary: get existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putPayment
      summary: put existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: put existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deletePayment
      summary: delete existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document:
    get:
      operationId: getDocuments
      summary: get all documents
      tags:
        - Document
      responses:
        200:
          description: got all documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postDocument
      summary: post new document
      tags:
        - Document
      requestBody:
        description: post new document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: posted new document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document/{id}:
    get:
      operationId: getDocument
      summary: get existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putDocument
      summary: put existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: put existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteDocument
      summary: delete existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    AuthUser:
      type: object
      required:
        - id
        - token
        - name
        - email
        - provider
        - subject
        - audience
        - issuer
      properties:
        id:
          type: string
          title: id
          readOnly: true
        token:
          type: string
          title: token
          readOnly: true
        name:
          type: string
          title: name
          minLength: 1
        email:
          type: string
          title: email
          format: email
        role:
          type: string
          title: role
          readOnly: true
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri
        disabled:
          type: boolean
          title: disabled
          readOnly: true
        provider:
          type: string
          title: provider
          readOnly: true
        subject:
          type: string
          title: subject
          readOnly: true
        audience:
          type: string
          title: audience
          readOnly: true
        issuer:
          type: string
          title: issuer
          readOnly: true

    InfoMe:
      type: object
      properties:
        name:
          type: string
          title: name
          minLength: 1
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri

    Money:
      type: object
      required:
        - amount
      properties:
        currency:
          type: string
          title: currency
          enum:
            - GBP
          default: GBP
        amount:
          title: amount in pence
          $ref: "#/components/schemas/Pence"

    Pence:
      type: integer
      format: int32
      title: amount / number in pence
      minimum: 0

    Metadata:
      type: object
      required:
        - liveness
        - created_at
        - updated_at
      properties:
        liveness:
          type: boolean
          title: liveness
          readOnly: true
        created_at:
          type: string
          format: date-time
          title: created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: updated at
          readOnly: true

    Address:
      type: object
      required:
        - line_1
        - city
        - country
        - postcode
      properties:
        building_number:
          type: string
          title: building number
          minLength: 1
        building_name:
          type: string
          title: building name
          minLength: 1
        line_1:
          type: string
          title: line 1
          minLength: 1
        line_2:
          type: string
          title: line 2
          minLength: 1
        city:
          type: string
          title: city / town
          minLength: 1
        county:
          type: string
          title: county / state
          minLength: 1
        country:
          type: string
          title: country
          minLength: 1
        postcode:
          type: string
          title: postcode / zipcode
          pattern: "^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$"
          x-kanda-form-widget: Postcode

    InfoCompany:
      type: object
      required:
        - limited_company
      properties:
        id:
          type: string
          title: company info unique id
          readOnly: true
        limited_company:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
          readOnly: true
        directors:
          type: array
          title: directors info
          items:
            $ref: "#/components/schemas/UserType"
          readOnly: true
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Company:
      type: object
      required:
        - company_type
        - company_type_info
      properties:
        id:
          type: string
          title: company unique id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        emails:
          type: array
          items:
            type: string
            format: email
          title: emails for user who has api access
          readOnly: true
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserType"
          title: users
        company_info:
          type: object
          $ref: "#/components/schemas/CompanyInfo"
          title: company info
        company_type:
          type: string
          enum:
            - limited_company
            - sole_trader
          title: company type
          x-kanda-form-widget: RadioSelect
        company_type_info:
          type: object
          oneOf:
            - $ref: "#/components/schemas/LimitedCompanyInfo"
            - $ref: "#/components/schemas/SoleTraderInfo"
          title: company type info
        available_rates:
          type: array
          items:
            $ref: "#/components/schemas/AvailableRate"
          title: available rates
        quote_preference:
          type: string
          title: quote preference
          enum:
            - no_preference
            - kanda
            - custom
          default: no_preference
        skip_deposit:
          type: string
          title: company is allowed to take own deposit
          enum:
            - "Yes"
            - "No"
          default: "No"
        lifecycle:
          type: string
          title: company lifecycle state
          enum:
            - registered
            - onboarded
            - completed_setup
            - verified
          default: registered
          readOnly: true
        company_logo:
          type: object
          title: company logo document
          $ref: "#/components/schemas/Document"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    CompanyInfo:
      type: object
      required:
        - trade_type
        - warranty_length
        - average_monthly_jobs
        - average_job_value
        - use_subcontractor
        - insurance_document
      properties:
        trade_type:
          type: string
          enum:
            - gas_engineer
            - electrician
            - ev_charger_installer
            - tiler
            - kitchen_fitter
            - floor_layer
            - cctv_and_security_installations
            - windows_and_doors
            - landscaping
            - air_conditioning
            - bathrooms
            - driveways_and_patios
            - garage_doors
            - fireplaces
            - multi_trade
            - other_trade
          title: trade type
          x-kanda-form-widget: Select
        trade_body:
          type: string
          enum:
            - niceic
            - elecsa
            - gas_safe
            - napit
            - other
          title: trade body
          x-kanda-form-widget: Select
        trade_body_number:
          type: string
          title: trade body number
          minLength: 1
        warranty_length:
          type: integer
          title: warranty length
          minimum: 1
        average_monthly_jobs:
          type: integer
          title: average monthly jobs
          minimum: 1
        average_job_value:
          type: integer
          title: average job value
          minimum: 1
        use_subcontractor:
          type: string
          title: use subcontractor?
          enum:
            - "yes"
            - "no"
          x-kanda-form-widget: Select
        insurance_document:
          type: object
          title: insurance document
          $ref: "#/components/schemas/Document"

    Document:
      type: object
      required:
        - name
        - content
      properties:
        id:
          type: string
          title: document id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        name:
          type: string
          title: document name
          minLength: 1
        content:
          type: string
          format: base64
          title: document content
          x-kanda-form-widget: File
        mimetype:
          type: string
          title: document mime type
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    LimitedCompanyInfo:
      type: object
      required:
        - company_name
        - company_address
        - company_number
      properties:
        company_name:
          type: string
          title: company name
          minLength: 1
          x-kanda-form-widget: Company
        company_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: company address
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address
        company_number:
          type: string
          title: company number
          minLength: 1
        vat_number:
          type: string
          title: vat number
          minLength: 1

    SoleTraderInfo:
      type: object
      required:
        - national_insurance_number
        - trading_name
        - trading_address
      properties:
        national_insurance_number:
          type: string
          title: national insurance number
          minLength: 1
        trading_name:
          type: string
          title: trading name
          minLength: 1
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address

    DirectorInfo:
      type: object
      required:
        - home_address
      properties:
        verification_status:
          type: string
          enum:
            - not_verified
            - verified
          title: verification status
          readOnly: true
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address

    UserType:
      type: object
      required:
        - role
        - first_name
        - email
      properties:
        director_info:
          type: object
          $ref: "#/components/schemas/DirectorInfo"
          title: director info
        role:
          type: string
          enum:
            - company-admin
            - company-manager
            - company-staff
          title: company role
          x-kanda-form-widget: RadioSelect
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1

    AvailableRate:
      type: object
      required:
        - name
        - fee
        - enabled
      properties:
        name:
          type: string
          title: name
          minLength: 1
        fee:
          type: integer
          title: fee
          minimum: 0
        enabled:
          type: boolean
          title: enabled?

    Customer:
      type: object
      required:
        - first_name
        - last_name
        - email
        - phone
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          title: email
        phone:
          type: string
          title: phone number
          minLength: 1
        address:
          type: object
          $ref: "#/components/schemas/Address"

    Job:
      type: object
      required:
        - title
        - deposit_type
        - deposit_value
        - job_items
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        title:
          type: string
          title: job title
          minLength: 1
        description:
          type: string
          title: job description
          minLength: 1
        deposit_type:
          type: string
          title: deposit type
          enum:
            - no_deposit
            - partial_deposit
            - fixed_deposit
          default: no_deposit
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        job_items:
          type: array
          items:
            $ref: "#/components/schemas/JobItem"
          title: job items
          minLength: 1
        total:
          type: object
          title: job total
          $ref: "#/components/schemas/MoneyTotal"
          readOnly: true
        notes:
          type: array
          items:
            type: string
          title: job notes
        status:
          type: string
          title: job status
          enum:
            - draft
            - sent
            - accepted
            - declined
            - archived
          readOnly: true
        finance_status:
          title: finance status
          $ref: "#/components/schemas/FinanceStatus"
        checkout_options:
          type: array
          title: checkout options
          items:
            $ref: "#/components/schemas/CheckoutOption"
        finance_options:
          type: array
          title: finance options
          items:
            type: string
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    JobItem:
      type: object
      required:
        - title
        - quantity
        - price
        - vat
      properties:
        title:
          type: string
          title: job item title
          minLength: 1
        description:
          type: string
          title: job item description
          minLength: 1
        quantity:
          title: job item quantity
          $ref: "#/components/schemas/Pence"
        price:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item total price in pence (vat inclusive)
        vat_rate:
          type: string
          title: vat applicable rate
          enum:
            - "vat_not_set"
            - "exempted"
            - "0%"
            - "5%"
            - "20%"
            - "custom"
          default: "vat_not_set"
        vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item vat value in pence
        quote_document:
          type: object
          title: quote document
          $ref: "#/components/schemas/Document"

    MoneyTotal:
      type: object
      title: total
      properties:
        amount_vat_inclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat inclusive)
          readOnly: true
        amount_vat_exclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat exclusive)
          readOnly: true
        amount_vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: total vat value in pence
          readOnly: true

    FinanceStatus:
      type: string
      title: finance status
      enum:
        - under_review
        - applied_for_finance
        - finance_deposit_paid
        - finacne_not_approved
        - financed
        - sat_note_sent
        - sat_note_viewed
        - sat_note_signed
        - paid
      readOnly: true

    CheckoutOption:
      type: string
      title: checkout option
      enum:
        - pay_on_completion
        - decline_job

    Application:
      type: object
      required:
        - checkout_option
        - finance_option
      properties:
        id:
          type: string
          title: application id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        title:
          type: string
          title: job title
          minLength: 1
          readOnly: true
        description:
          type: string
          title: job description
          minLength: 1
          readOnly: true
        deposit_type:
          type: string
          title: deposit type
          readOnly: true
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
          readOnly: true
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
          readOnly: true
        quote_items:
          title: quote items
          items:
            $ref: "#/components/schemas/JobItem"
          readOnly: true
        total:
          title: job total
          $ref: "#/components/schemas/MoneyTotal"
          readOnly: true
        checkout_options:
          type: array
          title: checkout options
          items:
            $ref: "#/components/schemas/CheckoutOption"
          readOnly: true
        finance_options:
          type: array
          title: finance options
          items:
            type: string
          readOnly: true
        finance_option:
          type: string
          title: finance option
        finance_status:
          title: finance status
          $ref: "#/components/schemas/FinanceStatus"
          readOnly: true
        payments:
          title: payments
          items:
            $ref: "#/components/schemas/Payment"
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    Payment:
      type: object
      required:
        - payment_method
        - amount
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - application
            - charge
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        payment_method:
          type: string
          enum:
            - loan
            - cash
            - card
            - direct_debit
          title: payment method
          default: cash
          x-kanda-form-widget: RadioSelect
        status:
          type: string
          title: payment status
          enum:
            - unpaid
            - pending
            - paid
            - disputed
            - cancelled
            - refunded
          readOnly: true
        amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: payment amount in pence
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    OmniCredit:
      type: object
      required:
        - amount
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - application
            - charge
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        state:
          type: string
          title: credit state
          enum:
            - accepted
            - declined
            - referred
            - action_lender
            - action_customer
            - pending
            - finished
            - paid_out
        amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: credit amount in pence
        bank_account:
          title: bank account
          $ref: "#/components/schemas/BankAccount"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    BankAccount:
      type: object
      required:
        - account_name
        - account_number
        - sort_code
      properties:
        account_name:
          type: string
          title: account name
          minLength: 1
        account_number:
          type: string
          title: account number
          minLength: 1
          pattern: "^[0-9]{7,8}$"
        sort_code:
          type: string
          title: sort code
          pattern: "^[0-9]{2}[-][0-9]{2}[-][0-9]{2}$"

    Error:
      type: object
      required:
        - message
      properties:
        code:
          type: integer
          format: int32
          title: code
          readOnly: true
        message:
          type: string
          title: message
          readOnly: true
