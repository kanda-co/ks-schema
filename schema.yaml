openapi: "3.0.0"
info:
  version: 1.0.0
  title: Kanda Service - API schema
  description: Kanda Service API Schema

servers:
  - url: https://hub.kanda.co.uk
  - url: https://hub-qa.kanda.co.uk
  - url: http://localhost:8080

paths:
  /api/me:
    post:
      operationId: postMe
      summary: post me info
      tags:
        - AuthUser
      requestBody:
        description: post me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: posted me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      operationId: me
      summary: get me info
      tags:
        - AuthUser
      responses:
        200:
          description: got me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putMe
      summary: put me info
      tags:
        - AuthUser
      requestBody:
        description: put me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/company:
    get:
      operationId: infoCompany
      summary: query company info with its directors
      tags:
        - InfoCompany
      parameters:
        - in: query
          name: company_name
          schema:
            type: string
          description: query keyword of company name
        - in: query
          name: company_number
          schema:
            type: string
          description: exact company number match
        - in: query
          name: directors
          schema:
            type: boolean
          description: include directors info?
      responses:
        200:
          description: got company info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/customer:
    get:
      operationId: infoCustomer
      summary: query customer info with loose query
      tags:
        - InfoCustomer
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: query keyword of loosely matched customer
      responses:
        200:
          description: got customer info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/auth:
    put:
      operationId: infoAuth
      summary: put auth info by email, send sign-in magic link
      tags:
        - InfoAuth
      requestBody:
        description: put auth info by email, send sign-in magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/verify:
    put:
      operationId: infoVerify
      summary: put verify info by email, send verification magic link
      tags:
        - InfoAuth
      requestBody:
        description: put verify info by email, send verification magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put verify info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/password:
    put:
      operationId: infoPassword
      summary: put password info by email, send password reset magic link
      tags:
        - InfoAuth
      requestBody:
        description: put password info by email, send password reset magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/ip:
    get:
      operationId: infoIP
      summary: query request IPv4 address or fallback to server IP
      tags:
        - InfoIP
      responses:
        200:
          description: got request IPv4 address
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoIP"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company:
    get:
      operationId: getCompanies
      summary: get all companies
      tags:
        - Company
      responses:
        200:
          description: got all companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompany
      summary: post new company
      tags:
        - Company
      requestBody:
        description: post new company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: posted new company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}:
    get:
      operationId: getCompany
      summary: get existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCompany
      summary: put existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: put existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCompany
      summary: delete existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/approve:
    post:
      operationId: approveCompany
      summary: >
        kanda staff to approve and verify company users and mark its lifecycle verified
        only allowed when company has already gone through company setup
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got approved and verified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job:
    get:
      operationId: getJobs
      summary: get all jobs
      tags:
        - Job
      responses:
        200:
          description: got all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postJob
      summary: post new job
      tags:
        - Job
      requestBody:
        description: post new job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: posted new job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}:
    get:
      operationId: getJob
      summary: get existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putJob
      summary: put existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: put existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteJob
      summary: delete existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/send:
    post:
      operationId: sendJob
      summary: send existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: sent existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/complete:
    post:
      operationId: completeJob
      summary: >
        complete existing accepted job, only allowed when job status is accepted
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: completed existing accepted job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/archive:
    post:
      operationId: archiveJob
      summary: archive existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: archived existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/apply:
    post:
      operationId: applyJob
      summary: >
        customer to apply existing job with selected options,
        only allowed when job status is sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job apply options selected by customer
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerOptions"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/pay:
    post:
      operationId: payJob
      summary: >
        customer to pay existing job, 
        only allowed when job status is beyond sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job payment option
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentOption"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/viewSatNote:
    post:
      operationId: viewJobSatNote
      summary: >
        customer to view completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with viewed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/signSatNote:
    post:
      operationId: signJobSateNote
      summary: >
        customer to sign completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: customer to sign completed job with satisfaction note
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SatNote"
      responses:
        200:
          description: got existing job with signed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/approve:
    post:
      operationId: approveJobSatNote
      summary: >
        kanda staff to approve signed completed job with satisfaction note,
        only allowed when sat note is signed and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with signed and approved with satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/payout:
    post:
      operationId: payoutJob
      summary: >
        kanda staff to approve a payout for job,
        only allowed when provider approved sat note and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/companyInfo:
    post:
      operationId: jobCompanyInfo
      summary: get existing job company info
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job company info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCompanyInfo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment:
    get:
      operationId: getPayments
      summary: get all payments
      tags:
        - Payment
      responses:
        200:
          description: got all payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postPayment
      summary: post new payment
      tags:
        - Payment
      requestBody:
        description: post new payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: posted new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}:
    get:
      operationId: getPayment
      summary: get existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putPayment
      summary: put existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: put existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deletePayment
      summary: delete existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}/{status}:
    post:
      operationId: markPayment
      summary: >
        company to mark existing payment as given status,
        only allowed when payment method is cash
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
        - name: status
          in: path
          description: status update for this payment
          required: true
          schema:
            type: string
            enum:
              - unpaid
              - paid
              - pay_on_completion
      responses:
        200:
          description: got existing payment marked as given status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit:
    get:
      operationId: getCredits
      summary: get all credits
      tags:
        - Credit
      responses:
        200:
          description: got all credits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCredit
      summary: post new credit
      tags:
        - Credit
      requestBody:
        description: post new credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        200:
          description: posted new credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}:
    get:
      operationId: getCredit
      summary: get existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCredit
      summary: put existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        200:
          description: put existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCredit
      summary: delete existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/quote:
    post:
      operationId: quoteCredit
      summary: quote existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: quoted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/apply:
    post:
      operationId: applyCredit
      summary: apply existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: applied existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/check:
    post:
      operationId: checkCredit
      summary: >
        check existing credit and refresh documents,
        only allowed when credit state is set
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: checked existing credit and refreshed documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/sign:
    post:
      operationId: signCredit
      summary: >
        sign existing credit documents,
        only allowed when credit state is accepted
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: signature and quote of existing credit documents
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignDocument"
      responses:
        200:
          description: fetch and update existing credit documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document:
    get:
      operationId: getDocuments
      summary: get all documents
      tags:
        - Document
      responses:
        200:
          description: got all documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postDocument
      summary: post new document
      tags:
        - Document
      requestBody:
        description: post new document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: posted new document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document/{id}:
    get:
      operationId: getDocument
      summary: get existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putDocument
      summary: put existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: put existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteDocument
      summary: delete existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription:
    get:
      operationId: getSubscriptions
      summary: get all subscriptions
      tags:
        - Subscription
      responses:
        200:
          description: got all subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postSubscription
      summary: post new subscription
      tags:
        - Subscription
      requestBody:
        description: post new subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        200:
          description: posted new subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription/{id}:
    get:
      operationId: getSubscription
      summary: get existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putSubscription
      summary: put existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        200:
          description: put existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteSubscription
      summary: delete existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/webhook/{provider}:
    post:
      operationId: providerWebhook
      summary: provider webhook
      tags:
        - Webhook
      parameters:
        - name: provider
          in: path
          description: provider name
          required: true
          schema:
            type: string
            enum:
              - gocardless
              - omni
              - stripe
              - veriff
      responses:
        200:
          description: provider webhook accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/runner:
    get:
      operationId: runner
      summary: runner for task event
      tags:
        - Task
      parameters:
        - name: event
          in: query
          description: runner event type
          required: true
          schema:
            type: string
            enum:
              - reminder
        - name: task
          in: query
          description: runner task name
          required: true
          schema:
            type: string
            enum:
              - dbv3_ho_application_customer_action_reminder
              - dbv3_ho_application_sat_note_sent_reminder
              - dbv3_ho_application_sign_docs_reminder
              - dbv3_ho_initial_follow_up
              - dbv3_tp_initial_follow_up
              - dbv3_user_company_setup_reminder
              - dbv3_user_verify_director_reminder
      responses:
        200:
          description: runner has been completed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    AuthUser:
      type: object
      required:
        - id
        - token
        - name
        - email
        - provider
        - subject
        - audience
        - issuer
        - verified
      properties:
        id:
          type: string
          title: id
          readOnly: true
        token:
          type: string
          title: token
          readOnly: true
        name:
          type: string
          title: name
          minLength: 1
        email:
          type: string
          title: email
          format: email
        role:
          type: string
          title: role
          readOnly: true
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri
        disabled:
          type: boolean
          title: disabled
          readOnly: true
        provider:
          type: string
          title: provider
          readOnly: true
        subject:
          type: string
          title: subject
          readOnly: true
        audience:
          type: string
          title: audience
          readOnly: true
        issuer:
          type: string
          title: issuer
          readOnly: true
        verified:
          type: boolean
          title: email verified

    InfoMe:
      type: object
      properties:
        email:
          type: string
          title: email
          format: email
        name:
          type: string
          title: name
          minLength: 1
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri

    InfoAuth:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          title: email
          format: email
        continue_url:
          type: string
          title: continue url
          format: uri

    InfoIP:
      type: object
      required:
        - ipv4
      properties:
        ipv4:
          type: string
          title: ipv4 address

    Money:
      type: object
      required:
        - amount
      properties:
        currency:
          type: string
          title: currency
          enum:
            - GBP
          default: GBP
        amount:
          title: amount in pence
          $ref: "#/components/schemas/Pence"

    Pence:
      type: integer
      format: int32
      title: amount / number in pence
      minimum: 0
      maximum: 2147483647

    Metadata:
      type: object
      required:
        - liveness
        - created_at
        - updated_at
      properties:
        liveness:
          type: boolean
          title: liveness
          readOnly: true
        created_at:
          type: string
          format: date-time
          title: created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: updated at
          readOnly: true

    Address:
      type: object
      required:
        - line_1
        - city
        - country
        - postcode
      properties:
        building_number:
          type: string
          title: building number
          minLength: 1
        building_name:
          type: string
          title: building name
          minLength: 1
        line_1:
          type: string
          title: line 1
          minLength: 1
        line_2:
          type: string
          title: line 2
          minLength: 1
        city:
          type: string
          title: city / town
          minLength: 1
        county:
          type: string
          title: county / state
          minLength: 1
        country:
          type: string
          title: country
          minLength: 1
        postcode:
          type: string
          title: postcode / zipcode
          pattern: "^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$"
          x-kanda-form-widget: Postcode
        months_at_address:
          type: integer
          title: months at address
          format: int32
          minimum: 0
          maximum: 2147483647

    InfoCompany:
      type: object
      required:
        - limited_company
      properties:
        id:
          type: string
          title: company info unique id
          readOnly: true
        limited_company:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
          readOnly: true
        directors:
          type: array
          title: directors info
          items:
            $ref: "#/components/schemas/UserType"
          readOnly: true
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Company:
      type: object
      required:
        - company_type
      properties:
        id:
          type: string
          title: company unique id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        emails:
          type: array
          items:
            type: string
            format: email
          title: emails for user who has api access
          readOnly: true
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserType"
          title: users
        company_info:
          type: object
          $ref: "#/components/schemas/CompanyInfo"
          title: company info
        company_type:
          type: string
          enum:
            - limited_company
            - sole_trader
          title: company type
          x-kanda-form-widget: RadioSelect
        limited_company_info:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
        sole_trader_info:
          type: object
          title: sole trader info
          $ref: "#/components/schemas/SoleTraderInfo"
        available_rates:
          type: array
          items:
            $ref: "#/components/schemas/AvailableRate"
          title: available rates
        quote_preference:
          type: string
          title: quote preference
          enum:
            - no_preference
            - kanda
            - custom
          default: no_preference
        skip_deposit:
          type: string
          title: company is allowed to take own deposit
          enum:
            - "Yes"
            - "No"
          default: "No"
        lifecycle:
          type: string
          title: company lifecycle state
          enum:
            - registered
            - onboarded
            - completed_setup
            - verified
          default: registered
          readOnly: true
        billing:
          type: string
          title: company billing
          enum:
            - legacy
            - trial
            - pending
            - subscribed
            - recurring_payment_failed_1
            - recurring_payment_failed_2
            - recurring_payment_failed_3
            - suspended
            - cancelled
          default: legacy
          readOnly: true
        company_logo:
          type: object
          title: company logo document
          $ref: "#/components/schemas/Document"
        bank_account:
          type: object
          title: bank account to be shown to customer if paid by cash / bank transfer
          $ref: "#/components/schemas/BankAccount"
        contact_info:
          type: object
          title: company contact info shared with customers
          $ref: "#/components/schemas/ContactInfo"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    CompanyInfo:
      type: object
      required:
        - trade_type
        - warranty_length
        - average_monthly_jobs
        - average_job_value
        - use_subcontractor
        - insurance_document
      properties:
        trade_type:
          type: string
          enum:
            - gas_engineer
            - electrician
            - ev_charger_installer
            - tiler
            - kitchen_fitter
            - floor_layer
            - cctv_and_security_installations
            - windows_and_doors
            - landscaping
            - air_conditioning
            - bathrooms
            - driveways_and_patios
            - garage_doors
            - fireplaces
            - multi_trade
            - other_trade
          title: trade type
          x-kanda-form-widget: Select
        trade_body:
          type: string
          enum:
            - "none"
            - "niceic"
            - "elecsa"
            - "gas_safe"
            - "napit"
            - "other"
          title: trade body
          x-kanda-form-widget: Select
        trade_body_number:
          type: string
          title: trade body number
          minLength: 1
        warranty_length:
          type: integer
          title: warranty length
          minimum: 1
        average_monthly_jobs:
          type: integer
          title: average monthly jobs
          minimum: 1
          maximum: 2147483647
        average_job_value:
          $ref: "#/components/schemas/Pence"
          title: average job value in pence
          minimum: 1
        use_subcontractor:
          type: string
          title: use subcontractor?
          enum:
            - "yes"
            - "no"
          x-kanda-form-widget: Select
        insurance_document:
          type: object
          title: insurance document
          $ref: "#/components/schemas/Document"

    ContactInfo:
      type: object
      title: contact info
      properties:
        contact_name:
          type: string
          title: contact name
        contact_email:
          type: string
          title: contact email
          format: email
        contact_phone:
          type: string
          title: contact phone number
        contact_address:
          type: object
          title: contact address
          $ref: "#/components/schemas/Address"

    Document:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          title: document id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        name:
          type: string
          title: document name
          minLength: 1
        content:
          type: string
          format: base64
          title: document content
          maxLength: 1048487
          x-kanda-form-widget: File
        mimetype:
          type: string
          title: document mime type
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    LimitedCompanyInfo:
      type: object
      required:
        - company_name
        - company_address
        - company_number
      properties:
        company_name:
          type: string
          title: company name
          minLength: 1
          x-kanda-form-widget: Company
        company_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: company address
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address
        company_number:
          type: string
          title: company number
          minLength: 1
        vat_number:
          type: string
          title: vat number
          pattern: "^(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})$"
          minLength: 1

    SoleTraderInfo:
      type: object
      required:
        - trading_name
        - trading_address
      properties:
        national_insurance_number:
          type: string
          title: national insurance number
          minLength: 1
        trading_name:
          type: string
          title: trading name
          minLength: 1
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address

    DirectorInfo:
      type: object
      required:
        - home_address
      properties:
        verification_status:
          type: string
          enum:
            - not_verified
            - verified
          title: verification status
          readOnly: true
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address

    UserType:
      type: object
      required:
        - role
        - first_name
        - email
      properties:
        director_info:
          type: object
          $ref: "#/components/schemas/DirectorInfo"
          title: director info
        role:
          type: string
          enum:
            - company-admin
            - company-manager
            - company-staff
          title: company role
          x-kanda-form-widget: RadioSelect
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1

    AvailableRate:
      type: object
      required:
        - name
        - fee
        - enabled
      properties:
        name:
          type: string
          title: name
          minLength: 1
        fee:
          type: integer
          title: fee
          minimum: 0
          maximum: 2147483647
        enabled:
          type: boolean
          title: enabled?

    Customer:
      type: object
      required:
        - first_name
        - last_name
        - email
        - phone
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          title: email
        phone:
          type: string
          title: phone number
          minLength: 1
        address:
          type: object
          $ref: "#/components/schemas/Address"

    JobCompanyInfo:
      type: object
      title: job company info
      required:
        - company_name
      properties:
        company_name:
          type: string
          title: company name
          readOnly: true
        company_logo:
          type: object
          title: company logo
          $ref: "#/components/schemas/Document"
        vat_number:
          type: string
          title: vat number
          readOnly: true
        bank_account:
          type: object
          title: company bank account
          $ref: "#/components/schemas/BankAccount"
          readOnly: true
        contact_info:
          type: object
          title: job company contact info
          $ref: "#/components/schemas/ContactInfo"

    Job:
      type: object
      required:
        - title
        - deposit_type
        - deposit_value
        - job_items
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        title:
          type: string
          title: job title
          minLength: 1
        description:
          type: string
          title: job description
          minLength: 1
        deposit_type:
          type: string
          title: deposit type
          enum:
            - no_deposit
            - partial_deposit
            - fixed_deposit
          default: no_deposit
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        job_items:
          type: array
          items:
            $ref: "#/components/schemas/JobItem"
          title: job items
          minLength: 1
        total:
          type: object
          title: job total
          $ref: "#/components/schemas/MoneyTotal"
          readOnly: true
        notes:
          type: array
          items:
            type: string
          title: job notes
        archived:
          type: string
          title: job is archived?
          enum:
            - "yes"
            - "no"
          default: "no"
          readOnly: true
        status:
          type: string
          title: job status
          enum:
            - draft
            - sent
            - accepted
            - declined
            - finished
          readOnly: true
        finance_status:
          title: finance status
          $ref: "#/components/schemas/FinanceStatus"
        checkout_options:
          type: array
          title: checkout options
          items:
            $ref: "#/components/schemas/CheckoutOption"
          minLength: 1
        finance_options:
          type: array
          title: finance options
          items:
            type: string
        customer_options:
          type: object
          title: customer selected options, updated only via custom endpoint
          $ref: "#/components/schemas/CustomerOptions"
          readOnly: true
        payments:
          type: array
          title: payments
          items:
            $ref: "#/components/schemas/Payment"
          readOnly: true
        sat_note_timeline:
          type: object
          title: customer satisfaction note timeline
          $ref: "#/components/schemas/SatNoteTimeline"
          readOnly: true
        sat_note:
          type: object
          title: customer satisfaction note
          $ref: "#/components/schemas/SatNote"
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    CustomerOptions:
      type: object
      title: customer selected options, updated only via custom endpoint
      required:
        - checkout_option
        - finance_option
      properties:
        checkout_option:
          type: string
          title: checkout option selected by customer
          $ref: "#/components/schemas/CheckoutOption"
        finance_option:
          type: string
          title: finance option selected by customer
          description: finance option
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence

    SatNoteTimeline:
      type: object
      title: customer satisfaction note timeline
      properties:
        sent_at:
          type: string
          title: timestamp sat note is sent
          format: date-time
          readOnly: true
        viewed_at:
          type: string
          title: timestamp sat note is viewed
          format: date-time
          readOnly: true
        signed_at:
          type: string
          title: timestamp sat note is signed
          format: date-time
          readOnly: true

    SatNote:
      type: object
      title: customer satisfaction note and signature details
      required:
        - q_pressure
        - q_easiness
        - q_availability
        - q_application
        - q_advice
        - signature
        - certificate
      properties:
        q_pressure:
          type: string
          title: Did the installer pressure you to apply for finance?
          enum:
            - "no"
            - "somewhat"
            - "yes"
          x-kanda-form-widget: Select
        q_easiness:
          type: string
          title: Do you find it hard to apply for finance with Kanda?
          enum:
            - "no"
            - "somewhat"
            - "yes"
          x-kanda-form-widget: Select
        q_availability:
          type: string
          title: How did you first become aware that finance was available?
          enum:
            - "The installer told me when quoting me"
            - "I saw it advertised by the installer"
            - "I found out when the installer sent me a link via Kanda"
          x-kanda-form-widget: Select
        q_application:
          type: string
          title: Who completed your application for finance?
          enum:
            - "I completed the application myself"
            - "Someone completed the appliation on my behalf"
          x-kanda-form-widget: Select
        q_advice:
          type: string
          title: What advice did the installer give you on your finance application?
          enum:
            - "They just sent me a link to apply"
            - "They told me what rates where available"
            - "They helped me work out my potential repayments"
            - "They completed the application for me"
          x-kanda-form-widget: Select
        signature:
          type: object
          title: sat note customer signature
          $ref: "#/components/schemas/Signature"
        certificate:
          type: object
          title: sat note generated document with e-signature
          $ref: "#/components/schemas/Document"

    JobItem:
      type: object
      required:
        - title
        - quantity
        - price
        - vat
      properties:
        title:
          type: string
          title: job item title
          minLength: 1
        description:
          type: string
          title: job item description
          minLength: 1
        quantity:
          title: job item quantity
          $ref: "#/components/schemas/Pence"
        price:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item unit price in pence (vat exclusive)
        vat_rate:
          type: string
          title: vat applicable rate
          enum:
            - "vat_not_set"
            - "exempted"
            - "0%"
            - "5%"
            - "20%"
            - "custom"
          default: "vat_not_set"
        vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item total vat value in pence
        quote_document:
          type: object
          title: quote document
          $ref: "#/components/schemas/Document"
        style:
          type: string
          title: style
          enum:
            - kanda
            - custom
          default: kanda
          readOnly: true

    MoneyTotal:
      type: object
      title: total
      properties:
        amount_vat_inclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat inclusive)
          readOnly: true
        amount_vat_exclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat exclusive)
          readOnly: true
        amount_vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: total vat value in pence
          readOnly: true

    FinanceStatus:
      type: string
      title: finance status
      enum:
        - not_applied
        - under_review
        - applied_for_finance
        - finance_not_approved
        - financed
        - sat_note_sent
        - sat_note_viewed
        - sat_note_signed
        - payout_pending
        - paid
      default: not_applied
      readOnly: true

    CheckoutOption:
      type: string
      title: checkout option
      description: checkout option picked by customer, updated only via custom action
      enum:
        - apply_for_finance
        - decline_job
        - pay_on_completion

    Payment:
      type: object
      required:
        - payment_option
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - job
            - charge
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        payment_option:
          type: object
          title: payment option
          $ref: "#/components/schemas/PaymentOption"
        status:
          type: string
          title: payment status
          enum:
            - unpaid
            - pending
            - paid
            - disputed
            - cancelled
            - refunded
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    PaymentOption:
      type: object
      title: payment option
      required:
        - payment_method
        - amount
      properties:
        payment_method:
          type: string
          title: payment method
          enum:
            - cash
            - card
            - loan
          default: cash
          x-kanda-form-widget: RadioSelect
        amount:
          type: object
          title: payment option amount
          $ref: "#/components/schemas/Money"

    Credit:
      type: object
      required:
        - bank_account
        - customer_details
        - employment_details
        - finance_option
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - job
            - charge
          readOnly: true
        provider:
          type: string
          title: provider name
          enum:
            - omni
          default: omni
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        state:
          type: string
          title: credit state
          enum:
            - accepted
            - declined
            - referred
            - action_lender
            - action_customer
            - pending
            - finished
            - paid_out
          readOnly: true
        amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: credit amount in pence
          readOnly: true
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        finance_option:
          type: string
          title: finance option for this credit
          description: finance option
          readOnly: true
        bank_account:
          type: object
          title: bank account
          $ref: "#/components/schemas/BankAccount"
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: employment details
          $ref: "#/components/schemas/EmploymentDetails"
        credit_documents:
          type: array
          title: credit documents
          items:
            $ref: "#/components/schemas/Document"
        signature:
          type: object
          title: elecontronic signature
          $ref: "#/components/schemas/Signature"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    BankAccount:
      type: object
      required:
        - account_name
        - account_number
        - sort_code
      properties:
        account_name:
          type: string
          title: account name
          minLength: 1
        account_number:
          type: string
          title: account number
          minLength: 1
          pattern: "^[0-9]{7,8}$"
        sort_code:
          type: string
          title: sort code
          pattern: "^[0-9]{2}[-][0-9]{2}[-][0-9]{2}$"

    CustomerDetails:
      type: object
      title: customer details
      required:
        - email
        - gender
        - title
        - first_name
        - last_name
        - date_of_birth
        - marital_status
        - number_of_dependants
        - residential_status
        - current_address
      properties:
        email:
          type: string
          title: email
          format: email
        gender:
          type: string
          title: gender
          enum:
            - male
            - female
        title:
          type: string
          title: title
          enum:
            - mrs
            - mr
            - miss
            - ms
            - dr
        first_name:
          type: string
          title: first name
        middle_name:
          type: string
          title: middle name
        last_name:
          type: string
          title: last name
        maiden_name:
          type: string
          title: maiden name
        telephone:
          type: string
          title: telephone
        mobile:
          type: string
          title: mobile
        date_of_birth:
          type: string
          title: date of birth
          format: date-time
          description: "Customer's date of birth. Format to use: `dd/mm/yyyy`"
        marital_status:
          type: string
          title: marital status
          enum:
            - widowed
            - other
            - married
            - divorced
            - cohabiting
            - to_be_married
            - separated
            - single
        number_of_dependants:
          type: integer
          title: number of dependants
          format: int32
          minimum: 0
          maximum: 2147483647
        residential_status:
          type: string
          title: residential status
          enum:
            - tenant
            - council tenant
            - living with parents
            - owner
        monthly_rent_amount:
          type: object
          title: monthly rent amount
          $ref: "#/components/schemas/Money"
        current_address:
          type: object
          title: current_address
          $ref: "#/components/schemas/Address"
        previous_address_one:
          type: object
          title: previous address one
          $ref: "#/components/schemas/Address"
        previous_address_two:
          type: object
          title: previous address two
          $ref: "#/components/schemas/Address"
        goods_delivery_address:
          type: object
          title: goods delivery address
          $ref: "#/components/schemas/Address"

    EmployedDetails:
      type: object
      title: employed details
      required:
        - employer_name
        - main_occupation
        - months_employed
      properties:
        employer_name:
          type: string
          title: employer name
          minLength: 1
        main_occupation:
          type: string
          title: main occupation
          minLength: 1
        months_employed:
          type: integer
          format: int32
          title: months employed
          minimum: 1
          maximum: 2147483647

    SelfEmployedDetails:
      type: object
      title: self employed details
      required:
        - business_name
        - type_of_business
        - months_self_employed
      properties:
        business_name:
          type: string
          title: business name
          minLength: 1
        type_of_business:
          type: string
          title: type of business
          minLength: 1
        months_self_employed:
          type: integer
          format: int32
          title: months self employed
          minimum: 1
          maximum: 2147483647

    NotEmployedDetails:
      type: object
      title: not employed details
      required:
        - source_of_income
      properties:
        source_of_income:
          type: string
          title: source of income
          enum:
            - partner
            - benefits
            - maintenance
            - other

    EmploymentDetails:
      type: object
      required:
        - employment_status
        - gross_annual_income
        - household_annual_income
      properties:
        employment_status:
          type: string
          title: employment status
          enum:
            - employed
            - self_employed
            - not_employed
            - retired
        employed_details:
          type: object
          title: employed details
          $ref: "#/components/schemas/EmployedDetails"
        self_employed_details:
          type: object
          title: self_employed details
          $ref: "#/components/schemas/SelfEmployedDetails"
        not_employed_details:
          type: object
          title: not employed details
          $ref: "#/components/schemas/NotEmployedDetails"
        gross_annual_income:
          type: object
          title: gross annual income
          $ref: "#/components/schemas/Money"
        household_annual_income:
          type: object
          title: household annual income
          $ref: "#/components/schemas/Money"

    SignDocument:
      type: object
      title: credit signature document with quote
      required:
        - signature
        - quote
      properties:
        signature:
          type: object
          title: signature
          $ref: "#/components/schemas/Signature"
        quote:
          type: object
          title: quote document to upload to provider
          $ref: "#/components/schemas/Document"

    Signature:
      type: object
      title: electronic signature
      required:
        - signed
        - fingerprint
      properties:
        signed:
          type: string
          title: signed your signature
          enum:
            - "yes"
            - "no"
          default: "no"
        fingerprint:
          type: string
          title: fingerprint reference such as IP

    Subscription:
      type: object
      properties:
        id:
          type: string
          title: subscription id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        billing:
          type: string
          title: billing reference
          readOnly: true
        billing_status:
          type: string
          title: billing status
          readOnly: true
        mandate:
          type: string
          title: mandate reference
          readOnly: true
        mandate_status:
          type: string
          title: mandate status
          readOnly: true
        authorisation_url:
          type: string
          title: authorisation url to submit a mandate agreement
          readOnly: true
        interval:
          type: string
          title: subscription interval
          enum:
            - monthly
            - yearly
          default: monthly
        day_of_month:
          type: integer
          title: day of month for collection
          format: int32
          minimum: -1
          maximum: 28
        amount:
          type: object
          title: subscription amount
          $ref: "#/components/schemas/Money"
          readOnly: true
        events:
          type: array
          title: subscription events
          items:
            $ref: "#/components/schemas/Event"
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    Event:
      type: object
      title: event
      required:
        - id
        - cid
        - oid
        - resource
        - action
        - source
        - result
      properties:
        id:
          type: string
          title: event id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        resource:
          type: string
          title: event resource
          readOnly: true
        resource_id:
          type: string
          title: event resource id
          readOnly: true
        action:
          type: string
          title: event action
          readOnly: true
        source:
          type: string
          title: event source
          enum:
            - api
            - kanda
            - webhook
          readOnly: true
        result:
          type: string
          title: event result
          readOnly: true
        error:
          type: object
          title: event error
          $ref: "#/components/schemas/Error"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    Error:
      type: object
      required:
        - message
      properties:
        code:
          type: integer
          format: int32
          title: code
          readOnly: true
        message:
          type: string
          title: message
          readOnly: true
