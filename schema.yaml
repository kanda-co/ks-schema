openapi: "3.0.0"
info:
  version: 1.0.0
  title: Kanda Service - API schema
  description: Kanda Service API Schema

servers:
  - url: https://hub.kanda.co.uk
  - url: https://hub-qa.kanda.co.uk
  - url: http://localhost:8080

paths:
  /api/me:
    post:
      operationId: postMe
      summary: post me info
      tags:
        - AuthUser
      requestBody:
        description: post me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: posted me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      operationId: me
      summary: get me info
      tags:
        - AuthUser
      responses:
        200:
          description: got me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putMe
      summary: put me info
      tags:
        - AuthUser
      requestBody:
        description: put me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/health:
    get:
      operationId: infoHealth
      summary: query system health
      tags:
        - InfoHealth
      responses:
        200:
          description: got system health info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/ghost:
    put:
      operationId: infoGhost
      summary: info ghost mode to return custom token, only available to Kanda staff
      tags:
        - InfoGhost
      requestBody:
        description: info ghost mode to return custom token
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoGhost"
      responses:
        200:
          description: info ghosted mode to return custom token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoGhost"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/query:
    put:
      operationId: infoQuery
      summary: info query to return analytics, only available to Kanda staff
      tags:
        - InfoQuery
      requestBody:
        description: info query to return analytics
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoQuery"
      responses:
        200:
          description: info queried to return analytics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoQuery"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/company:
    get:
      operationId: infoCompany
      summary: query company info with its directors
      tags:
        - InfoCompany
      parameters:
        - in: query
          name: company_name
          schema:
            type: string
          description: query keyword of company name
        - in: query
          name: company_number
          schema:
            type: string
          description: exact company number match
        - in: query
          name: directors
          schema:
            type: boolean
          description: include directors info?
      responses:
        200:
          description: got company info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/onboarding:
    get:
      operationId: infoOnboarding
      summary: info for current company onboarding stage + notes
      tags:
        - InfoOnboarding
      responses:
        200:
          description: got info for current company onboarding stage + notes
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/InfoOnboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/director:
    put:
      operationId: infoDirector
      summary: put + run director report
      tags:
        - InfoDirector
      parameters:
        - in: query
          name: report
          schema:
            type: string
            title: info director report to run
            enum:
              - "report_aml"
              - "report_adverse_media"
              - "report_all"
          description: info director report to run, default to run all
      requestBody:
        description: director info to run checks against
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserType"
      responses:
        200:
          description: got director checks
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/OwnerReport"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/customer:
    get:
      operationId: infoCustomer
      summary: query customer info with loose query
      tags:
        - InfoCustomer
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: query keyword of loosely matched customer
      responses:
        200:
          description: got customer info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/example-job:
    put:
      operationId: infoExampleJob
      summary: >
        info example job to return an example job in draft which can be tested for example flow
        customer details will be pre-filled with tradesperson info, and
        other details are pre-filled with example data
      tags:
        - Job
      responses:
        200:
          description: put example job info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/credit:
    put:
      operationId: infoCredit
      summary: info credit to return an eligibility result (AIP) which can be used on financed job
      tags:
        - Credit
      requestBody:
        description: info credit to return an eligibility result (AIP)
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/auth:
    put:
      operationId: infoAuth
      summary: put auth info by email, send sign-in magic link
      tags:
        - InfoAuth
      requestBody:
        description: put auth info by email, send sign-in magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/verify:
    put:
      operationId: infoVerify
      summary: put verify info by email, send verification magic link
      tags:
        - InfoAuth
      requestBody:
        description: put verify info by email, send verification magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put verify info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/password:
    put:
      operationId: infoPassword
      summary: put password info by email, send password reset magic link
      tags:
        - InfoAuth
      requestBody:
        description: put password info by email, send password reset magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/session:
    put:
      operationId: infoSession
      summary: request a new session token for use in checkout
      tags:
        - InfoAuth
      requestBody:
        description: request a new session token from given code
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoSession"
      responses:
        200:
          description: requested a new session token from given code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoSession"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/claim-account:
    put:
      operationId: infoClaimAccount
      summary: put claim account info by email for legacy user, send verification magic link
      tags:
        - InfoAuth
      requestBody:
        description: put claim account info by email for legacy user, send verification magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put claimed account info with email for legacy user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/rate:
    get:
      operationId: infoRate
      summary: request available finance rates for API company
      tags:
        - Rate
      responses:
        200:
          description: got available finance rates for API company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/legacy-redirect:
    put:
      operationId: infoLegacyRedirect
      summary: request a new checkout link based on given data for redirect flow
      tags:
        - InfoRedirect
      requestBody:
        description: request a new checkout link based on given data for legacy redirect flow
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoLegacyRedirect"
      responses:
        200:
          description: got a new checkout link based on given data for legacy redirect flow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoLegacyRedirect"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/ip:
    get:
      operationId: infoIP
      summary: query request IPv4 address or fallback to server IP
      tags:
        - InfoIP
      responses:
        200:
          description: got request IPv4 address
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoIP"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/validate-email:
    get:
      operationId: infoValidateEmail
      summary: validate email info
      tags:
        - InfoValidation
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
            x-go-type: Email
          description: validate this given email
      responses:
        200:
          description: got email validation info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoValidationEmail"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/cache:
    get:
      operationId: infoGetCache
      summary: get cache info
      tags:
        - InfoCache
      responses:
        200:
          description: got cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: infoPutCache
      summary: put cache info
      tags:
        - InfoCache
      requestBody:
        description: put cache info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cache"
      responses:
        200:
          description: put cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: infoDeleteCache
      summary: delete cache info
      tags:
        - InfoCache
      responses:
        200:
          description: deleted cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/entity:
    get:
      operationId: getInfoEntity
      summary: kanda staff only to get entity with relevant resources
      tags:
        - InfoEntity
      parameters:
        - name: id
          in: query
          description: resource id
          required: true
          schema:
            type: string
            minLength: 1
        - name: kind
          in: query
          description: resource kind
          required: true
          schema:
            type: string
            minLength: 1
            enum:
              - company
              - credit
              - job
              - onboarding
              - payment
      responses:
        200:
          description: got credit with relevant resources
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoEntity"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/partner-branding:
    get:
      operationId: infoPartnerBranding
      summary: get info partner branding
      tags:
        - InfoPartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: partner id
      responses:
        200:
          description: got info partner branding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoPartnerBranding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/partner:
    get:
      operationId: getPartners
      summary: get all partners
      tags:
        - Partner
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all partners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postPartner
      summary: kanda staff only to post new partner
      tags:
        - Partner
      requestBody:
        description: post new partner
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Partner"
      responses:
        200:
          description: posted new partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/partner/{id}:
    get:
      operationId: getPartner
      summary: get existing partner
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putPartner
      summary: put existing partner
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing partner
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Partner"
      responses:
        200:
          description: put existing partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deletePartner
      summary: kanda staff to delete existing partner
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/partner/{id}/referrals:
    post:
      operationId: postPartnerReferrals
      summary: post existing partner referrals
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: post existing partner referrals
        required: true
        content:
          application/json:
            schema:
              type: array
              title: referrals
              description: referrals to be added
              items:
                $ref: "#/components/schemas/Referral"
      responses:
        200:
          description: posted existing partner referrals
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/onboarding:
    get:
      operationId: getOnboardings
      summary: kanda staff to get all onboardings
      tags:
        - Onboarding
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all onboardings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postOnboarding
      summary: kanda staff only to post new onboarding
      tags:
        - Onboarding
      requestBody:
        description: post new onboarding
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Onboarding"
      responses:
        200:
          description: posted new onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/onboarding/{id}:
    get:
      operationId: getOnboarding
      summary: kanda staff to get existing onboarding
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putOnboarding
      summary: kanda staff to put existing onboarding
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing onboarding
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Onboarding"
      responses:
        200:
          description: put existing onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteOnboarding
      summary: kanda staff to delete existing onboarding
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/onboarding/{id}/decision:
    post:
      operationId: postOnboardingDecision
      summary: >
        kanda staff to post an onboarding decision and trigger comms (if applicable)
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: onboarding decision to be applied to current stage
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Approval"
      responses:
        200:
          description: got existing onboarding with current stage re-calculated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company:
    get:
      operationId: getCompanies
      summary: get all companies
      tags:
        - Company
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompany
      summary: post new company
      tags:
        - Company
      requestBody:
        description: post new company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: posted new company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}:
    get:
      operationId: getCompany
      summary: get existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCompany
      summary: put existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: put existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCompany
      summary: delete existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/director-verification:
    get:
      operationId: getCompanyDirectorVerification
      summary: get owner / director info from company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: email
          in: query
          description: filter owner / director by email
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got owner / director info from company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompanyDirectorVerification
      summary: owner / director to submit ID verification
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: email
          in: query
          description: owner / director email
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit owner / director ID verification
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectorVerification"
      responses:
        200:
          description: submitted owner / director ID verification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/director:
    post:
      operationId: directorCompany
      summary: send verification email to all non-verified directors for the company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got approved and verified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/approve:
    post:
      operationId: approveCompany
      summary: >
        kanda staff to approve and verify company users and mark its lifecycle verified
        only allowed when company has already gone through company setup
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got approved and verified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/decline:
    post:
      operationId: declineCompany
      summary: >
        kanda staff to reject or decline company and mark its lifecycle declined,
        apart from improper insurance document, all declines will disable company
        and suspend and disable all users associated with the company.
        for improper insurance document, document will be removed and lifecycle 
        re-calculated so tradesperson can upload a correct one again.
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: reason
          in: query
          description: reject or decline reason
          required: true
          schema:
            type: string
            enum:
              - "rejected_outdated_insurance_document"
              - "rejected_invalid_insurnace_document"
              - "rejected_not_on_trade_body_website"
              - "rejected_contact_us_on_application_error"
              - "declined_ccj_against_business_or_director"
              - "declined_ccj_against_previous_association"
              - "declined_listed_trade_type_not_covered"
              - "declined_several_negatives_against_company"
              - "declined_unable_to_complete_id_checks"
              - "declined_stop_comms"
      responses:
        200:
          description: got rejected or declined company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job:
    get:
      operationId: getJobs
      summary: get all jobs
      tags:
        - Job
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postJob
      summary: post new job
      tags:
        - Job
      requestBody:
        description: post new job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: posted new job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}:
    get:
      operationId: getJob
      summary: get existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putJob
      summary: put existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: put existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteJob
      summary: delete existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/send:
    post:
      operationId: sendJob
      summary: send existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: sent existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/resend:
    post:
      operationId: resendJob
      summary: resend existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/check:
    post:
      operationId: checkJob
      summary: >
        check existing job credit state, only allowed when job is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: checked existing job credit state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCreditState"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/complete:
    post:
      operationId: completeJob
      summary: >
        complete existing accepted job, only allowed when job status is accepted
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: completed existing accepted job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/archive:
    post:
      operationId: archiveJob
      summary: archive existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: archived existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/unarchive:
    post:
      operationId: unarchiveJob
      summary: unarchive existing already archived job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: unarchived existing already archived job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/apply:
    post:
      operationId: applyJob
      summary: >
        customer to apply existing job with selected options,
        only allowed when job status is sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job apply options selected by customer
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerOptions"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/reapply:
    post:
      operationId: reapplyJob
      summary: >
        customer to reapply existing job with second line options,
        only allowed when job is applied and primary finance not approved
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: >
          when reapply job with empty object will populate secondary lender rates,
          and reset status and finance_status ready for picking customer options;
          when reapply job with customer options selected,
          previous credit application details will be copied over to new credit record
        content:
          application/json:
            schema:
              anyOf:
                - $ref: "#/components/schemas/CustomerOptions"
                - {}
      responses:
        200:
          description: got existing job with new secondary loan payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/pay:
    post:
      operationId: payJob
      summary: >
        customer to pay existing job, 
        only allowed when job status is beyond sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job payment option
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentOption"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/viewSatNote:
    post:
      operationId: viewJobSatNote
      summary: >
        customer to view completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with viewed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/signSatNote:
    post:
      operationId: signJobSateNote
      summary: >
        customer to sign completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: customer to sign completed job with satisfaction note
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SatNote"
      responses:
        200:
          description: got existing job with signed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/approve:
    post:
      operationId: approveJobSatNote
      summary: >
        kanda staff to approve signed completed job with satisfaction note,
        only allowed when sat note is signed and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with signed and approved with satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/payout:
    post:
      operationId: payoutJob
      summary: >
        kanda staff to approve a payout for job,
        only allowed when provider approved sat note and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/all/payouts:
    post:
      operationId: payoutsJob
      summary: >
        kanda staff to approve all payouts for job,
        only allowed when provider approved sat note and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: job_type
          in: query
          description: optional job type for clearing particular payouts
          schema:
            type: string
            enum:
              - standard
              - solar
      responses:
        200:
          description: got existing jobs with finance status set to paid
          content:
            application/json:
              schema:
                type: array
                title: tallies
                items:
                  $ref: "#/components/schemas/Tally"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/override:
    post:
      operationId: overrideJob
      summary: >
        kanda staff to override a job status and trigger comms to be sent (if applicable),
        only allowed when job is applied for finance or financed.
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job override to be applied to job
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobOverride"
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/checkoutLink:
    post:
      operationId: jobCheckoutLink
      summary: kanda staff only to generate a job checkout link with code
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job generated checkout link with code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedirectURLs"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/companyInfo:
    post:
      operationId: jobCompanyInfo
      summary: get existing job company info
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job company info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCompanyInfo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment:
    get:
      operationId: getPayments
      summary: get all payments
      tags:
        - Payment
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postPayment
      summary: post new payment
      tags:
        - Payment
      requestBody:
        description: post new payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: posted new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}:
    get:
      operationId: getPayment
      summary: get existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putPayment
      summary: put existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: put existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deletePayment
      summary: delete existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}/{status}:
    post:
      operationId: markPayment
      summary: >
        company to mark existing payment as given status,
        only allowed when payment method is cash
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
        - name: status
          in: path
          description: status update for this payment
          required: true
          schema:
            type: string
            enum:
              - unpaid
              - paid
              - pay_on_completion
      responses:
        200:
          description: got existing payment marked as given status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit:
    get:
      operationId: getCredits
      summary: get all credits
      tags:
        - Credit
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all credits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCredit
      summary: post new credit
      tags:
        - Credit
      requestBody:
        description: post new credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        200:
          description: posted new credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}:
    get:
      operationId: getCredit
      summary: get existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCredit
      summary: put existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        200:
          description: put existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCredit
      summary: delete existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/quote:
    post:
      operationId: quoteCredit
      summary: quote existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: quoted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/apply:
    post:
      operationId: applyCredit
      summary: apply existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: applied existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/check:
    post:
      operationId: checkCredit
      summary: >
        check existing credit and refresh documents,
        only allowed when credit state is set
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: checked existing credit and refreshed documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/sign:
    post:
      operationId: signCredit
      summary: >
        sign existing credit documents,
        only allowed when credit state is accepted
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: signature and quote of existing credit documents
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignDocument"
      responses:
        200:
          description: fetch and update existing credit documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document:
    get:
      operationId: getDocuments
      summary: get all documents
      tags:
        - Document
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postDocument
      summary: post new document
      tags:
        - Document
      requestBody:
        description: post new document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: posted new document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document/{id}:
    get:
      operationId: getDocument
      summary: get existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putDocument
      summary: put existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: put existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteDocument
      summary: delete existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/lead:
    get:
      operationId: getLeads
      summary: kanda staff only to get all leads
      tags:
        - Lead
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all leads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Lead"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postLead
      summary: post new lead from applicant
      tags:
        - Lead
      requestBody:
        description: post new lead
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeadApplicant"
      responses:
        200:
          description: posted new lead
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lead"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/lead/{id}:
    get:
      operationId: getLead
      summary: get existing lead
      tags:
        - Lead
      parameters:
        - name: id
          in: path
          description: lead id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing lead
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lead"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putLead
      summary: kanda staff only to put existing lead
      tags:
        - Lead
      parameters:
        - name: id
          in: path
          description: lead id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing lead
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Lead"
      responses:
        200:
          description: put existing lead
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lead"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteLead
      summary: kanda staff only to delete existing lead
      tags:
        - Lead
      parameters:
        - name: id
          in: path
          description: lead id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing lead
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lead"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/lead/{id}/quote:
    post:
      operationId: quoteLead
      summary: post existing lead quote
      tags:
        - Lead
      parameters:
        - name: id
          in: path
          description: lead id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: posted existing lead quote
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeadQuote"
      responses:
        200:
          description: posted existing lead quote
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lead"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/lead/{id}/refer:
    post:
      operationId: referLead
      summary: post existing referred lead
      tags:
        - Lead
      parameters:
        - name: id
          in: path
          description: lead id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: posted existing lead quote
        required: true
        content:
          application/json:
            schema:
              type: object
              title: lead referral to trade
              required:
                - cid
              properties:
                cid:
                  type: string
                  title: lead referral cid
                  description: lead referral company id
                  minLength: 1
      responses:
        200:
          description: posted existing referred lead
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lead"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription:
    get:
      operationId: getSubscriptions
      summary: get all subscriptions
      tags:
        - Subscription
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postSubscription
      summary: post new subscription
      tags:
        - Subscription
      requestBody:
        description: post new subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        200:
          description: posted new subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription/{id}:
    get:
      operationId: getSubscription
      summary: get existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putSubscription
      summary: put existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        200:
          description: put existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteSubscription
      summary: delete existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription/{id}/pending:
    post:
      operationId: pendingSubscription
      summary: pending existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/rate:
    get:
      operationId: getRates
      summary: kanda staff to get all rates
      tags:
        - Rate
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all rates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postRate
      summary: kanda staff to post new rate
      tags:
        - Rate
      requestBody:
        description: post new rate
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rate"
      responses:
        200:
          description: posted new rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/rate/{id}:
    get:
      operationId: getRate
      summary: kanda staff to get existing rate
      tags:
        - Rate
      parameters:
        - name: id
          in: path
          description: rate id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putRate
      summary: kanda staff to put existing rate
      tags:
        - Rate
      parameters:
        - name: id
          in: path
          description: rate id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing rate
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rate"
      responses:
        200:
          description: put existing rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteRate
      summary: kanda staff to delete existing rate
      tags:
        - Rate
      parameters:
        - name: id
          in: path
          description: rate id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/monitor:
    get:
      operationId: getMonitors
      summary: get all monitors
      tags:
        - Monitor
      parameters:
        - $ref: "#/components/parameters/Format"
        - $ref: "#/components/parameters/Q"
      responses:
        200:
          description: got all monitors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postMonitor
      summary: post new monitor
      tags:
        - Monitor
      requestBody:
        description: post new monitor
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Monitor"
      responses:
        200:
          description: posted new monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/monitor/{id}:
    get:
      operationId: getMonitor
      summary: get existing monitor
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putMonitor
      summary: put existing monitor
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing monitor
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Monitor"
      responses:
        200:
          description: put existing monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteMonitor
      summary: delete existing monitor
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/monitor/{id}/flag:
    post:
      operationId: postMonitorFlag
      summary: post internal monitor with flag
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: post internal monitor with flag
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flag"
      responses:
        200:
          description: posted internal monitor with flag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/webhook/{provider}:
    get:
      operationId: providerCheckWebhook
      summary: provider check webhook
      tags:
        - Webhook
      parameters:
        - name: provider
          in: path
          description: provider name
          required: true
          schema:
            type: string
            enum:
              - gocardless
              - omni
              - etika
              - allium
              - stripe
              - veriff
      responses:
        200:
          description: provider webhook accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: providerWebhook
      summary: provider webhook
      tags:
        - Webhook
      parameters:
        - name: provider
          in: path
          description: provider name
          required: true
          schema:
            type: string
            enum:
              - gocardless
              - omni
              - etika
              - allium
              - stripe
              - veriff
      responses:
        200:
          description: provider webhook accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/event:
    post:
      operationId: postEvent
      summary: post event by kanda staff
      tags:
        - Event
      requestBody:
        description: post event record
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        200:
          description: posted event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/runner:
    get:
      operationId: runner
      summary: runner for task event
      tags:
        - Task
      parameters:
        - name: event
          in: query
          description: runner event type
          required: true
          schema:
            type: string
            enum:
              - reminder
              - housekeeping
        - name: task
          in: query
          description: runner task name
          required: true
          schema:
            type: string
            enum:
              - dbv3_ho_application_customer_action_reminder
              - dbv3_ho_application_etika_customer_action_reminder
              - dbv3_ho_application_sat_note_sent_reminder
              - dbv3_ho_application_sign_docs_reminder
              - dbv3_ho_initial_follow_up
              - dbv3_tp_initial_follow_up
              - dbv3_user_company_setup_reminder
              - dbv3_user_verify_director_reminder
              - housekeeping_check_referral_expiry
              - housekeeping_check_lender_rate
      responses:
        200:
          description: runner has been completed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  parameters:
    Format:
      name: format
      in: query
      schema:
        type: string
        title: query format
        description: query format to indicate response format
        enum:
          - "reduced"
          - "full"
        default: "full"

    Q:
      name: q
      in: query
      schema:
        type: string
        title: query filter
        description: query filter in colon path+value pairs, with comma separated filters
        minLength: 1

  schemas:
    AuthUser:
      type: object
      required:
        - id
        - token
        - name
        - email
        - provider
        - subject
        - audience
        - issuer
        - verified
      properties:
        id:
          type: string
          title: id
          readOnly: true
        token:
          type: string
          title: token
          readOnly: true
        name:
          type: string
          title: name
          minLength: 1
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        role:
          type: string
          title: role
          readOnly: true
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri
        disabled:
          type: boolean
          title: disabled
          readOnly: true
        provider:
          type: string
          title: provider
          readOnly: true
        subject:
          type: string
          title: subject
          readOnly: true
        audience:
          type: string
          title: audience
          readOnly: true
        issuer:
          type: string
          title: issuer
          readOnly: true
        verified:
          type: boolean
          title: email verified

    InfoMe:
      type: object
      title: info me
      properties:
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        name:
          type: string
          title: name
          minLength: 1
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri
        referrer:
          type: string
          title: referrer URL
          format: uri

    InfoGhost:
      type: object
      title: info ghost
      required:
        - email
      properties:
        email:
          type: string
          title: email for ghosted user
          format: email
          x-go-type: Email
        custom_role:
          type: string
          title: custom role set for ghosted user
        custom_token:
          type: string
          title: custom token
          readOnly: true
        bearer_token:
          type: string
          title: bearer token

    InfoQuery:
      type: object
      title: info query
      required:
        - query
      properties:
        query:
          type: string
          title: query for analytics
        result:
          type: string
          title: queried result in JSON string format

    InfoAuth:
      type: object
      title: info auth
      required:
        - email
      properties:
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        continue_url:
          type: string
          title: continue url
          format: uri

    InfoSession:
      type: object
      title: info session
      required:
        - code
      properties:
        code:
          type: string
          title: code
        custom_token:
          type: string
          title: custom token used for sign in exchange

    InfoLegacyRedirect:
      type: object
      title: info legacy redirect
      required:
        - reference
        - price
        - email
        - description_of_goods
        - enterprise_id
      properties:
        reference:
          type: string
          title: title
          description: >
            The reference for the loan application.
            Is mainly used for tracking loan applications
        price:
          type: integer
          format: int32
          title: price in pence
          description: >
            The price of the loan in pennies.
            Ex.: If the price is 2,450.99, the value should be passed as 245099.
          $ref: "#/components/schemas/Pence"
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
          description: The email of the customer applying for the loan
        description_of_goods:
          type: string
          title: description of goods
          description: The description of the goods.
        enterprise_id:
          type: string
          title: enterprise id
          description: Your enterprise ID
        first_name:
          type: string
          title: first name
          description: The first name of the customer applying for the loan
        last_name:
          type: string
          title: last name
          description: The last name of the customer applying for the loan
        mobile:
          type: string
          title: mobile
          description: The mobile number of the customer applying for the loan
        deposit:
          type: integer
          format: int32
          title: Deposit in pence
          $ref: "#/components/schemas/Pence"
        redirect_urls:
          type: object
          title: redirect urls
          $ref: "#/components/schemas/RedirectURLs"
        enabled_rates:
          type: array
          title: Enabled rates
          description: specified the enabled rates for the loan
          items:
            type: string
        work_type:
          title: work type
          description: optional work type for the job
          $ref: "#/components/schemas/WorkType"

    InfoIP:
      type: object
      required:
        - ipv4
      properties:
        ipv4:
          type: string
          title: ipv4 address

    Money:
      type: object
      required:
        - amount
      properties:
        currency:
          type: string
          title: currency
          enum:
            - GBP
          default: GBP
        amount:
          title: amount in pence
          $ref: "#/components/schemas/Pence"

    Pence:
      type: integer
      format: int32
      title: amount / number in pence
      minimum: 0
      maximum: 2147483647
      x-kanda-form-widget: NumberInput

    Metadata:
      type: object
      required:
        - liveness
        - created_at
        - updated_at
      properties:
        liveness:
          type: boolean
          title: liveness
          readOnly: true
        created_at:
          type: string
          format: date-time
          title: created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: updated at
          readOnly: true

    Address:
      type: object
      required:
        - line_1
        - city
        - country
        - postcode
      properties:
        building_number:
          type: string
          title: building number
          minLength: 1
        building_name:
          type: string
          title: building name
          minLength: 1
        line_1:
          type: string
          title: line 1
          minLength: 1
        line_2:
          type: string
          title: line 2
          minLength: 1
        city:
          type: string
          title: city / town
          minLength: 1
        county:
          type: string
          title: county / state
          minLength: 1
        country:
          type: string
          title: country
          minLength: 1
        postcode:
          type: string
          title: postcode / zipcode
          pattern: "^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$"
          x-kanda-form-widget: Postcode
        months_at_address:
          type: integer
          title: months at address
          format: int32
          minimum: 0
          maximum: 2147483647

    InfoCompany:
      type: object
      properties:
        id:
          type: string
          title: company info unique id
          readOnly: true
        sole_trader:
          type: object
          title: sole trader info
          $ref: "#/components/schemas/SoleTraderInfo"
          readOnly: true
        limited_company:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
          readOnly: true
        directors:
          type: array
          title: directors info
          items:
            $ref: "#/components/schemas/UserType"
          readOnly: true
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Partner:
      type: object
      title: partner
      description: partner
      required:
        - contact_info
        - rewards
      properties:
        id:
          type: string
          title: partner id
          description: partner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        emails:
          type: array
          items:
            type: string
            format: email
            x-go-type: Email
          title: emails for user who has api access
          readOnly: true
        contact_info:
          type: object
          title: partner contact info
          $ref: "#/components/schemas/ContactInfo"
        branding:
          type: object
          title: branding
          description: branding style override
          $ref: "#/components/schemas/Branding"
        cids:
          type: array
          title: cids
          description: referral signed up company ids
          items:
            type: string
          readOnly: true
        referrals:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Referral"
          title: referrals
          description: referrals with their lifecycle + status
        rewards:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Reward"
          readOnly: true
        current_reward:
          type: object
          title: current reward
          description: current reward
          $ref: "#/components/schemas/Reward"
          readOnly: true
        stats:
          type: object
          title: stats
          description: current referral stats
          readOnly: true
          properties:
            total_referrals:
              type: integer
              title: number of referrals made
              description: number of referrals made
              format: int32
            signups:
              type: integer
              title: number of tradesperson signups
              description: number of tradesperson signups to unlock
              format: int32
            subscribers:
              type: integer
              title: number of referral company subscribers
              description: number of referral company subscribers
              format: int32
            verifications:
              type: integer
              title: number of referral company verifications
              description: number of referral company verifications
              format: int32
            activations:
              type: integer
              title: number of referral company activations
              description: number of referral company activations
              format: int32
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Branding:
      type: object
      title: branding override
      description: branding override object
      required:
        - logo
      properties:
        logo:
          type: object
          title: partner logo
          $ref: "#/components/schemas/Document"
      additionalProperties: true

    Reward:
      type: object
      title: reward
      description: reward in tiered system
      required:
        - name
      properties:
        name:
          type: string
          title: reward name
          description: reward name
        signups:
          type: integer
          title: number of tradesperson signups
          description: number of tradesperson signups to unlock
          format: int32
        subscribers:
          type: integer
          title: number of referral company subscribers
          description: number of referral company subscribers to unlock
          format: int32
        verifications:
          type: integer
          title: number of referral company verifications
          description: number of referral company verifications to unlock
          format: int32
        activations:
          type: integer
          title: number of referral company activations
          description: number of referral company activations to unlock
          format: int32
        rates_reduction_pct:
          type: integer
          title: rates reduction percentage in pence
          minimum: 0
          maximum: 2147483647
        rates_reduction_value:
          type: integer
          title: rates reduction value in pence
          minimum: 0
          maximum: 2147483647
        referral_commission_pct:
          type: integer
          title: referral commission percentage value in pence
          minimum: 0
          maximum: 2147483647
        referral_commission_value:
          type: integer
          title: referral commission value in pence
          minimum: 0
          maximum: 2147483647

    Referral:
      type: object
      title: referral
      description: referral summary
      required:
        - email
        - name
      properties:
        email:
          type: string
          title: referral email
          format: email
          x-go-type: Email
        name:
          type: string
          title: referral name
        mobile:
          type: string
          title: referral mobile
          x-kanda-form-widget: PhoneNumberInput
        cid:
          type: string
          title: referral cid
          description: referral signed up company id
          readOnly: true
        trading_name:
          type: string
          title: trading name
          readOnly: true
        lifecycle:
          type: string
          title: referral lifecycle
          description: referral company lifecycle
          readOnly: true
        billing:
          type: string
          title: referral billing
          description: referral company billing status
          readOnly: true
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Onboarding:
      type: object
      title: company onboarding
      description: company onboarding
      properties:
        id:
          type: string
          title: company unique id
        cid:
          type: string
          title: company id
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        current_stage:
          type: string
          title: onboarding current stage
          $ref: "#/components/schemas/OnboardingStage"
        stages:
          type: array
          title: onboarding stages
          items:
            $ref: "#/components/schemas/OnboardingStage"
          readOnly: true
        company_review:
          type: object
          title: company review
          description: company review stage
          properties:
            report:
              type: object
              $ref: "#/components/schemas/CompanyReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        director_review:
          type: object
          title: director review
          description: company director review stage
          properties:
            reports:
              type: object
              title: director report
              additionalProperties:
                type: object
                $ref: "#/components/schemas/CompanyDirectorReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        consumer_review:
          type: object
          title: consumer review
          description: consumer review stage
          properties:
            reports:
              type: object
              title: consumer report
              additionalProperties:
                type: object
                $ref: "#/components/schemas/ConsumerReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        owner_review:
          type: object
          title: owner review
          description: owner review stage
          properties:
            reports:
              type: object
              title: owner AML/AdverseMedia report
              additionalProperties:
                type: object
                $ref: "#/components/schemas/OwnerReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        insurance_review:
          type: object
          title: insurance review
          description: insurance document and expiry check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        trade_review:
          type: object
          title: trade review
          description: trade info check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        online_review:
          type: object
          title: online review
          description: online presence check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        fca_upload:
          type: object
          title: fca upload
          description: fca upload check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        fca_awaiting_approval:
          type: object
          title: fca awaiting approval check and review
          description: fca awaiting approval check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    OnboardingStage:
      type: string
      title: onboarding stage
      enum:
        - "ongoing"
        - "company_report_review"
        - "company_report_reviewed"
        - "director_report_review"
        - "director_report_reviewed"
        - "consumer_report_review"
        - "consumer_report_reviewed"
        - "owner_report_review"
        - "owner_report_reviewed"
        - "insurance_review"
        - "insurance_reviewed"
        - "trade_review"
        - "trade_reviewed"
        - "online_review"
        - "online_reviewed"
        - "fca_upload_review"
        - "fca_upload_reviewed"
        - "fca_awaiting_approval"
        - "fca_approved"
        - "onboarding_not_approved"

    CompanyReport:
      type: object
      title: company report
      description: company onboarding report
      required:
        - status
        - incorporation_date
        - number_of_writs
        - active_ccj_exact
        - active_ccj_possible
        - satisfied_ccj
        - risk_score
        - credit_limit
        - report_pdf
        - people_ids
      properties:
        status:
          type: string
          title: status
          description: company status
        incorporation_date:
          type: string
          title: incorporation date
          description: company incorporation date
        number_of_writs:
          type: integer
          title: number of writs
          description: company number of writs (previous or negactive information)
        active_ccj_exact:
          type: integer
          title: active ccj exact
          description: company active ccj exact registered
        active_ccj_possible:
          type: integer
          title: active ccj possible
          description: company active ccj possible registered
        satisfied_ccj:
          type: integer
          title: satisfied ccj
          description: company satisfied ccj
        risk_score:
          type: string
          title: risk score
          description: company credit rating risk score
        credit_limit:
          type: string
          title: credit limit
          description: company credit rating credit limit
        report_pdf:
          type: object
          title: associated report in pdf
          $ref: "#/components/schemas/Document"
        people_ids:
          type: array
          title: people ids
          description: company director people ids
          items:
            type: string

    CompanyDirectorReport:
      type: object
      title: company director report
      description: company director report
      required:
        - people_id
        - director_name
        - number_of_current_appointments
        - current_appointment_ccj
        - number_of_inactive_appointments
        - inactive_appointment_ccj
        - number_of_previous_appointments
        - previous_appointment_ccj
        - disqualified
      properties:
        people_id:
          type: string
          title: people id
          description: company director people id
        director_name:
          type: string
          title: director name
          description: company director name
        number_of_current_appointments:
          type: integer
          title: number of current appointments
          description: company director number of current appointments
        current_appointment_ccj:
          type: integer
          title: current appointment ccj
          description: company director current appointment ccj
        number_of_inactive_appointments:
          type: integer
          title: number of inactive appointments
          description: company director number of inactive appointments
        inactive_appointment_ccj:
          type: integer
          title: inactive appointment ccj
          description: company director inactive appointment ccj
        number_of_previous_appointments:
          type: integer
          title: number of previous appointments
          description: company director number of previous appointments
        previous_appointment_ccj:
          type: integer
          title: previous appointment ccj
          description: company director previous appointment ccj
        disqualified:
          type: boolean
          title: disqualified
          description: company director disqualified

    ConsumerReport:
      type: object
      title: consumer report
      description: consumer report
      required:
        - active_ccj
        - satisfied_ccj
        - insolvencies
        - credit_score_band
        - credit_score
      properties:
        active_ccj:
          type: integer
          title: active ccj
          description: consumer active ccj
        satisfied_ccj:
          type: integer
          title: satisfied ccj
          description: consumer satisfied ccj
        insolvencies:
          type: boolean
          title: insolvencies
          description: consumer insolvencies at address currently insolvent
        credit_score_band:
          type: string
          title: credit score band
          description: consumer credit score band
        credit_score:
          type: string
          title: credit score
          description: consumer credit score

    OwnerReport:
      type: object
      title: owner report
      description: owner report with checks for AML + AdverseMedia
      properties:
        uk_credit_aml_warnings:
          type: string
          title: UK Credit AML Warnings
          description: UK Credit AML Warnings
        international_sanctions_warnings:
          type: string
          title: International Sanctions Warnings
          description: International Sanctions Warnings
        enhanced_international_saction_warnings:
          type: string
          title: Enhanced International Saction Warnings
          description: Enhanced International Saction Warnings
        edited_electoral_roll:
          type: string
          title: Edited Electoral Roll
          description: Edited Electoral Roll
        national_id_register:
          type: string
          title: National ID Register
          description: National ID Register
        uk_credit_header:
          type: string
          title: UK Credit Header
          description: UK Credit Header
        overall_pass:
          type: string
          title: Overall Pass
          description: Overall Pass
        adverse_media:
          type: string
          title: Adverse Media
          description: Adverse Media

    Approval:
      type: object
      title: approval
      description: approval
      required:
        - outcome
        - reason
      properties:
        outcome:
          type: string
          title: approval outcome
          enum:
            - "PASS"
            - "REVIEW"
            - "FAIL"
        reason:
          type: string
          title: approval outcome reason
          enum:
            - "approved"
            - "insufficient_details"
            - "invalid_details"
            - "mismatched_details"
            - "investigation_required"
            - "manual_review_required"
            - "not_approved"
            - "not_approved_ccj_against_business_or_director"
            - "not_approved_ccj_against_previous_association"
            - "not_approved_listed_trade_type_not_covered"
            - "not_approved_several_negatives_against_company"
        reason_note:
          type: string
          title: approval outcome reason note

    InfoOnboarding:
      type: object
      title: info for current company onboarding
      description: company onboarding
      properties:
        id:
          type: string
          title: company unique id
        cid:
          type: string
          title: company id
        current_stage:
          type: string
          title: onboarding current stage
          $ref: "#/components/schemas/OnboardingStage"
        current_approval:
          type: object
          title: onboarding current approval status and notes, without reports
          $ref: "#/components/schemas/Approval"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    Company:
      type: object
      required:
        - company_type
      properties:
        id:
          type: string
          title: company unique id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        analytics:
          type: object
          title: referrer
          $ref: "#/components/schemas/Analytics"
          readOnly: true
        emails:
          type: array
          items:
            type: string
            format: email
            x-go-type: Email
          title: emails for user who has api access
          readOnly: true
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserType"
          title: users
        company_info:
          type: object
          $ref: "#/components/schemas/CompanyInfo"
          title: company info
        solar_company_info:
          type: object
          $ref: "#/components/schemas/SolarCompanyInfo"
          title: solar company info
        company_type:
          type: string
          enum:
            - limited_company
            - sole_trader
          title: company type
          x-kanda-form-widget: RadioSelect
        limited_company_info:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
        sole_trader_info:
          type: object
          title: sole trader info
          $ref: "#/components/schemas/SoleTraderInfo"
        finance_rates:
          type: array
          items:
            $ref: "#/components/schemas/FinanceRate"
          title: finance rates
        quote_preference:
          type: string
          title: quote preference
          enum:
            - no_preference
            - kanda
            - custom
          default: no_preference
        skip_deposit:
          type: string
          title: company is allowed to take own deposit
          enum:
            - "Yes"
            - "No"
          default: "No"
        lifecycle:
          type: string
          title: company lifecycle state
          enum:
            - registered
            - subscribed
            - director_info_provided
            - director_details_submitted
            - onboarded
            - insurance_uploaded
            - completed_setup
            - verified
            - declined
          default: registered
          readOnly: true
        billing:
          type: string
          title: company billing
          enum:
            - legacy
            - trial
            - pending
            - referred
            - subscribed
            - recurring_payment_failed_1
            - recurring_payment_failed_2
            - recurring_payment_failed_3
            - suspended
            - cancelled
          default: legacy
          readOnly: true
        referral_code:
          type: string
          title: optional referral code used for the sign up
        referred_by:
          type: string
          title: referred by partner id
        company_logo:
          type: object
          title: company logo document
          $ref: "#/components/schemas/Document"
        bank_account:
          type: object
          title: bank account to be shown to customer if paid by cash / bank transfer
          $ref: "#/components/schemas/BankAccount"
        contact_info:
          type: object
          title: company contact info shared with customers
          $ref: "#/components/schemas/ContactInfo"
        redirect_urls:
          type: object
          title: redirects
          $ref: "#/components/schemas/RedirectURLs"
        fca_number:
          type: string
          title: FCA number
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    SolarCompanyInfo:
      type: object
      required:
        - epvs_registration_number
        - solar_trade_association
        - solar_trade_association_number
        - electrical_trade_association
      properties:
        epvs_registration_number:
          type: string
          title: EPVS registration number
          minLength: 1
        solar_trade_association:
          type: string
          enum:
            - "msc"
            - "heis"
            - "recc"
          title: solar trade association
          x-kanda-form-widget: Select
        solar_trade_association_number:
          type: string
          title: solar trade association number
          minLength: 1
        electrical_trade_association:
          type: string
          enum:
            - "niceic"
            - "napit"
            - "none"
          title: electrical trade association
          x-kanda-form-widget: Select
        electrical_trade_association_number:
          type: string
          title: electrical trade association number
          minLength: 1

    CompanyInfo:
      type: object
      required:
        - trade_type
        - trade_type_name
        - trade_body
        - trade_body_name
        - warranty_length
        - average_monthly_jobs
        - average_job_value
        - use_subcontractor
      properties:
        trade_type:
          type: string
          enum:
            - air_conditioning
            - artificial_grass_specialists
            - bathrooms
            - battery_storage
            - blinds_and_shutters
            - carpentry
            - cctv_and_security_installations
            - cladding_sofits_and_guttering
            - conservatories
            - curtains
            - decking
            - driveways_and_patios
            - electrician
            - ev_charger_installer
            - fencing
            - fireplaces
            - fitted_bedroom_furniture
            - floor_layer
            - garage_doors
            - garden_rooms
            - gas_engineer
            - gates
            - heat_pumps
            - heating_systems
            - home_insulation_excl_spray_foam
            - hot_tub_specialist
            - kitchen_fitter
            - kitchen_supplier
            - landscaping
            - loft_boarding
            - painting_and_decorating
            - plasterer
            - plumbing
            - rendering
            - resin_drive_specialist
            - resin_driveways
            - roofing__excluding_flat_roofs
            - security_systems
            - stair_case_specialist
            - tiler
            - verandas
            - windows_and_doors
            - multi_trade
            - other_trade
          title: trade type
          x-kanda-form-widget: Select
        trade_type_name:
          type: string
          title: trade type name
          minLength: 1
        trade_body:
          type: string
          enum:
            - "none"
            - "acrib"
            - "aphc"
            - "assure"
            - "certass"
            - "elecsa"
            - "fensa"
            - "feta"
            - "gas_safe"
            - "hetas"
            - "napit"
            - "nfrc"
            - "niceic"
            - "other"
          title: trade body
          x-kanda-form-widget: Select
        trade_body_name:
          type: string
          title: trade body name
          minLength: 1
        trade_body_number:
          type: string
          title: trade body number
          minLength: 1
        warranty_length:
          type: integer
          title: warranty length
          minimum: 1
        average_monthly_jobs:
          type: integer
          title: average monthly jobs
          minimum: 1
          maximum: 2147483647
        average_job_value:
          $ref: "#/components/schemas/Pence"
          title: average job value in pence
          minimum: 1
        use_subcontractor:
          type: string
          title: use subcontractor?
          enum:
            - "yes"
            - "no"
          x-kanda-form-widget: Select
        online_presence:
          type: object
          title: company online presence
          $ref: "#/components/schemas/OnlinePresence"
        insurance_document:
          type: object
          title: insurance document
          $ref: "#/components/schemas/Document"
        contract_agreement:
          type: object
          title: contract agreement
          $ref: "#/components/schemas/ContractAgreement"

    OnlinePresence:
      type: object
      title: online presence
      required:
        - q_online
      properties:
        q_online:
          type: string
          title: Can you provide your business online details?
          enum:
            - "Yes, I can provide the details"
            - "No, I don't have this"
          x-kanda-form-widget: Select
        website:
          type: string
          title: website URL
          format: uri
        facebook:
          type: string
          title: facebook business name or link
        google:
          type: string
          title: google business name or link

    ContractAgreement:
      type: object
      title: contract agreement
      properties:
        contract:
          type: object
          title: contract
          $ref: "#/components/schemas/Document"
        agreed_terms_and_conditions:
          type: string
          title: agreed terms and conditions
          enum:
            - "yes"
            - "no"
          default: "no"
        agreed_to_become_iar_of_kanda:
          type: string
          title: agreed to become IAR of Kanda
          enum:
            - "yes"
            - "no"
          default: "no"
        print_name:
          type: string
          title: print name
          minLength: 1
        signed_at:
          type: string
          title: signed at
          format: date-time
          readOnly: true

    ContactInfo:
      type: object
      title: contact info
      properties:
        contact_name:
          type: string
          title: contact name
        contact_email:
          type: string
          title: contact email
          format: email
          x-go-type: Email
        contact_phone:
          type: string
          title: contact phone number
          x-kanda-form-widget: PhoneNumberInput
        contact_address:
          type: object
          title: contact address
          $ref: "#/components/schemas/Address"
        trading_name:
          type: string
          title: trading name

    Document:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          title: document id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        name:
          type: string
          title: document name
          minLength: 1
        expiry:
          type: string
          title: document expiry
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput
        content:
          type: string
          format: base64
          title: document content
          maxLength: 1048487
          x-kanda-form-widget: File
        mimetype:
          type: string
          title: document mime type
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    LimitedCompanyInfo:
      type: object
      required:
        - company_name
        - company_address
        - company_number
      properties:
        company_name:
          type: string
          title: company name
          minLength: 1
          x-kanda-form-widget: Company
        company_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: company address
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address
        company_number:
          type: string
          title: company number
          minLength: 1
        vat_number:
          type: string
          title: vat number
          pattern: "^(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})$"
          minLength: 1

    SoleTraderInfo:
      type: object
      required:
        - trading_name
        - trading_address
      properties:
        national_insurance_number:
          type: string
          title: national insurance number
          minLength: 1
        trading_name:
          type: string
          title: trading name
          minLength: 1
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address

    DirectorVerification:
      type: object
      required:
        - first_name
        - last_name
        - email
        - mobile
        - home_address
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          x-go-type: Email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1
        date_of_birth:
          type: string
          title: date of birth
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address

    DirectorInfo:
      type: object
      required:
        - home_address
      properties:
        verification_status:
          type: string
          enum:
            - not_verified
            - verification_submitted
            - verification_declined
            - verified
          title: verification status
          readOnly: true
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address
        date_of_birth:
          type: string
          title: date of birth
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput

    CommPreferences:
      type: object
      title: comm preferences
      properties:
        pre_job:
          type: string
          title: bucket 1
          $ref: "#/components/schemas/PreferenceOption"
        post_job:
          type: string
          title: bucket 1
          $ref: "#/components/schemas/PreferenceOption"
        other:
          type: string
          title: bucket 1
          $ref: "#/components/schemas/PreferenceOption"

    PreferenceOption:
      type: string
      title: preference option
      enum:
        - "enabled"
        - "disabled"
      default: "disabled"

    UserType:
      type: object
      required:
        - role
        - first_name
        - email
      properties:
        director_info:
          type: object
          $ref: "#/components/schemas/DirectorInfo"
          title: director info
        role:
          type: string
          enum:
            - company-admin
            - company-manager
            - company-staff
          title: company role
          x-kanda-form-widget: Select
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          x-go-type: Email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1
        comm_preferences:
          type: object
          $ref: "#/components/schemas/CommPreferences"

    FinanceRate:
      type: object
      required:
        - name
        - fee
        - charge
        - enabled
        - finance_types
        - provider
      properties:
        name:
          type: string
          title: name
          minLength: 1
        credit_line:
          type: integer
          title: credit line
          minimum: 0
          maximum: 2147483647
        fee:
          type: integer
          title: fee
          minimum: 0
          maximum: 2147483647
        charge:
          type: integer
          title: charge
          minimum: 0
          maximum: 2147483647
        min_charge:
          type: integer
          title: minimum charge
          minimum: 0
          maximum: 2147483647
        enabled:
          type: boolean
          title: enabled?
        finance_types:
          type: array
          title: finance type
          items:
            $ref: "#/components/schemas/FinanceType"
        provider:
          type: string
          title: provider
          $ref: "#/components/schemas/FinanceProvider"
        apr_type:
          type: string
          title: apr type
          enum:
            - "INTEREST_FREE"
            - "INTEREST_BEARING"
            - "BUYNOW_PAYLATER"
        apr:
          type: integer
          title: apr in pence
          minimum: 0
          maximum: 2147483647
        deferred_duration:
          type: integer
          title: deferred duration in months
          minimum: 0
          maximum: 2147483647
        duration:
          type: integer
          title: duration in months
          minimum: 0
          maximum: 2147483647
        min_deposit_pct:
          type: integer
          title: min deposit percentage in pence
          minimum: 0
          maximum: 2147483647
        max_deposit_pct:
          type: integer
          title: max deposit percentage in pence
          minimum: 0
          maximum: 2147483647
        min_deposit_value:
          type: integer
          title: min deposit value in pence
          minimum: 0
          maximum: 2147483647
        max_deposit_value:
          type: integer
          title: max deposit value in pence
          minimum: 0
          maximum: 2147483647
        min_job_value:
          type: integer
          title: min job value in pence
          minimum: 0
          maximum: 2147483647
        max_job_value:
          type: integer
          title: max job value in pence
          minimum: 0
          maximum: 2147483647
        work_types:
          type: array
          title: work types
          items:
            $ref: "#/components/schemas/WorkType"

    FinanceType:
      type: string
      title: finance type
      enum:
        - "primary"
        - "secondary"

    Customer:
      type: object
      required:
        - first_name
        - last_name
        - email
        - phone
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          x-go-type: Email
          title: email
        phone:
          type: string
          title: phone number
          minLength: 1
        address:
          type: object
          $ref: "#/components/schemas/Address"

    RedirectURLs:
      type: object
      title: redirect urls
      properties:
        checkout_url:
          type: string
          title: checkout url
        success_url:
          type: string
          title: success url
        failure_url:
          type: string
          title: failure url
        webhook_url:
          type: string
          title: webhook url

    JobCompanyInfo:
      type: object
      title: job company info
      required:
        - company_name
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        company_name:
          type: string
          title: company name
          readOnly: true
        company_logo:
          type: object
          title: company logo
          $ref: "#/components/schemas/Document"
        vat_number:
          type: string
          title: vat number
          readOnly: true
        bank_account:
          type: object
          title: company bank account
          $ref: "#/components/schemas/BankAccount"
          readOnly: true
        contact_info:
          type: object
          title: job company contact info
          $ref: "#/components/schemas/ContactInfo"

    Job:
      type: object
      required:
        - title
        - deposit_type
        - deposit_value
        - job_items
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        title:
          type: string
          title: job title
          minLength: 1
        description:
          type: string
          title: job description
          minLength: 1
        deposit_type:
          type: string
          title: deposit type
          enum:
            - no_deposit
            - partial_deposit
            - fixed_deposit
          default: no_deposit
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        job_items:
          type: array
          items:
            $ref: "#/components/schemas/JobItem"
          title: job items
          minLength: 1
        total:
          type: object
          title: job total
          $ref: "#/components/schemas/MoneyTotal"
          readOnly: true
        notes:
          type: array
          items:
            type: string
          title: job notes
        archived:
          type: string
          title: job is archived?
          enum:
            - "yes"
            - "no"
          default: "no"
          readOnly: true
        status:
          type: string
          title: job status
          enum:
            - draft
            - sent
            - accepted
            - declined
            - finished
          readOnly: true
        finance_status:
          title: finance status
          $ref: "#/components/schemas/FinanceStatus"
        work_type:
          title: work type
          $ref: "#/components/schemas/WorkType"
        checkout_options:
          type: array
          title: checkout options
          items:
            $ref: "#/components/schemas/CheckoutOption"
          minLength: 1
        finance_options:
          type: array
          title: finance options
          items:
            type: object
            $ref: "#/components/schemas/FinanceRate"
        customer_options:
          type: object
          title: customer selected options, updated only via custom endpoint
          $ref: "#/components/schemas/CustomerOptions"
          readOnly: true
        payments:
          type: array
          title: payments
          items:
            $ref: "#/components/schemas/Payment"
          readOnly: true
        sat_note_timeline:
          type: object
          title: customer satisfaction note timeline
          $ref: "#/components/schemas/SatNoteTimeline"
          readOnly: true
        sat_note:
          type: object
          title: customer satisfaction note
          $ref: "#/components/schemas/SatNote"
          readOnly: true
        job_type:
          type: string
          title: job type
          enum:
            - standard
            - solar
        flow_type:
          title: flow type
          $ref: "#/components/schemas/FlowType"
        quoted_to:
          type: string
          title: quoted to
          readOnly: true
        job_documents:
          type: array
          title: job documents
          items:
            $ref: "#/components/schemas/Document"
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        redirect_urls:
          type: object
          title: redirect urls
          $ref: "#/components/schemas/RedirectURLs"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    FlowType:
      type: string
      title: flow type
      enum:
        - "example"
        - "live"
      readOnly: true

    CustomerOptions:
      type: object
      title: customer selected options, updated only via custom endpoint
      required:
        - checkout_option
        - finance_option
      properties:
        checkout_option:
          type: string
          title: checkout option selected by customer
          $ref: "#/components/schemas/CheckoutOption"
        finance_option:
          type: object
          title: finance option selected by customer
          $ref: "#/components/schemas/FinanceRate"
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence

    SatNoteTimeline:
      type: object
      title: customer satisfaction note timeline
      properties:
        sent_at:
          type: string
          title: timestamp sat note is sent
          format: date-time
          readOnly: true
        viewed_at:
          type: string
          title: timestamp sat note is viewed
          format: date-time
          readOnly: true
        signed_at:
          type: string
          title: timestamp sat note is signed
          format: date-time
          readOnly: true

    SatNote:
      type: object
      title: customer satisfaction note and signature details
      required:
        - q_pressure
        - q_easiness
        - q_availability
        - q_application
        - q_advice
        - signature
        - certificate
      properties:
        q_pressure:
          type: string
          title: Did the installer pressure you to apply for finance?
          enum:
            - "no"
            - "somewhat"
            - "yes"
          x-kanda-form-widget: Select
        q_easiness:
          type: string
          title: Do you find it hard to apply for finance with Kanda?
          enum:
            - "no"
            - "somewhat"
            - "yes"
          x-kanda-form-widget: Select
        q_availability:
          type: string
          title: How did you first become aware that finance was available?
          enum:
            - "The installer told me when quoting me"
            - "I saw it advertised by the installer"
            - "I found out when the installer sent me a link via Kanda"
          x-kanda-form-widget: Select
        q_application:
          type: string
          title: Who completed your application for finance?
          enum:
            - "I completed the application myself"
            - "Someone completed the appliation on my behalf"
          x-kanda-form-widget: Select
        q_advice:
          type: string
          title: What advice did the installer give you on your finance application?
          enum:
            - "They just sent me a link to apply"
            - "They told me what rates where available"
            - "They helped me work out my potential repayments"
            - "They completed the application for me"
          x-kanda-form-widget: Select
        q_rate:
          type: string
          title: Were you advised to select a specific finance option by the tradesperson?
          enum:
            - "No - I was not told to choose a specific option"
            - "Yes - I was told to choose a specific option"
          x-kanda-form-widget: Select
        q_saving:
          type: string
          title: Were you told about any potential feed in tariffs, savings, returns or Renewable Heat incentive and do you understand that the actual amounts  you  receive, and your estimated returns/savings were based on varying factors including you own energy consumption and any returns/savings/payback periods are not linked to your repayments on this agreement.
          enum:
            - "Yes I understand"
            - "No I do not understand"
        signature:
          type: object
          title: sat note customer signature
          $ref: "#/components/schemas/Signature"
        certificate:
          type: object
          title: sat note generated document with e-signature
          $ref: "#/components/schemas/Document"

    JobItem:
      type: object
      required:
        - title
        - quantity
        - price
        - vat
      properties:
        title:
          type: string
          title: job item title
          minLength: 1
          x-kanda-form-widget: AutoSizeTextArea
        description:
          type: string
          title: job item description
          minLength: 1
          x-kanda-form-widget: RichTextInput
        quantity:
          title: job item quantity
          $ref: "#/components/schemas/Pence"
        price:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item unit price in pence (vat exclusive)
        vat_rate:
          type: string
          title: vat applicable rate
          enum:
            - "vat_not_set"
            - "exempted"
            - "0%"
            - "5%"
            - "20%"
            - "custom"
          default: "vat_not_set"
          x-kanda-form-widget: SelectionModal
        vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item total vat value in pence
        quote_document:
          type: object
          title: quote document
          $ref: "#/components/schemas/Document"
        style:
          type: string
          title: style
          enum:
            - kanda
            - custom
          default: kanda
          readOnly: true

    MoneyTotal:
      type: object
      title: total
      properties:
        amount_vat_inclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat inclusive)
          readOnly: true
        amount_vat_exclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat exclusive)
          readOnly: true
        amount_vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: total vat value in pence
          readOnly: true

    FinanceStatus:
      type: string
      title: finance status
      enum:
        - not_applied
        - under_review
        - applied_for_finance
        - finance_not_approved
        - financed
        - sat_note_sent
        - sat_note_viewed
        - sat_note_signed
        - sat_note_delayed
        - payout_pending
        - paid
        - finance_cancelled
      default: not_applied
      readOnly: true

    WorkType:
      type: string
      title: work type
      enum:
        - air_conditioning
        - alarm_systems
        - artificial_grass
        - bathrooms_supply_and_fitted
        - bathrooms_supply_only
        - boiler_swap
        - cctv
        - central_heating_system
        - conservatory
        - conservatory_roof
        - decking
        - door_canopy
        - doors
        - driveways
        - electrical_installation
        - ev_charger
        - fencing
        - fireplaces
        - flooring_excluding_carpets
        - garage_doors
        - garden_buildings
        - gates
        - granite_worktops
        - home_study
        - hot_tubs_and_spas
        - kitchens_fitted
        - kitchens_supply_only
        - landscaping
        - loft_boarding
        - painting_and_decorating
        - patios
        - plastering
        - resin_driveways
        - roofing_excl_flat_roofs
        - roofline
        - rendering
        - security_lighting
        - staircases
        - tiling
        - underfloor_heating
        - verandas
        - wall_insulation_and_cladding
        - windows
        - windows_and_doors
        - other

    CheckoutOption:
      type: string
      title: checkout option
      description: checkout option picked by customer, updated only via custom action
      enum:
        - apply_for_finance
        - decline_job
        - pay_on_completion

    Payment:
      type: object
      required:
        - payment_option
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - job
            - charge
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        payment_option:
          type: object
          title: payment option
          $ref: "#/components/schemas/PaymentOption"
        status:
          type: string
          title: payment status
          enum:
            - unpaid
            - pending
            - paid
            - disputed
            - cancelled
            - refunded
          readOnly: true
        flow_type:
          title: flow_type
          $ref: "#/components/schemas/FlowType"
        quoted_to:
          type: string
          title: quoted to
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    PaymentOption:
      type: object
      title: payment option
      required:
        - payment_method
        - amount
      properties:
        payment_method:
          type: string
          title: payment method
          enum:
            - cash
            - card
            - loan
          default: cash
          x-kanda-form-widget: RadioSelect
        amount:
          type: object
          title: payment option amount
          $ref: "#/components/schemas/Money"
        provider:
          type: string
          title: provider name
          $ref: "#/components/schemas/FinanceProvider"

    JobCreditState:
      type: object
      required:
        - id
        - financed
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        has_finance_application:
          type: boolean
          title: job has finance application
          readOnly: true
        current_status:
          type: string
          title: job credit state current status
          enum:
            - not_submitted
            - accepted_sign_document
            - accepted_deposit_required
            - accepted
            - declined
            - referred
            - action_lender
            - action_customer
            - pending
            - finished
            - paid_out
            - cancelled
          readOnly: true

    LeadApplicant:
      type: object
      title: lead applicant details
      required:
        - customer_details
        - employment_details
        - finance_details
      properties:
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: primary employment details
          $ref: "#/components/schemas/EmploymentDetails"
        finance_details:
          type: object
          title: finance details
          $ref: "#/components/schemas/FinanceDetails"

    LeadQuote:
      type: object
      title: lead quote details
      required:
        - work_type
        - work_finished_by
        - description
      properties:
        finance_option:
          type: object
          $ref: "#/components/schemas/FinanceRate"
          title: consumer quote selected finance option
        work_type:
          title: work type
          description: work type for the job
          $ref: "#/components/schemas/WorkType"
        cash_amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: consumer quote cash amount
        credit_amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: consumer quote credit amount
        budget:
          type: object
          $ref: "#/components/schemas/Money"
          title: consumer quote budget
        work_finished_by:
          type: string
          title: consumer quote work finished by
          description: when do you need the work finished by?
          enum:
            - "as soon as possible"
            - "within 1 month"
            - "within 3 months"
            - "within 6 months"
            - "over 6 months"
        description:
          type: string
          title: consumer quote description
          minLength: 1

    Lead:
      type: object
      title: consumer quote
      description: consumer quote
      required:
        - status
        - expired_at
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        lead_applicant:
          type: object
          title: lead applicant
          $ref: "#/components/schemas/LeadApplicant"
        lead_quote:
          type: object
          title: lead quote
          $ref: "#/components/schemas/LeadQuote"
        finance_options:
          type: array
          title: finance options
          items:
            type: object
            $ref: "#/components/schemas/FinanceRate"
        max_credit_amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: lead maximum credit amount
        expired_at:
          type: string
          format: date-time
          title: expired at
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        status:
          type: string
          title: status
          enum:
            - "open"
            - "credit_declined"
            - "quote_declined"
            - "trade_accepted"
            - "trade_declined"
            - "expired"
            - "closed"
        flow_type:
          title: flow_type
          $ref: "#/components/schemas/FlowType"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    Credit:
      type: object
      required:
        - bank_account
        - customer_details
        - employment_details
        - finance_option
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - job
            - charge
          readOnly: true
        provider:
          type: string
          title: provider name
          $ref: "#/components/schemas/FinanceProvider"
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        state:
          type: string
          title: credit state
          enum:
            - accepted
            - declined
            - referred
            - action_lender
            - action_customer
            - pending
            - finished
            - paid_out
            - cancelled
          readOnly: true
        amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: credit amount in pence
          readOnly: true
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        finance_option:
          type: object
          $ref: "#/components/schemas/FinanceRate"
          title: finance option for this credit
          readOnly: true
        bank_account:
          type: object
          title: bank account
          $ref: "#/components/schemas/BankAccount"
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: employment details
          $ref: "#/components/schemas/EmploymentDetails"
        additional_employment_details:
          type: array
          title: additional employment details
          items:
            $ref: "#/components/schemas/EmploymentDetails"
        finance_details:
          type: object
          title: finance details
          $ref: "#/components/schemas/FinanceDetails"
        extra_applicants:
          type: array
          title: extra applicants
          items:
            $ref: "#/components/schemas/ApplicantDetails"
        credit_documents:
          type: array
          title: credit documents
          items:
            $ref: "#/components/schemas/Document"
        signature:
          type: object
          title: elecontronic signature
          $ref: "#/components/schemas/Signature"
        flow_type:
          title: flow_type
          $ref: "#/components/schemas/FlowType"
        quoted_to:
          type: string
          title: quoted to
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    FinanceProvider:
      type: string
      title: provider name
      enum:
        - omni
        - etika
        - propensio
        - allium
        - demo
      default: omni

    BankAccount:
      type: object
      required:
        - account_name
        - account_number
        - sort_code
      properties:
        account_name:
          type: string
          title: account name
          minLength: 1
        account_number:
          type: string
          title: account number
          minLength: 1
          pattern: "^[0-9]{7,8}$"
        sort_code:
          type: string
          title: sort code
          pattern: "^[0-9]{2}[-][0-9]{2}[-][0-9]{2}$"
          x-kanda-form-widget: NumberInput
        months_held:
          type: integer
          title: months held for bank account
          format: int32
          minimum: 0
          maximum: 2147483647

    Gender:
      type: string
      title: gender
      description: gender
      enum:
        - male
        - female

    Title:
      type: string
      title: title
      description: title
      enum:
        - mrs
        - mr
        - miss
        - ms
        - dr

    CustomerDetails:
      type: object
      title: customer details
      required:
        - email
        - gender
        - title
        - first_name
        - last_name
        - date_of_birth
        - marital_status
        - number_of_dependants
        - residential_status
        - current_address
      properties:
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        gender:
          $ref: "#/components/schemas/Gender"
        title:
          $ref: "#/components/schemas/Title"
        first_name:
          type: string
          title: first name
        middle_name:
          type: string
          title: middle name
        last_name:
          type: string
          title: last name
        maiden_name:
          type: string
          title: maiden name
        telephone:
          type: string
          title: telephone
        mobile:
          type: string
          title: mobile
        date_of_birth:
          type: string
          title: date of birth
          description: "Customer's date of birth. Format to use: `yyyy-mm-dd`"
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput
        marital_status:
          type: string
          title: marital status
          enum:
            - widowed
            - other
            - married
            - divorced
            - cohabiting
            - to_be_married
            - separated
            - single
        number_of_dependants:
          type: integer
          title: number of dependants
          format: int32
          minimum: 0
          maximum: 2147483647
        residential_status:
          type: string
          title: residential status
          enum:
            - tenant
            - council_tenant
            - living_with_parents
            - owner
            - owner_without_mortgage
            - homeowner_shared_ownership
            - homeowner_buy_to_let_living_elsewhere
            - lodger
            - armed_forces
        monthly_rent_amount:
          type: object
          title: monthly rent amount
          $ref: "#/components/schemas/Money"
        current_address:
          type: object
          title: current_address
          $ref: "#/components/schemas/Address"
        previous_address_one:
          type: object
          title: previous address one
          $ref: "#/components/schemas/Address"
        previous_address_two:
          type: object
          title: previous address two
          $ref: "#/components/schemas/Address"
        goods_delivery_address:
          type: object
          title: goods delivery address
          $ref: "#/components/schemas/Address"

    EmployedDetails:
      type: object
      title: employed details
      required:
        - employer_name
        - main_occupation
        - months_employed
      properties:
        employed_type:
          type: string
          title: employed type
          enum:
            - "full_time"
            - "part_time"
        employer_name:
          type: string
          title: employer name
          minLength: 1
        main_occupation:
          type: string
          title: main occupation
          minLength: 1
        months_employed:
          type: integer
          format: int32
          title: months employed
          minimum: 1
          maximum: 2147483647
        employer_address:
          type: object
          title: employer address
          $ref: "#/components/schemas/Address"

    SelfEmployedDetails:
      type: object
      title: self employed details
      required:
        - business_name
        - type_of_business
        - months_self_employed
      properties:
        self_employed_type:
          type: string
          title: self employed type
          enum:
            - "full_time"
            - "part_time"
        business_name:
          type: string
          title: business name
          minLength: 1
        type_of_business:
          type: string
          title: type of business
          minLength: 1
        months_self_employed:
          type: integer
          format: int32
          title: months self employed
          minimum: 1
          maximum: 2147483647
        business_address:
          type: object
          title: business address
          $ref: "#/components/schemas/Address"

    NotEmployedDetails:
      type: object
      title: not employed details
      required:
        - source_of_income
        - months_not_employed
      properties:
        source_of_income:
          type: string
          title: source of income
          enum:
            - partner
            - benefits
            - maintenance
            - disabled
            - fulltime_carer
            - homemaker
            - permanent_dla
            - student
            - other
        months_not_employed:
          type: integer
          title: months not employed
          format: int32
          minimum: 0
          maximum: 2147483647

    RetiredDetails:
      type: object
      title: retired details
      required:
        - months_retired
      properties:
        months_retired:
          type: integer
          title: months retired
          format: int32
          minimum: 0
          maximum: 2147483647

    EmploymentDetails:
      type: object
      required:
        - employment_status
        - gross_annual_income
      properties:
        employment_status:
          type: string
          title: employment status
          enum:
            - employed
            - self_employed
            - not_employed
            - retired
        employed_details:
          type: object
          title: employed details
          $ref: "#/components/schemas/EmployedDetails"
        self_employed_details:
          type: object
          title: self_employed details
          $ref: "#/components/schemas/SelfEmployedDetails"
        not_employed_details:
          type: object
          title: not employed details
          $ref: "#/components/schemas/NotEmployedDetails"
        retired_details:
          type: object
          title: retired details
          $ref: "#/components/schemas/RetiredDetails"
        gross_annual_income:
          type: object
          title: gross annual income
          $ref: "#/components/schemas/Money"
        household_annual_income:
          type: object
          title: household annual income
          $ref: "#/components/schemas/Money"

    SignDocument:
      type: object
      title: credit signature document with quote
      required:
        - signature
        - quote
      properties:
        signature:
          type: object
          title: signature
          $ref: "#/components/schemas/Signature"
        quote:
          type: object
          title: quote document to upload to provider
          $ref: "#/components/schemas/Document"

    Signature:
      type: object
      title: electronic signature
      required:
        - signed
        - fingerprint
      properties:
        signed:
          type: string
          title: signed your signature
          enum:
            - "yes"
            - "no"
          default: "no"
        fingerprint:
          type: string
          title: fingerprint reference such as IP

    ApplicantDetails:
      type: object
      title: applicant details
      required:
        - bank_account
        - customer_details
        - employment_details
        - finance_details
      properties:
        bank_account:
          type: object
          title: bank account
          $ref: "#/components/schemas/BankAccount"
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: employment details
          $ref: "#/components/schemas/EmploymentDetails"
        additional_employment_details:
          type: array
          title: additional employment details
          items:
            $ref: "#/components/schemas/EmploymentDetails"
        finance_details:
          type: object
          title: finance details
          $ref: "#/components/schemas/FinanceDetails"

    FinanceDetails:
      type: object
      title: finance details
      properties:
        bankrupcy_or_iva_in_last_5_years:
          type: string
          title: any bankrupcy or IVA in the last 5 years?
          enum:
            - "yes"
            - "no"
        incomes:
          type: array
          title: incomes
          items:
            $ref: "#/components/schemas/Income"
        expenditures:
          type: array
          title: expenditures
          items:
            $ref: "#/components/schemas/Expenditure"

    Income:
      type: object
      title: income
      properties:
        income_type:
          type: string
          enum:
            - "earning_after_tax"
            - "benefits"
            - "pensions"
            - "other_sources_of_income"
        income_type_info:
          type: string
          title: income type info
          enum:
            - applicant
            - household
            - not_specified
          default: applicant
        monthly_amount:
          type: object
          title: monthly amount
          $ref: "#/components/schemas/Money"

    Expenditure:
      type: object
      title: expenditure
      properties:
        expenditure_type:
          type: string
          enum:
            - "mortgage"
            - "rent"
            - "credit_card"
            - "clothes"
            - "council_tax_and_bills"
            - "child_support_agency"
            - "healthcare"
            - "holidays"
        monthly_amount:
          type: object
          title: monthly amount
          $ref: "#/components/schemas/Money"

    Subscription:
      type: object
      properties:
        id:
          type: string
          title: subscription id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        billing:
          type: string
          title: billing reference
          readOnly: true
        billing_status:
          type: string
          title: billing status
          readOnly: true
        mandate:
          type: string
          title: mandate reference
          readOnly: true
        mandate_status:
          type: string
          title: mandate status
          readOnly: true
        authorisation_url:
          type: string
          title: authorisation url to submit a mandate agreement
          readOnly: true
        interval:
          type: string
          title: subscription interval
          enum:
            - monthly
            - yearly
          default: monthly
        day_of_month:
          type: integer
          title: day of month for collection
          format: int32
          minimum: -1
          maximum: 28
        amount:
          type: object
          title: subscription amount
          $ref: "#/components/schemas/Money"
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    InfoValidationEmail:
      type: object
      properties:
        email:
          type: string
          title: email
          readOnly: true
          format: email
          x-go-type: Email
        verdict:
          type: string
          title: verdict
          readOnly: true
          enum:
            - valid
            - risky
            - invalid
          default: valid
        suggestion:
          type: string
          title: suggestion
          readOnly: true
        source:
          type: string
          title: source
          readOnly: true

    JobOverride:
      type: object
      title: job override
      required:
        - action
      properties:
        action:
          type: string
          title: action
          enum:
            - "mark_job_as_sat_note_delayed"
            - "mark_job_as_pending"
            - "mark_job_as_referred"
            - "mark_job_as_action_customer"
            - "mark_job_as_accepted"
            - "mark_job_as_declined"
            - "mark_job_as_cancelled"

    Tally:
      type: object
      title: tally result
      required:
        - id
      properties:
        id:
          type: string
          title: record id
        failure:
          type: string
          title: failure reason

    Cache:
      type: object
      title: cache
      properties:
        id:
          type: string
          title: cache id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true
      additionalProperties:
        type: string

    Rate:
      type: object
      title: rate details
      required:
        - finance_rates
      properties:
        id:
          type: string
          title: rate or comapny id
        finance_rates:
          type: array
          title: finance rates
          items:
            $ref: "#/components/schemas/FinanceRate"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    Analytics:
      type: object
      properties:
        utms:
          type: array
          title: UTM parameters
          items:
            $ref: "#/components/schemas/UTM"

    UTM:
      type: object
      title: UTM parameter
      required:
        - utm_source
      properties:
        utm_source:
          type: string
          title: utm source
          default: kanda
        utm_medium:
          type: string
          title: utm medium
        utm_campaign:
          type: string
          title: utm campaign
        utm_term:
          type: string
          title: utm term
        utm_content:
          type: string
          title: utm content

    Monitor:
      type: object
      title: monitor
      description: internal monitoring with flags
      properties:
        id:
          type: string
          title: flag or company id
        flag:
          type: object
          $ref: "#/components/schemas/Flag"
        flags:
          type: array
          title: flags
          description: flags
          items:
            $ref: "#/components/schemas/Flag"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"

    Flag:
      type: object
      title: flag
      description: flag
      required:
        - level
      properties:
        aid:
          type: string
          title: author id
          description: kanda staff who authored this flag
          readOnly: true
        level:
          type: string
          title: level
          description: flag level
          enum:
            - "green"
            - "yellow"
            - "red"
        remark:
          type: string
          title: remark
          description: internal remark for this flag
        flagged_at:
          type: string
          format: date-time
          title: flagged at
          readOnly: true

    InfoEntity:
      type: object
      title: info entity of resources
      description: info entity of all relevant resources
      required:
        - company
        - credit
        - job
        - monitor
        - onboarding
        - payment
      properties:
        company:
          type: array
          title: relevant companies
          description: relevant companies
          items:
            $ref: "#/components/schemas/Company"
        credit:
          type: array
          title: relevant credits
          description: relevant credits
          items:
            $ref: "#/components/schemas/Credit"
        job:
          type: array
          title: relevant jobs
          description: relevant jobs
          items:
            $ref: "#/components/schemas/Job"
        monitor:
          type: array
          title: relevant monitors
          description: relevant monitors
          items:
            $ref: "#/components/schemas/Monitor"
        onboarding:
          type: array
          title: relevant onboardings
          description: relevant onboardings
          items:
            $ref: "#/components/schemas/Onboarding"
        payment:
          type: array
          title: relevant payments
          description: relevant payments
          items:
            $ref: "#/components/schemas/Payment"

    InfoPartnerBranding:
      type: object
      title: info partner branding
      description: info partner branding
      required:
        - id
        - contact_info
      properties:
        id:
          type: string
          title: partner id
          description: partner id
        contact_info:
          type: object
          title: partner contact info
          $ref: "#/components/schemas/ContactInfo"
        branding:
          type: object
          title: branding
          description: branding style override
          $ref: "#/components/schemas/Branding"

    Event:
      type: object
      required:
        - name
        - event_options
      properties:
        name:
          type: string
          title: event name
          description: >
            Name of the event. 
            Can specify pageview which is a special type of event.
            All other names will be treated as custom events.
          enum:
            - "page-view"
            - "page-closed"
            - "page-error"
            - "signup-attempted"
            - "signup-succeeded"
            - "signup-failed"
            - "login-attempted"
            - "login-succeeded"
            - "login-failed"
            - "button-interacted"
            - "form-filled"
            - "form-submitted"
            - "form-error"
            - "api-attempted"
            - "api-succeeded"
            - "api-failed"
            - "comms-sent"
            - "onboarding-registered"
            - "onboarding-legacy"
            - "onboarding-billing-subscribed"
            - "onboarding-billing-referred"
            - "onboarding-billing-cancelled"
            - "onboarding-director-info-provided"
            - "onboarding-director-verified"
            - "onboarding-director-pending"
            - "onboarding-director-failed"
            - "onboarding-onboarded"
            - "onboarding-insurance-uploaded"
            - "onboarding-contract-signed"
            - "onboarding-completed"
            - "onboarding-verified"
            - "onboarding-rejected"
            - "onboarding-declined"
        event_options:
          type: object
          title: event options
          $ref: "#/components/schemas/EventOptions"
        event_props:
          type: object
          title: event props
          $ref: "#/components/schemas/EventProps"
        purchase:
          type: object
          title: purchase event
          $ref: "#/components/schemas/PurchaseEvent"

    EventOptions:
      type: object
      title: event options
      required:
        - device_id
        - session_id
        - ip
        - time
      properties:
        user_id:
          type: string
          title: user id
        device_id:
          type: string
          title: device id
        session_id:
          type: integer
          title: session id
        ip:
          type: string
          title: ip address associated with the event
        time:
          type: string
          title: event time tracked at
          format: date-time

    EventProps:
      type: object
      title: event props
      properties:
        domain:
          type: string
          title: event domain
        url:
          type: string
          title: event url
        path:
          type: string
          title: event path
        referrer:
          type: string
          title: event referrer
        params:
          type: object
          title: event page search parameters
          additionalProperties: true
        user_agent:
          type: string
          title: event user agent, if applicable
        request_user:
          type: object
          title: request user
          $ref: "#/components/schemas/UserEvent"
        element:
          type: string
          title: element label of component
        element_id:
          type: string
          title: element id of component
        element_path:
          type: string
          title: element path of component
        api:
          type: object
          title: api event
          $ref: "#/components/schemas/ApiEvent"
        info:
          type: object
          title: event info props, in a map object
          additionalProperties: true

    UserEvent:
      type: object
      title: user event
      required:
        - id
        - verified
        - name
        - email
        - provider
      properties:
        id:
          type: string
          title: oid of event user
        cid:
          type: string
          title: cid of event user
        verified:
          type: boolean
          title: event user is verified
        name:
          type: string
          title: event user name
        email:
          type: string
          title: event user email
          format: email
          x-go-type: Email
        mobile:
          type: string
          title: event user mobile
        role:
          type: string
          title: event user role
        provider:
          type: string
          title: event user provider
          enum:
            - system
            - firebase
            - google
            - facebook
          default: system

    ApiEvent:
      type: object
      title: api event
      required:
        - method
        - resource
        - resource_id
        - action
      properties:
        method:
          type: string
          title: method of request
          enum:
            - get
            - post
            - put
            - delete
        resource:
          type: string
          title: resource of request
        resource_id:
          type: string
          title: resource id of request
        action:
          type: string
          title: action of request
        resource_data:
          type: object
          title: resource data
          additionalProperties: true
        error:
          type: string
          title: error of request

    PurchaseEvent:
      type: object
      title: purchase event
      required:
        - kind
        - payment
      properties:
        pid:
          type: string
          title: product id
        kind:
          type: string
          title: purchase kind
        kid:
          type: string
          title: purchase kind id
        payment:
          type: string
          title: product type
          $ref: "#/components/schemas/PaymentOption"

    Error:
      type: object
      required:
        - message
      properties:
        code:
          type: integer
          format: int32
          title: code
          readOnly: true
        message:
          type: string
          title: message
          readOnly: true
