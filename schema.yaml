openapi: "3.0.0"
info:
  version: 1.0.0
  title: Kanda Service - API schema
  description: Kanda Service API Schema

servers:
  - url: https://hub.kanda.co.uk
  - url: https://hub-qa.kanda.co.uk
  - url: http://localhost:8080

paths:
  /api/me:
    post:
      operationId: postMe
      summary: post me info
      tags:
        - AuthUser
      requestBody:
        description: post me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: posted me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      operationId: me
      summary: get me info
      tags:
        - AuthUser
      responses:
        200:
          description: got me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putMe
      summary: put me info
      tags:
        - AuthUser
      requestBody:
        description: put me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/health:
    get:
      operationId: infoHealth
      summary: query system health
      tags:
        - InfoHealth
      responses:
        200:
          description: got system health info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/ghost:
    put:
      operationId: infoGhost
      summary: info ghost mode to return custom token, only available to Kanda staff
      tags:
        - InfoGhost
      requestBody:
        description: info ghost mode to return custom token
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoGhost"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoGhost"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/company:
    get:
      operationId: infoCompany
      summary: query company info with its directors
      tags:
        - InfoCompany
      parameters:
        - in: query
          name: company_name
          schema:
            type: string
          description: query keyword of company name
        - in: query
          name: company_number
          schema:
            type: string
          description: exact company number match
        - in: query
          name: directors
          schema:
            type: boolean
          description: include directors info?
      responses:
        200:
          description: got company info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/customer:
    get:
      operationId: infoCustomer
      summary: query customer info with loose query
      tags:
        - InfoCustomer
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: query keyword of loosely matched customer
      responses:
        200:
          description: got customer info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/auth:
    put:
      operationId: infoAuth
      summary: put auth info by email, send sign-in magic link
      tags:
        - InfoAuth
      requestBody:
        description: put auth info by email, send sign-in magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/verify:
    put:
      operationId: infoVerify
      summary: put verify info by email, send verification magic link
      tags:
        - InfoAuth
      requestBody:
        description: put verify info by email, send verification magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put verify info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/password:
    put:
      operationId: infoPassword
      summary: put password info by email, send password reset magic link
      tags:
        - InfoAuth
      requestBody:
        description: put password info by email, send password reset magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/session:
    put:
      operationId: infoSession
      summary: request a new session token for use in checkout
      tags:
        - InfoAuth
      requestBody:
        description: request a new session token from given code
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoSession"
      responses:
        200:
          description: requested a new session token from given code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoSession"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/claim-account:
    put:
      operationId: infoClaimAccount
      summary: put claim account info by email for legacy user, send verification magic link
      tags:
        - InfoAuth
      requestBody:
        description: put claim account info by email for legacy user, send verification magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put claimed account info with email for legacy user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/legacy-redirect:
    put:
      operationId: infoLegacyRedirect
      summary: request a new checkout link based on given data for redirect flow
      tags:
        - InfoRedirect
      requestBody:
        description: request a new checkout link based on given data for legacy redirect flow
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoLegacyRedirect"
      responses:
        200:
          description: got a new checkout link based on given data for legacy redirect flow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoLegacyRedirect"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoLegacyRedirect"

  /api/info/ip:
    get:
      operationId: infoIP
      summary: query request IPv4 address or fallback to server IP
      tags:
        - InfoIP
      responses:
        200:
          description: got request IPv4 address
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoIP"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/validate-email:
    get:
      operationId: infoValidateEmail
      summary: validate email info
      tags:
        - InfoValidation
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
          description: validate this given email
      responses:
        200:
          description: got email validation info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoValidationEmail"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/cache:
    get:
      operationId: infoGetCache
      summary: get cache info
      tags:
        - InfoCache
      responses:
        200:
          description: got cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: infoPutCache
      summary: put cache info
      tags:
        - InfoCache
      requestBody:
        description: put cache info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cache"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: infoDeleteCache
      summary: delete cache info
      tags:
        - InfoCache
      responses:
        200:
          description: deleted cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company:
    get:
      operationId: getCompanies
      summary: get all companies
      tags:
        - Company
      responses:
        200:
          description: got all companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompany
      summary: post new company
      tags:
        - Company
      requestBody:
        description: post new company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: posted new company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}:
    get:
      operationId: getCompany
      summary: get existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCompany
      summary: put existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        200:
          description: put existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCompany
      summary: delete existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/director-verification:
    get:
      operationId: getCompanyDirectorVerification
      summary: get owner / director info from company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: email
          in: query
          description: filter owner / director by email
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got owner / director info from company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompanyDirectorVerification
      summary: owner / director to submit ID verification
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: email
          in: query
          description: owner / director email
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit owner / director ID verification
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectorVerification"
      responses:
        200:
          description: submitted owner / director ID verification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/director:
    post:
      operationId: directorCompany
      summary: send verification email to all non-verified directors for the company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got approved and verified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/approve:
    post:
      operationId: approveCompany
      summary: >
        kanda staff to approve and verify company users and mark its lifecycle verified
        only allowed when company has already gone through company setup
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got approved and verified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/decline:
    post:
      operationId: declineCompany
      summary: >
        kanda staff to reject or decline company and mark its lifecycle declined,
        apart from improper insurance document, all declines will disable company
        and suspend and disable all users associated with the company.
        for improper insurance document, document will be removed and lifecycle 
        re-calculated so tradesperson can upload a correct one again.
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: reason
          in: query
          description: reject or decline reason
          required: true
          schema:
            type: string
            enum:
              - "rejected_outdated_insurance_document"
              - "rejected_invalid_insurnace_document"
              - "rejected_not_on_trade_body_website"
              - "rejected_contact_us_on_application_error"
              - "declined_ccj_against_business_or_director"
              - "declined_ccj_against_previous_association"
              - "declined_listed_trade_type_not_covered"
              - "declined_several_negatives_against_company"
              - "declined_unable_to_complete_id_checks"
      responses:
        200:
          description: got rejected or declined company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job:
    get:
      operationId: getJobs
      summary: get all jobs
      tags:
        - Job
      responses:
        200:
          description: got all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postJob
      summary: post new job
      tags:
        - Job
      requestBody:
        description: post new job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: posted new job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}:
    get:
      operationId: getJob
      summary: get existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putJob
      summary: put existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: put existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteJob
      summary: delete existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/send:
    post:
      operationId: sendJob
      summary: send existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: sent existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/resend:
    post:
      operationId: resendJob
      summary: resend existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/check:
    post:
      operationId: checkJob
      summary: >
        check existing job credit state, only allowed when job is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: checked existing job credit state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCreditState"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/complete:
    post:
      operationId: completeJob
      summary: >
        complete existing accepted job, only allowed when job status is accepted
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: completed existing accepted job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/archive:
    post:
      operationId: archiveJob
      summary: archive existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: archived existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/unarchive:
    post:
      operationId: unarchiveJob
      summary: unarchive existing already archived job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: unarchived existing already archived job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/apply:
    post:
      operationId: applyJob
      summary: >
        customer to apply existing job with selected options,
        only allowed when job status is sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job apply options selected by customer
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerOptions"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/pay:
    post:
      operationId: payJob
      summary: >
        customer to pay existing job, 
        only allowed when job status is beyond sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job payment option
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentOption"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/viewSatNote:
    post:
      operationId: viewJobSatNote
      summary: >
        customer to view completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with viewed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/signSatNote:
    post:
      operationId: signJobSateNote
      summary: >
        customer to sign completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: customer to sign completed job with satisfaction note
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SatNote"
      responses:
        200:
          description: got existing job with signed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/approve:
    post:
      operationId: approveJobSatNote
      summary: >
        kanda staff to approve signed completed job with satisfaction note,
        only allowed when sat note is signed and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with signed and approved with satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/payout:
    post:
      operationId: payoutJob
      summary: >
        kanda staff to approve a payout for job,
        only allowed when provider approved sat note and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/all/payouts:
    post:
      operationId: payoutsJob
      summary: >
        kanda staff to approve all payouts for job,
        only allowed when provider approved sat note and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: job_type
          in: query
          description: optional job type for clearing particular payouts
          schema:
            type: string
            enum:
              - standard
              - solar
      responses:
        200:
          description: got existing jobs with finance status set to paid
          content:
            application/json:
              schema:
                type: array
                title: tallies
                items:
                  $ref: "#/components/schemas/Tally"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/override:
    post:
      operationId: overrideJob
      summary: >
        kanda staff to override a job status and trigger comms to be sent (if applicable),
        only allowed when job is applied for finance or financed.
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job override to be applied to job
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobOverride"
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/companyInfo:
    post:
      operationId: jobCompanyInfo
      summary: get existing job company info
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job company info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCompanyInfo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment:
    get:
      operationId: getPayments
      summary: get all payments
      tags:
        - Payment
      responses:
        200:
          description: got all payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postPayment
      summary: post new payment
      tags:
        - Payment
      requestBody:
        description: post new payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: posted new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}:
    get:
      operationId: getPayment
      summary: get existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putPayment
      summary: put existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: put existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deletePayment
      summary: delete existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}/{status}:
    post:
      operationId: markPayment
      summary: >
        company to mark existing payment as given status,
        only allowed when payment method is cash
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
        - name: status
          in: path
          description: status update for this payment
          required: true
          schema:
            type: string
            enum:
              - unpaid
              - paid
              - pay_on_completion
      responses:
        200:
          description: got existing payment marked as given status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit:
    get:
      operationId: getCredits
      summary: get all credits
      tags:
        - Credit
      responses:
        200:
          description: got all credits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCredit
      summary: post new credit
      tags:
        - Credit
      requestBody:
        description: post new credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        200:
          description: posted new credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}:
    get:
      operationId: getCredit
      summary: get existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCredit
      summary: put existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        200:
          description: put existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCredit
      summary: delete existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/quote:
    post:
      operationId: quoteCredit
      summary: quote existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: quoted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/apply:
    post:
      operationId: applyCredit
      summary: apply existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: applied existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/check:
    post:
      operationId: checkCredit
      summary: >
        check existing credit and refresh documents,
        only allowed when credit state is set
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: checked existing credit and refreshed documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/sign:
    post:
      operationId: signCredit
      summary: >
        sign existing credit documents,
        only allowed when credit state is accepted
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: signature and quote of existing credit documents
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignDocument"
      responses:
        200:
          description: fetch and update existing credit documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document:
    get:
      operationId: getDocuments
      summary: get all documents
      tags:
        - Document
      responses:
        200:
          description: got all documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postDocument
      summary: post new document
      tags:
        - Document
      requestBody:
        description: post new document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: posted new document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document/{id}:
    get:
      operationId: getDocument
      summary: get existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putDocument
      summary: put existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: put existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteDocument
      summary: delete existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription:
    get:
      operationId: getSubscriptions
      summary: get all subscriptions
      tags:
        - Subscription
      responses:
        200:
          description: got all subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postSubscription
      summary: post new subscription
      tags:
        - Subscription
      requestBody:
        description: post new subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        200:
          description: posted new subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription/{id}:
    get:
      operationId: getSubscription
      summary: get existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putSubscription
      summary: put existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        200:
          description: put existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteSubscription
      summary: delete existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription/{id}/pending:
    post:
      operationId: pendingSubscription
      summary: pending existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/webhook/{provider}:
    get:
      operationId: providerCheckWebhook
      summary: provider check webhook
      tags:
        - Webhook
      parameters:
        - name: provider
          in: path
          description: provider name
          required: true
          schema:
            type: string
            enum:
              - gocardless
              - omni
              - allium
              - stripe
              - veriff
      responses:
        200:
          description: provider webhook accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: providerWebhook
      summary: provider webhook
      tags:
        - Webhook
      parameters:
        - name: provider
          in: path
          description: provider name
          required: true
          schema:
            type: string
            enum:
              - gocardless
              - omni
              - allium
              - stripe
              - veriff
      responses:
        200:
          description: provider webhook accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/runner:
    get:
      operationId: runner
      summary: runner for task event
      tags:
        - Task
      parameters:
        - name: event
          in: query
          description: runner event type
          required: true
          schema:
            type: string
            enum:
              - reminder
              - housekeeping
        - name: task
          in: query
          description: runner task name
          required: true
          schema:
            type: string
            enum:
              - dbv3_ho_application_customer_action_reminder
              - dbv3_ho_application_sat_note_sent_reminder
              - dbv3_ho_application_sign_docs_reminder
              - dbv3_ho_initial_follow_up
              - dbv3_tp_initial_follow_up
              - dbv3_user_company_setup_reminder
              - dbv3_user_verify_director_reminder
              - housekeeping_check_referral_expiry
      responses:
        200:
          description: runner has been completed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    AuthUser:
      type: object
      required:
        - id
        - token
        - name
        - email
        - provider
        - subject
        - audience
        - issuer
        - verified
      properties:
        id:
          type: string
          title: id
          readOnly: true
        token:
          type: string
          title: token
          readOnly: true
        name:
          type: string
          title: name
          minLength: 1
        email:
          type: string
          title: email
          format: email
        role:
          type: string
          title: role
          readOnly: true
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri
        disabled:
          type: boolean
          title: disabled
          readOnly: true
        provider:
          type: string
          title: provider
          readOnly: true
        subject:
          type: string
          title: subject
          readOnly: true
        audience:
          type: string
          title: audience
          readOnly: true
        issuer:
          type: string
          title: issuer
          readOnly: true
        verified:
          type: boolean
          title: email verified

    InfoMe:
      type: object
      title: info me
      properties:
        email:
          type: string
          title: email
          format: email
        name:
          type: string
          title: name
          minLength: 1
        phone:
          type: string
          title: phone
          minLength: 1
        photoURL:
          type: string
          title: photo URL
          format: uri

    InfoGhost:
      type: object
      title: info ghost
      required:
        - email
      properties:
        email:
          type: string
          title: email for ghosted user
          format: email
        custom_role:
          type: string
          title: custom role set for ghosted user
        custom_token:
          type: string
          title: custom token
          readOnly: true
        bearer_token:
          type: string
          title: bearer token

    InfoAuth:
      type: object
      title: info auth
      required:
        - email
      properties:
        email:
          type: string
          title: email
          format: email
        continue_url:
          type: string
          title: continue url
          format: uri

    InfoSession:
      type: object
      title: info session
      required:
        - code
      properties:
        code:
          type: string
          title: code
        custom_token:
          type: string
          title: custom token used for sign in exchange

    InfoLegacyRedirect:
      type: object
      title: info legacy redirect
      required:
        - reference
        - price
        - email
        - description_of_goods
        - enterprise_id
      properties:
        reference:
          type: string
          title: title
          description: >
            The reference for the loan application.
            Is mainly used for tracking loan applications
        price:
          type: integer
          format: int32
          title: price in pence
          description: >
            The price of the loan in pennies.
            Ex.: If the price is 2,450.99, the value should be passed as 245099.
          $ref: "#/components/schemas/Pence"
        email:
          type: string
          title: email
          format: email
          description: The email of the customer applying for the loan
        description_of_goods:
          type: string
          title: description of goods
          description: The description of the goods.
        enterprise_id:
          type: string
          title: enterprise id
          description: Your enterprise ID
        first_name:
          type: string
          title: first name
          description: The first name of the customer applying for the loan
        last_name:
          type: string
          title: last name
          description: The last name of the customer applying for the loan
        mobile:
          type: string
          title: mobile
          description: The mobile number of the customer applying for the loan
        deposit:
          type: integer
          format: int32
          title: Deposit in pence
          $ref: "#/components/schemas/Pence"
        redirect_urls:
          type: object
          title: redirect urls
          $ref: "#/components/schemas/RedirectURLs"
        enabled_rates:
          type: array
          title: Enabled rates
          description: specified the enabled rates for the loan
          items:
            type: string

    InfoIP:
      type: object
      required:
        - ipv4
      properties:
        ipv4:
          type: string
          title: ipv4 address

    Money:
      type: object
      required:
        - amount
      properties:
        currency:
          type: string
          title: currency
          enum:
            - GBP
          default: GBP
        amount:
          title: amount in pence
          $ref: "#/components/schemas/Pence"

    Pence:
      type: integer
      format: int32
      title: amount / number in pence
      minimum: 0
      maximum: 2147483647

    Metadata:
      type: object
      required:
        - liveness
        - created_at
        - updated_at
      properties:
        liveness:
          type: boolean
          title: liveness
          readOnly: true
        created_at:
          type: string
          format: date-time
          title: created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: updated at
          readOnly: true

    Address:
      type: object
      required:
        - line_1
        - city
        - country
        - postcode
      properties:
        building_number:
          type: string
          title: building number
          minLength: 1
        building_name:
          type: string
          title: building name
          minLength: 1
        line_1:
          type: string
          title: line 1
          minLength: 1
        line_2:
          type: string
          title: line 2
          minLength: 1
        city:
          type: string
          title: city / town
          minLength: 1
        county:
          type: string
          title: county / state
          minLength: 1
        country:
          type: string
          title: country
          minLength: 1
        postcode:
          type: string
          title: postcode / zipcode
          pattern: "^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$"
          x-kanda-form-widget: Postcode
        months_at_address:
          type: integer
          title: months at address
          format: int32
          minimum: 0
          maximum: 2147483647

    InfoCompany:
      type: object
      properties:
        id:
          type: string
          title: company info unique id
          readOnly: true
        sole_trader:
          type: object
          title: sole trader info
          $ref: "#/components/schemas/SoleTraderInfo"
          readOnly: true
        limited_company:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
          readOnly: true
        directors:
          type: array
          title: directors info
          items:
            $ref: "#/components/schemas/UserType"
          readOnly: true
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Company:
      type: object
      required:
        - company_type
      properties:
        id:
          type: string
          title: company unique id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        emails:
          type: array
          items:
            type: string
            format: email
          title: emails for user who has api access
          readOnly: true
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserType"
          title: users
        company_info:
          type: object
          $ref: "#/components/schemas/CompanyInfo"
          title: company info
        solar_company_info:
          type: object
          $ref: "#/components/schemas/SolarCompanyInfo"
          title: solar company info
        company_type:
          type: string
          enum:
            - limited_company
            - sole_trader
          title: company type
          x-kanda-form-widget: RadioSelect
        limited_company_info:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
        sole_trader_info:
          type: object
          title: sole trader info
          $ref: "#/components/schemas/SoleTraderInfo"
        available_rates:
          type: array
          items:
            $ref: "#/components/schemas/AvailableRate"
          title: available rates
        quote_preference:
          type: string
          title: quote preference
          enum:
            - no_preference
            - kanda
            - custom
          default: no_preference
        skip_deposit:
          type: string
          title: company is allowed to take own deposit
          enum:
            - "Yes"
            - "No"
          default: "No"
        lifecycle:
          type: string
          title: company lifecycle state
          enum:
            - registered
            - subscribed
            - director_info_provided
            - onboarded
            - insurance_uploaded
            - completed_setup
            - verified
            - declined
          default: registered
          readOnly: true
        billing:
          type: string
          title: company billing
          enum:
            - legacy
            - trial
            - pending
            - referred
            - subscribed
            - recurring_payment_failed_1
            - recurring_payment_failed_2
            - recurring_payment_failed_3
            - suspended
            - cancelled
          default: legacy
          readOnly: true
        referral_code:
          type: string
          title: optional referral code used for the sign up
        company_logo:
          type: object
          title: company logo document
          $ref: "#/components/schemas/Document"
        bank_account:
          type: object
          title: bank account to be shown to customer if paid by cash / bank transfer
          $ref: "#/components/schemas/BankAccount"
        contact_info:
          type: object
          title: company contact info shared with customers
          $ref: "#/components/schemas/ContactInfo"
        redirect_urls:
          type: object
          title: redirects
          $ref: "#/components/schemas/RedirectURLs"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    SolarCompanyInfo:
      type: object
      required:
        - epvs_registration_number
        - solar_trade_association
        - solar_trade_association_number
        - electrical_trade_association
      properties:
        epvs_registration_number:
          type: string
          title: EPVS registration number
          minLength: 1
        solar_trade_association:
          type: string
          enum:
            - "msc"
            - "heis"
            - "recc"
          title: solar trade association
          x-kanda-form-widget: Select
        solar_trade_association_number:
          type: string
          title: solar trade association number
          minLength: 1
        electrical_trade_association:
          type: string
          enum:
            - "niceic"
            - "napit"
            - "none"
          title: electrical trade association
          x-kanda-form-widget: Select
        electrical_trade_association_number:
          type: string
          title: electrical trade association number
          minLength: 1

    CompanyInfo:
      type: object
      required:
        - trade_type
        - trade_type_name
        - trade_body
        - trade_body_name
        - warranty_length
        - average_monthly_jobs
        - average_job_value
        - use_subcontractor
      properties:
        trade_type:
          type: string
          enum:
            - air_conditioning
            - bathrooms
            - battery_storage
            - blinds_and_shutters
            - carpentry
            - cctv_and_security_installations
            - conservatories
            - decking
            - driveways_and_patios
            - electrician
            - ev_charger_installer
            - fencing
            - fireplaces
            - fitted_bedroom_furniture
            - floor_layer
            - garage_doors
            - garden_rooms
            - gas_engineer
            - gates
            - heat_pumps
            - heating_systems
            - kitchen_fitter
            - landscaping
            - plumbing
            - resin_driveways
            - roofing__excluding_flat_roofs
            - security_systems
            - tiler
            - verandas
            - windows_and_doors
            - multi_trade
            - other_trade
          title: trade type
          x-kanda-form-widget: Select
        trade_type_name:
          type: string
          title: trade type name
          minLength: 1
        trade_body:
          type: string
          enum:
            - "none"
            - "acrib"
            - "aphc"
            - "assure"
            - "certass"
            - "elecsa"
            - "fensa"
            - "feta"
            - "gas_safe"
            - "hetas"
            - "napit"
            - "nfrc"
            - "niceic"
            - "other"
          title: trade body
          x-kanda-form-widget: Select
        trade_body_name:
          type: string
          title: trade body name
          minLength: 1
        trade_body_number:
          type: string
          title: trade body number
          minLength: 1
        warranty_length:
          type: integer
          title: warranty length
          minimum: 1
        average_monthly_jobs:
          type: integer
          title: average monthly jobs
          minimum: 1
          maximum: 2147483647
        average_job_value:
          $ref: "#/components/schemas/Pence"
          title: average job value in pence
          minimum: 1
        use_subcontractor:
          type: string
          title: use subcontractor?
          enum:
            - "yes"
            - "no"
          x-kanda-form-widget: Select
        insurance_document:
          type: object
          title: insurance document
          $ref: "#/components/schemas/Document"
        contract_agreement:
          type: object
          title: contract agreement
          $ref: "#/components/schemas/ContractAgreement"

    ContractAgreement:
      type: object
      title: contract agreement
      properties:
        contract:
          type: object
          title: contract
          $ref: "#/components/schemas/Document"
        agreed_terms_and_conditions:
          type: string
          title: agreed terms and conditions
          enum:
            - "yes"
            - "no"
          default: "no"
        agreed_to_become_iar_of_kanda:
          type: string
          title: agreed to become IAR of Kanda
          enum:
            - "yes"
            - "no"
          default: "no"
        print_name:
          type: string
          title: print name
          minLength: 1
        signed_at:
          type: string
          title: signed at
          format: date-time
          readOnly: true

    ContactInfo:
      type: object
      title: contact info
      properties:
        contact_name:
          type: string
          title: contact name
        contact_email:
          type: string
          title: contact email
          format: email
        contact_phone:
          type: string
          title: contact phone number
          x-kanda-form-widget: PhoneNumberInput
        contact_address:
          type: object
          title: contact address
          $ref: "#/components/schemas/Address"
        trading_name:
          type: string
          title: trading name

    Document:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          title: document id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        name:
          type: string
          title: document name
          minLength: 1
        content:
          type: string
          format: base64
          title: document content
          maxLength: 1048487
          x-kanda-form-widget: File
        mimetype:
          type: string
          title: document mime type
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    LimitedCompanyInfo:
      type: object
      required:
        - company_name
        - company_address
        - company_number
      properties:
        company_name:
          type: string
          title: company name
          minLength: 1
          x-kanda-form-widget: Company
        company_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: company address
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address
        company_number:
          type: string
          title: company number
          minLength: 1
        vat_number:
          type: string
          title: vat number
          pattern: "^(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})$"
          minLength: 1

    SoleTraderInfo:
      type: object
      required:
        - trading_name
        - trading_address
      properties:
        national_insurance_number:
          type: string
          title: national insurance number
          minLength: 1
        trading_name:
          type: string
          title: trading name
          minLength: 1
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address

    DirectorVerification:
      type: object
      required:
        - first_name
        - last_name
        - email
        - mobile
        - home_address
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1
        date_of_birth:
          type: string
          title: date of birth
          format: date-time
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address

    DirectorInfo:
      type: object
      required:
        - home_address
      properties:
        verification_status:
          type: string
          enum:
            - not_verified
            - verification_submitted
            - verification_declined
            - verified
          title: verification status
          readOnly: true
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address
        date_of_birth:
          type: string
          title: date of birth

    UserType:
      type: object
      required:
        - role
        - first_name
        - email
      properties:
        director_info:
          type: object
          $ref: "#/components/schemas/DirectorInfo"
          title: director info
        role:
          type: string
          enum:
            - company-admin
            - company-manager
            - company-staff
          title: company role
          x-kanda-form-widget: RadioSelect
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1

    AvailableRate:
      type: object
      required:
        - name
        - fee
        - enabled
        - provider
      properties:
        name:
          type: string
          title: name
          minLength: 1
        fee:
          type: integer
          title: fee
          minimum: 0
          maximum: 2147483647
        enabled:
          type: boolean
          title: enabled?
        provider:
          type: string
          title: provider
          $ref: "#/components/schemas/FinanceProvider"

    Customer:
      type: object
      required:
        - first_name
        - last_name
        - email
        - phone
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          title: email
        phone:
          type: string
          title: phone number
          minLength: 1
        address:
          type: object
          $ref: "#/components/schemas/Address"

    RedirectURLs:
      type: object
      title: redirect urls
      properties:
        checkout_url:
          type: string
          title: checkout url
        success_url:
          type: string
          title: success url
        failure_url:
          type: string
          title: failure url
        webhook_url:
          type: string
          title: webhook url

    JobCompanyInfo:
      type: object
      title: job company info
      required:
        - company_name
      properties:
        company_name:
          type: string
          title: company name
          readOnly: true
        company_logo:
          type: object
          title: company logo
          $ref: "#/components/schemas/Document"
        vat_number:
          type: string
          title: vat number
          readOnly: true
        bank_account:
          type: object
          title: company bank account
          $ref: "#/components/schemas/BankAccount"
          readOnly: true
        contact_info:
          type: object
          title: job company contact info
          $ref: "#/components/schemas/ContactInfo"

    Job:
      type: object
      required:
        - title
        - deposit_type
        - deposit_value
        - job_items
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        title:
          type: string
          title: job title
          minLength: 1
        description:
          type: string
          title: job description
          minLength: 1
        deposit_type:
          type: string
          title: deposit type
          enum:
            - no_deposit
            - partial_deposit
            - fixed_deposit
          default: no_deposit
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        job_items:
          type: array
          items:
            $ref: "#/components/schemas/JobItem"
          title: job items
          minLength: 1
        total:
          type: object
          title: job total
          $ref: "#/components/schemas/MoneyTotal"
          readOnly: true
        notes:
          type: array
          items:
            type: string
          title: job notes
        archived:
          type: string
          title: job is archived?
          enum:
            - "yes"
            - "no"
          default: "no"
          readOnly: true
        status:
          type: string
          title: job status
          enum:
            - draft
            - sent
            - accepted
            - declined
            - finished
          readOnly: true
        finance_status:
          title: finance status
          $ref: "#/components/schemas/FinanceStatus"
        checkout_options:
          type: array
          title: checkout options
          items:
            $ref: "#/components/schemas/CheckoutOption"
          minLength: 1
        finance_options:
          type: array
          title: finance options
          items:
            type: string
        customer_options:
          type: object
          title: customer selected options, updated only via custom endpoint
          $ref: "#/components/schemas/CustomerOptions"
          readOnly: true
        payments:
          type: array
          title: payments
          items:
            $ref: "#/components/schemas/Payment"
          readOnly: true
        sat_note_timeline:
          type: object
          title: customer satisfaction note timeline
          $ref: "#/components/schemas/SatNoteTimeline"
          readOnly: true
        sat_note:
          type: object
          title: customer satisfaction note
          $ref: "#/components/schemas/SatNote"
          readOnly: true
        job_type:
          type: string
          title: job type
          enum:
            - standard
            - solar
        job_documents:
          type: array
          title: job documents
          items:
            $ref: "#/components/schemas/Document"
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        redirect_urls:
          type: object
          title: redirect urls
          $ref: "#/components/schemas/RedirectURLs"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    CustomerOptions:
      type: object
      title: customer selected options, updated only via custom endpoint
      required:
        - checkout_option
        - finance_option
      properties:
        checkout_option:
          type: string
          title: checkout option selected by customer
          $ref: "#/components/schemas/CheckoutOption"
        finance_option:
          type: string
          title: finance option selected by customer
          description: finance option
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence

    SatNoteTimeline:
      type: object
      title: customer satisfaction note timeline
      properties:
        sent_at:
          type: string
          title: timestamp sat note is sent
          format: date-time
          readOnly: true
        viewed_at:
          type: string
          title: timestamp sat note is viewed
          format: date-time
          readOnly: true
        signed_at:
          type: string
          title: timestamp sat note is signed
          format: date-time
          readOnly: true

    SatNote:
      type: object
      title: customer satisfaction note and signature details
      required:
        - q_pressure
        - q_easiness
        - q_availability
        - q_application
        - q_advice
        - signature
        - certificate
      properties:
        q_pressure:
          type: string
          title: Did the installer pressure you to apply for finance?
          enum:
            - "no"
            - "somewhat"
            - "yes"
          x-kanda-form-widget: Select
        q_easiness:
          type: string
          title: Do you find it hard to apply for finance with Kanda?
          enum:
            - "no"
            - "somewhat"
            - "yes"
          x-kanda-form-widget: Select
        q_availability:
          type: string
          title: How did you first become aware that finance was available?
          enum:
            - "The installer told me when quoting me"
            - "I saw it advertised by the installer"
            - "I found out when the installer sent me a link via Kanda"
          x-kanda-form-widget: Select
        q_application:
          type: string
          title: Who completed your application for finance?
          enum:
            - "I completed the application myself"
            - "Someone completed the appliation on my behalf"
          x-kanda-form-widget: Select
        q_advice:
          type: string
          title: What advice did the installer give you on your finance application?
          enum:
            - "They just sent me a link to apply"
            - "They told me what rates where available"
            - "They helped me work out my potential repayments"
            - "They completed the application for me"
          x-kanda-form-widget: Select
        q_saving:
          type: string
          title: Were you told about any potential feed in tariffs, savings, returns or Renewable Heat incentive and do you understand that the actual amounts  you  receive, and your estimated returns/savings were based on varying factors including you own energy consumption and any returns/savings/payback periods are not linked to your repayments on this agreement.
          enum:
            - "Yes I understand"
            - "No I do not understand"
        signature:
          type: object
          title: sat note customer signature
          $ref: "#/components/schemas/Signature"
        certificate:
          type: object
          title: sat note generated document with e-signature
          $ref: "#/components/schemas/Document"

    JobItem:
      type: object
      required:
        - title
        - quantity
        - price
        - vat
      properties:
        title:
          type: string
          title: job item title
          minLength: 1
        description:
          type: string
          title: job item description
          minLength: 1
          x-kanda-form-widget: TextAreaInput
        quantity:
          title: job item quantity
          $ref: "#/components/schemas/Pence"
        price:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item unit price in pence (vat exclusive)
        vat_rate:
          type: string
          title: vat applicable rate
          enum:
            - "vat_not_set"
            - "exempted"
            - "0%"
            - "5%"
            - "20%"
            - "custom"
          default: "vat_not_set"
        vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item total vat value in pence
        quote_document:
          type: object
          title: quote document
          $ref: "#/components/schemas/Document"
        style:
          type: string
          title: style
          enum:
            - kanda
            - custom
          default: kanda
          readOnly: true

    MoneyTotal:
      type: object
      title: total
      properties:
        amount_vat_inclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat inclusive)
          readOnly: true
        amount_vat_exclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat exclusive)
          readOnly: true
        amount_vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: total vat value in pence
          readOnly: true

    FinanceStatus:
      type: string
      title: finance status
      enum:
        - not_applied
        - under_review
        - applied_for_finance
        - finance_not_approved
        - financed
        - sat_note_sent
        - sat_note_viewed
        - sat_note_signed
        - payout_pending
        - paid
        - finance_cancelled
      default: not_applied
      readOnly: true

    CheckoutOption:
      type: string
      title: checkout option
      description: checkout option picked by customer, updated only via custom action
      enum:
        - apply_for_finance
        - decline_job
        - pay_on_completion

    Payment:
      type: object
      required:
        - payment_option
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - job
            - charge
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        payment_option:
          type: object
          title: payment option
          $ref: "#/components/schemas/PaymentOption"
        status:
          type: string
          title: payment status
          enum:
            - unpaid
            - pending
            - paid
            - disputed
            - cancelled
            - refunded
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    PaymentOption:
      type: object
      title: payment option
      required:
        - payment_method
        - amount
      properties:
        payment_method:
          type: string
          title: payment method
          enum:
            - cash
            - card
            - loan
          default: cash
          x-kanda-form-widget: RadioSelect
        amount:
          type: object
          title: payment option amount
          $ref: "#/components/schemas/Money"
        provider:
          type: string
          title: provider name
          $ref: "#/components/schemas/FinanceProvider"

    JobCreditState:
      type: object
      required:
        - id
        - financed
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        has_finance_application:
          type: boolean
          title: job has finance application
          readOnly: true
        current_status:
          type: string
          title: job credit state current status
          enum:
            - not_submitted
            - accepted_sign_document
            - accepted_deposit_required
            - accepted
            - declined
            - referred
            - action_lender
            - action_customer
            - pending
            - finished
            - paid_out
            - cancelled
          readOnly: true

    Credit:
      type: object
      required:
        - bank_account
        - customer_details
        - employment_details
        - finance_option
      properties:
        id:
          type: string
          title: payment id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        kid:
          type: string
          title: internal kind id
          readOnly: true
        kind:
          type: string
          title: internal kind
          enum:
            - job
            - charge
          readOnly: true
        provider:
          type: string
          title: provider name
          $ref: "#/components/schemas/FinanceProvider"
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        state:
          type: string
          title: credit state
          enum:
            - accepted
            - declined
            - referred
            - action_lender
            - action_customer
            - pending
            - finished
            - paid_out
            - cancelled
          readOnly: true
        amount:
          type: object
          $ref: "#/components/schemas/Money"
          title: credit amount in pence
          readOnly: true
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        finance_option:
          type: string
          title: finance option for this credit
          description: finance option
          readOnly: true
        bank_account:
          type: object
          title: bank account
          $ref: "#/components/schemas/BankAccount"
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: employment details
          $ref: "#/components/schemas/EmploymentDetails"
        additional_employment_details:
          type: array
          title: additional employment details
          items:
            $ref: "#/components/schemas/EmploymentDetails"
        finance_details:
          type: object
          title: finance details
          $ref: "#/components/schemas/FinanceDetails"
        extra_applicants:
          type: array
          title: extra applicants
          items:
            $ref: "#/components/schemas/ApplicantDetails"
        credit_documents:
          type: array
          title: credit documents
          items:
            $ref: "#/components/schemas/Document"
        signature:
          type: object
          title: elecontronic signature
          $ref: "#/components/schemas/Signature"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    FinanceProvider:
      type: string
      title: provider name
      enum:
        - omni
        - propensio
        - allium
      default: omni

    BankAccount:
      type: object
      required:
        - account_name
        - account_number
        - sort_code
      properties:
        account_name:
          type: string
          title: account name
          minLength: 1
        account_number:
          type: string
          title: account number
          minLength: 1
          pattern: "^[0-9]{7,8}$"
          x-kanda-form-widget: NumberFormatInput
        sort_code:
          type: string
          title: sort code
          pattern: "^[0-9]{2}[-][0-9]{2}[-][0-9]{2}$"
          x-kanda-form-widget: NumberInput
        months_held:
          type: integer
          title: months held for bank account
          format: int32
          minimum: 0
          maximum: 2147483647

    CustomerDetails:
      type: object
      title: customer details
      required:
        - email
        - gender
        - title
        - first_name
        - last_name
        - date_of_birth
        - marital_status
        - number_of_dependants
        - residential_status
        - current_address
      properties:
        email:
          type: string
          title: email
          format: email
        gender:
          type: string
          title: gender
          enum:
            - male
            - female
        title:
          type: string
          title: title
          enum:
            - mrs
            - mr
            - miss
            - ms
            - dr
        first_name:
          type: string
          title: first name
        middle_name:
          type: string
          title: middle name
        last_name:
          type: string
          title: last name
        maiden_name:
          type: string
          title: maiden name
        telephone:
          type: string
          title: telephone
        mobile:
          type: string
          title: mobile
        date_of_birth:
          type: string
          title: date of birth
          format: date-time
          description: "Customer's date of birth. Format to use: `dd/mm/yyyy`"
        marital_status:
          type: string
          title: marital status
          enum:
            - widowed
            - other
            - married
            - divorced
            - cohabiting
            - to_be_married
            - separated
            - single
        number_of_dependants:
          type: integer
          title: number of dependants
          format: int32
          minimum: 0
          maximum: 2147483647
        residential_status:
          type: string
          title: residential status
          enum:
            - tenant
            - council_tenant
            - living_with_parents
            - owner
            - owner_without_mortgage
            - homeowner_shared_ownership
            - homeowner_buy_to_let_living_elsewhere
            - lodger
            - armed_forces
        monthly_rent_amount:
          type: object
          title: monthly rent amount
          $ref: "#/components/schemas/Money"
        current_address:
          type: object
          title: current_address
          $ref: "#/components/schemas/Address"
        previous_address_one:
          type: object
          title: previous address one
          $ref: "#/components/schemas/Address"
        previous_address_two:
          type: object
          title: previous address two
          $ref: "#/components/schemas/Address"
        goods_delivery_address:
          type: object
          title: goods delivery address
          $ref: "#/components/schemas/Address"

    EmployedDetails:
      type: object
      title: employed details
      required:
        - employer_name
        - main_occupation
        - months_employed
      properties:
        employed_type:
          type: string
          title: employed type
          enum:
            - "full_time"
            - "part_time"
        employer_name:
          type: string
          title: employer name
          minLength: 1
        main_occupation:
          type: string
          title: main occupation
          minLength: 1
        months_employed:
          type: integer
          format: int32
          title: months employed
          minimum: 1
          maximum: 2147483647
        employer_address:
          type: object
          title: employer address
          $ref: "#/components/schemas/Address"

    SelfEmployedDetails:
      type: object
      title: self employed details
      required:
        - business_name
        - type_of_business
        - months_self_employed
      properties:
        self_employed_type:
          type: string
          title: self employed type
          enum:
            - "full_time"
            - "part_time"
        business_name:
          type: string
          title: business name
          minLength: 1
        type_of_business:
          type: string
          title: type of business
          minLength: 1
        months_self_employed:
          type: integer
          format: int32
          title: months self employed
          minimum: 1
          maximum: 2147483647
        business_address:
          type: object
          title: business address
          $ref: "#/components/schemas/Address"

    NotEmployedDetails:
      type: object
      title: not employed details
      required:
        - source_of_income
      properties:
        source_of_income:
          type: string
          title: source of income
          enum:
            - partner
            - benefits
            - maintenance
            - disabled
            - fulltime_carer
            - homemaker
            - permanent_dla
            - student
            - other

    EmploymentDetails:
      type: object
      required:
        - employment_status
        - gross_annual_income
      properties:
        employment_status:
          type: string
          title: employment status
          enum:
            - employed
            - self_employed
            - not_employed
            - retired
        employed_details:
          type: object
          title: employed details
          $ref: "#/components/schemas/EmployedDetails"
        self_employed_details:
          type: object
          title: self_employed details
          $ref: "#/components/schemas/SelfEmployedDetails"
        not_employed_details:
          type: object
          title: not employed details
          $ref: "#/components/schemas/NotEmployedDetails"
        gross_annual_income:
          type: object
          title: gross annual income
          $ref: "#/components/schemas/Money"
        household_annual_income:
          type: object
          title: household annual income
          $ref: "#/components/schemas/Money"

    SignDocument:
      type: object
      title: credit signature document with quote
      required:
        - signature
        - quote
      properties:
        signature:
          type: object
          title: signature
          $ref: "#/components/schemas/Signature"
        quote:
          type: object
          title: quote document to upload to provider
          $ref: "#/components/schemas/Document"

    Signature:
      type: object
      title: electronic signature
      required:
        - signed
        - fingerprint
      properties:
        signed:
          type: string
          title: signed your signature
          enum:
            - "yes"
            - "no"
          default: "no"
        fingerprint:
          type: string
          title: fingerprint reference such as IP

    ApplicantDetails:
      type: object
      title: applicant details
      required:
        - bank_account
        - customer_details
        - employment_details
        - finance_details
      properties:
        bank_account:
          type: object
          title: bank account
          $ref: "#/components/schemas/BankAccount"
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: employment details
          $ref: "#/components/schemas/EmploymentDetails"
        additional_employment_details:
          type: array
          title: additional employment details
          items:
            $ref: "#/components/schemas/EmploymentDetails"
        finance_details:
          type: object
          title: finance details
          $ref: "#/components/schemas/FinanceDetails"

    FinanceDetails:
      type: object
      title: finance details
      properties:
        bankrupcy_or_iva_in_last_5_years:
          type: string
          title: any bankrupcy or IVA in the last 5 years?
          enum:
            - "yes"
            - "no"
        incomes:
          type: array
          title: incomes
          items:
            $ref: "#/components/schemas/Income"
        expenditures:
          type: array
          title: expenditures
          items:
            $ref: "#/components/schemas/Expenditure"

    Income:
      type: object
      title: income
      properties:
        income_type:
          type: string
          enum:
            - "benefits"
            - "other_sources_of_income"
            - "pensions"
            - "earning_after_tax"
        income_type_info:
          type: string
          title: income type info
          enum:
            - applicant
            - household
            - not_specified
          default: applicant
        monthly_amount:
          type: object
          title: monthly amount
          $ref: "#/components/schemas/Money"

    Expenditure:
      type: object
      title: expenditure
      properties:
        expenditure_type:
          type: string
          enum:
            - "mortgage"
            - "rent"
            - "credit_card"
            - "clothes"
            - "council_tax_and_bills"
            - "child_support_agency"
            - "healthcare"
            - "holidays"
        monthly_amount:
          type: object
          title: monthly amount
          $ref: "#/components/schemas/Money"

    Subscription:
      type: object
      properties:
        id:
          type: string
          title: subscription id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        billing:
          type: string
          title: billing reference
          readOnly: true
        billing_status:
          type: string
          title: billing status
          readOnly: true
        mandate:
          type: string
          title: mandate reference
          readOnly: true
        mandate_status:
          type: string
          title: mandate status
          readOnly: true
        authorisation_url:
          type: string
          title: authorisation url to submit a mandate agreement
          readOnly: true
        interval:
          type: string
          title: subscription interval
          enum:
            - monthly
            - yearly
          default: monthly
        day_of_month:
          type: integer
          title: day of month for collection
          format: int32
          minimum: -1
          maximum: 28
        amount:
          type: object
          title: subscription amount
          $ref: "#/components/schemas/Money"
          readOnly: true
        xid:
          type: string
          title: external reference id
          readOnly: true
        xref:
          type: string
          title: external reference
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    InfoValidationEmail:
      type: object
      properties:
        email:
          type: string
          title: email
          readOnly: true
          format: email
        verdict:
          type: string
          title: verdict
          readOnly: true
          enum:
            - valid
            - risky
            - invalid
          default: valid
        suggestion:
          type: string
          title: suggestion
          readOnly: true
        source:
          type: string
          title: source
          readOnly: true

    JobOverride:
      type: object
      title: job override
      required:
        - action
      properties:
        action:
          type: string
          title: action
          enum:
            - "mark_job_as_pending"
            - "mark_job_as_accepted"
            - "mark_job_as_declined"
            - "mark_job_as_cancelled"

    Tally:
      type: object
      title: tally result
      required:
        - id
      properties:
        id:
          type: string
          title: record id
        failure:
          type: string
          title: failure reason

    Cache:
      type: object
      properties:
        id:
          type: string
          title: cache id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true
      additionalProperties:
        type: string

    Error:
      type: object
      required:
        - message
      properties:
        code:
          type: integer
          format: int32
          title: code
          readOnly: true
        message:
          type: string
          title: message
          readOnly: true
