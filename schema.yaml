openapi: "3.0.0"
info:
  version: 1.0.0
  title: Kanda Service - API schema
  description: Kanda Service API Schema

servers:
  - url: https://hub.kanda.co.uk
  - url: https://hub-qa.kanda.co.uk
  - url: http://localhost:8080

paths:
  /api/me:
    post:
      operationId: postMe
      summary: post me info
      tags:
        - AuthUser
      parameters:
        - $ref: "#/components/parameters/x_kanda_protected"
      requestBody:
        description: post me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: posted me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      operationId: me
      summary: get me info
      tags:
        - AuthUser
      responses:
        200:
          description: got me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putMe
      summary: put me info
      tags:
        - AuthUser
      requestBody:
        description: put me info details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoMe"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/health:
    get:
      operationId: infoHealth
      summary: query system health
      tags:
        - InfoHealth
      responses:
        200:
          description: got system health info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/ghost:
    put:
      operationId: infoGhost
      summary: info ghost mode to return custom token, only available to Kanda staff
      tags:
        - InfoGhost
      requestBody:
        description: info ghost mode to return custom token
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoGhost"
      responses:
        200:
          description: info ghosted mode to return custom token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoGhost"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/query:
    put:
      operationId: infoQuery
      summary: info query to return analytics, only available to Kanda staff
      tags:
        - InfoQuery
      requestBody:
        description: info query to return analytics
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoQuery"
      responses:
        200:
          description: info queried to return analytics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoQuery"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/company:
    get:
      operationId: infoCompany
      summary: query company info with its directors
      tags:
        - InfoCompany
      parameters:
        - in: query
          name: company_name
          schema:
            type: string
          description: query keyword of company name
        - in: query
          name: company_number
          schema:
            type: string
          description: exact company number match
        - in: query
          name: directors
          schema:
            type: boolean
          description: include directors info?
      responses:
        200:
          description: got company info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/onboarding:
    get:
      operationId: infoOnboarding
      summary: info for current company onboarding stage + notes
      tags:
        - InfoOnboarding
      responses:
        200:
          description: got info for current company onboarding stage + notes
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/InfoOnboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/director:
    put:
      operationId: infoDirector
      summary: put + run director report
      tags:
        - InfoDirector
      parameters:
        - in: query
          name: report
          schema:
            type: string
            title: info director report to run
            enum:
              - "report_aml"
              - "report_adverse_media"
              - "report_all"
          description: info director report to run, default to run all
      requestBody:
        description: director info to run checks against
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserType"
      responses:
        200:
          description: got director checks
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/OwnerReport"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/customer:
    get:
      operationId: infoCustomer
      summary: query customer info with loose query
      tags:
        - InfoCustomer
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: query keyword of loosely matched customer
      responses:
        200:
          description: got customer info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/example-job:
    put:
      operationId: infoExampleJob
      summary: >
        info example job to return an example job in draft which can be tested for example flow
        customer details will be pre-filled with tradesperson info, and
        other details are pre-filled with example data
      tags:
        - Job
      responses:
        200:
          description: put example job info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobInput"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/credit:
    put:
      operationId: infoCredit
      summary: info credit to return an eligibility result (AIP) which can be used on financed job
      tags:
        - Credit
      requestBody:
        description: info credit to return an eligibility result (AIP)
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditInput"
      responses:
        200:
          description: put me info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/auth:
    put:
      operationId: infoAuth
      summary: put auth info by email, send sign-in magic link
      tags:
        - InfoAuth
      requestBody:
        description: put auth info by email, send sign-in magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/verify:
    put:
      operationId: infoVerify
      summary: put verify info by email, send verification magic link
      tags:
        - InfoAuth
      requestBody:
        description: put verify info by email, send verification magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put verify info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/password:
    put:
      operationId: infoPassword
      summary: put password info by email, send password reset magic link
      tags:
        - InfoAuth
      requestBody:
        description: put password info by email, send password reset magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put auth info with email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/session:
    put:
      operationId: infoSession
      summary: request a new session token for use in checkout
      tags:
        - InfoAuth
      requestBody:
        description: request a new session token from given code
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoSession"
      responses:
        200:
          description: requested a new session token from given code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoSession"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/claim-account:
    put:
      operationId: infoClaimAccount
      summary: put claim account info by email for legacy user, send verification magic link
      tags:
        - InfoAuth
      requestBody:
        description: put claim account info by email for legacy user, send verification magic link
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoAuth"
      responses:
        200:
          description: put claimed account info with email for legacy user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoAuth"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/rate:
    get:
      operationId: infoRate
      summary: request available finance rates for API company
      tags:
        - Rate
      parameters:
        - in: query
          name: cid
          schema:
            type: string
          description: query matching cid
      responses:
        200:
          description: got available finance rates for API company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/legacy-redirect:
    put:
      operationId: infoLegacyRedirect
      summary: request a new checkout link based on given data for redirect flow
      tags:
        - InfoRedirect
      requestBody:
        description: request a new checkout link based on given data for legacy redirect flow
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoLegacyRedirect"
      responses:
        200:
          description: got a new checkout link based on given data for legacy redirect flow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoLegacyRedirect"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/checkout-redirect:
    put:
      operationId: infoCheckoutRedirect
      summary: request a new checkout link based on given data for redirect flow
      tags:
        - InfoRedirect
      requestBody:
        description: request a new checkout link based on given data for checkout redirect flow
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoCheckoutRedirect"
      responses:
        200:
          description: got a new checkout link based on given data for checkout redirect flow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoCheckoutRedirect"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/ip:
    get:
      operationId: infoIP
      summary: query request IPv4 address or fallback to server IP
      tags:
        - InfoIP
      responses:
        200:
          description: got request IPv4 address
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoIP"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/validate-email:
    get:
      operationId: infoValidateEmail
      summary: validate email info
      tags:
        - InfoValidation
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
            x-go-type: Email
          description: validate this given email
      responses:
        200:
          description: got email validation info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoValidationEmail"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/cache:
    get:
      operationId: infoGetCache
      summary: get cache info
      tags:
        - InfoCache
      responses:
        200:
          description: got cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: infoPutCache
      summary: put cache info
      tags:
        - InfoCache
      requestBody:
        description: put cache info details
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/CacheInput"
      responses:
        200:
          description: put cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: infoDeleteCache
      summary: delete cache info
      tags:
        - InfoCache
      responses:
        200:
          description: deleted cache info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cache"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/entity:
    get:
      operationId: getInfoEntity
      summary: kanda staff only to get entity with relevant resources
      tags:
        - InfoEntity
      parameters:
        - name: id
          in: query
          description: resource id
          required: true
          schema:
            type: string
            minLength: 1
        - name: kind
          in: query
          description: resource kind
          required: true
          schema:
            type: string
            minLength: 1
            enum:
              - company
              - credit
              - job
              - onboarding
              - payment
      responses:
        200:
          description: got credit with relevant resources
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoEntity"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/search:
    put:
      operationId: infoSearch
      summary: info search to query from main resources
      tags:
        - InfoSearch
      requestBody:
        description: info search query body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoSearch"
      responses:
        200:
          description: got info search hits with query body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoSearch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/partner-branding:
    get:
      operationId: infoPartnerBranding
      summary: get info partner branding
      tags:
        - InfoPartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: partner id
      responses:
        200:
          description: got info partner branding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoPartnerBranding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/enterprise:
    get:
      operationId: infoEnterprise
      summary: get info enterprise
      tags:
        - InfoEnterprise
      parameters:
        - in: query
          name: eid
          schema:
            type: string
          description: enterprise id
        - in: query
          name: bid
          schema:
            type: string
          description: enterprise branch id
        - in: query
          name: subdomain
          schema:
            type: string
          description: enterprise / branch subdomain
        - in: query
          name: branch_code
          schema:
            type: string
          description: enterprise branch code
      responses:
        200:
          description: got info enterprise
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/enterprise-role:
    put:
      operationId: infoEnterpriseRole
      summary: info enterprise role for enterprise admin to set user role and claims
      tags:
        - InfoEnterpriseRole
      requestBody:
        description: info enterprise role and claims
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnterpriseUserRole"
      responses:
        200:
          description: info enterprise role and claims set
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnterpriseUserRole"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/relation:
    put:
      operationId: infoRelation
      summary: info relation for admin to set entity relations
      tags:
        - InfoRelation
      requestBody:
        description: info relation
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoRelation"
      responses:
        200:
          description: info relation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoRelation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/info/stats:
    put:
      operationId: putInfoStats
      summary: kanda staff or trade admin to generate their stats by filters
      tags:
        - InfoStats
      requestBody:
        description: filter info stats
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfoSearch"
      responses:
        200:
          description: info stats for requested admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoStats"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      operationId: infoStats
      summary: kanda staff or trade admin or get their stats
      tags:
        - InfoStats
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: info stats for requested admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoStats"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/partner:
    get:
      operationId: getPartners
      summary: get all partners
      tags:
        - Partner
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all partners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postPartner
      summary: kanda staff only to post new partner
      tags:
        - Partner
      requestBody:
        description: post new partner
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Partner"
      responses:
        200:
          description: posted new partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/partner/{id}:
    get:
      operationId: getPartner
      summary: get existing partner
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putPartner
      summary: put existing partner
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing partner
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Partner"
      responses:
        200:
          description: put existing partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deletePartner
      summary: kanda staff to delete existing partner
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing partner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/partner/{id}/referrals:
    post:
      operationId: postPartnerReferrals
      summary: post existing partner referrals
      tags:
        - Partner
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: post existing partner referrals
        required: true
        content:
          application/json:
            schema:
              type: array
              title: referrals
              description: referrals to be added
              items:
                $ref: "#/components/schemas/Referral"
      responses:
        200:
          description: posted existing partner referrals
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/onboarding:
    get:
      operationId: getOnboardings
      summary: kanda staff to get all onboardings
      tags:
        - Onboarding
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all onboardings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postOnboarding
      summary: kanda staff only to post new onboarding
      tags:
        - Onboarding
      requestBody:
        description: post new onboarding
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Onboarding"
      responses:
        200:
          description: posted new onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/onboarding/{id}:
    get:
      operationId: getOnboarding
      summary: kanda staff to get existing onboarding
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putOnboarding
      summary: kanda staff to put existing onboarding
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing onboarding
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Onboarding"
      responses:
        200:
          description: put existing onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteOnboarding
      summary: kanda staff to delete existing onboarding
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing onboarding
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/onboarding/{id}/decision:
    post:
      operationId: postOnboardingDecision
      summary: >
        kanda staff to post an onboarding decision and trigger comms (if applicable)
      tags:
        - Onboarding
      parameters:
        - name: id
          in: path
          description: onboarding id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: onboarding decision to be applied to current stage
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Approval"
      responses:
        200:
          description: got existing onboarding with current stage re-calculated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Onboarding"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/enterprise:
    get:
      operationId: getEnterprises
      summary: get all enterprises
      tags:
        - Enterprise
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all enterprises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postEnterprise
      summary: kanda staff only to post new enterprise
      tags:
        - Enterprise
      requestBody:
        description: post new enterprise
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enterprise"
      responses:
        200:
          description: posted new enterprise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/enterprise/{id}:
    get:
      operationId: getEnterprise
      summary: get existing enterprise
      tags:
        - Enterprise
      parameters:
        - name: id
          in: path
          description: enterprise id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing enterprise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putEnterprise
      summary: put existing enterprise
      tags:
        - Enterprise
      parameters:
        - name: id
          in: path
          description: enterprise id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing enterprise
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enterprise"
      responses:
        200:
          description: put existing enterprise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteEnterprise
      summary: kanda staff to delete existing enterprise
      tags:
        - Enterprise
      parameters:
        - name: id
          in: path
          description: enterprise id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing enterprise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/enterprise/{id}/branch:
    get:
      operationId: getEnterpriseBranches
      summary: get existing enterprise branches
      tags:
        - Enterprise
      parameters:
        - name: id
          in: path
          description: enterprise id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing enterprise branches
          content:
            application/json:
              schema:
                type: array
                title: enterprise branches
                description: enterprise branches
                items:
                  $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postEnterpriseBranches
      summary: post existing enterprise branches
      tags:
        - Enterprise
      parameters:
        - name: id
          in: path
          description: enterprise id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: post existing enterprise branches
        required: true
        content:
          application/json:
            schema:
              type: array
              title: enterprise branches
              description: enterprise branches to be added
              items:
                $ref: "#/components/schemas/Enterprise"
      responses:
        200:
          description: posted existing enterprise branches
          content:
            application/json:
              schema:
                type: array
                title: enterprise branches
                description: enterprise branches to be added
                items:
                  $ref: "#/components/schemas/Enterprise"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction:
    get:
      operationId: getIntroductions
      summary: get all introductions
      tags:
        - Introduction
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all introductions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postIntroduction
      summary: post new introduction for consumer and send comms
      tags:
        - Introduction
      requestBody:
        description: post new introduction
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntroductionInput"
      responses:
        200:
          description: posted new introduction for consumer and comms sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}:
    get:
      operationId: getIntroduction
      summary: get existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing introduction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putIntroduction
      summary: put existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing introduction
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntroductionInput"
      responses:
        200:
          description: put existing introduction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteIntroduction
      summary: delete existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing introduction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/consumer-signature:
    post:
      operationId: postIntroductionConsumerSignature
      summary: consumer to agree and sign existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: consumer agreement and signature of existing introduction
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerSignature"
      responses:
        200:
          description: agreed and signed existing introduction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/consumer-details:
    post:
      operationId: postIntroductionConsumerDetails
      summary: consumer to submit existing introduction consumer details
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit existing introduction with consumer details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicantDetails"
      responses:
        200:
          description: submitted introduction with consumer details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/consumer-budgets:
    post:
      operationId: postIntroductionConsumerBudgets
      summary: consumer to provide budgets on existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: consumer to provide budgets on existing introduction
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Budgets"
      responses:
        200:
          description: provided budgets on existing introduction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/consumer-apply:
    post:
      operationId: postIntroductionConsumerApply
      summary: consumer to submit and apply with existing introduction consumer details
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: submitted and applied introduction with consumer details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/job-details:
    post:
      operationId: postIntroductionJobDetails
      summary: submit existing introduction job details
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit existing introduction with job details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobDetails"
      responses:
        200:
          description: submitted introduction with job details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/trader:
    post:
      operationId: postIntroductionTrader
      summary: submit existing introduction trader contact info and send comms
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit existing introduction with trader contact info
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trader"
      responses:
        200:
          description: submitted introduction with trader contact info and comms sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/trader-signature:
    post:
      operationId: postIntroductionTraderSignature
      summary: trader to agree and sign existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: trader agreement and signature of existing introduction
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Signature"
      responses:
        200:
          description: agreed and signed existing introduction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/trader-details:
    post:
      operationId: postIntroductionTraderDetails
      summary: submit existing introduction trader details, bank verified
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit existing introduction with trader details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraderDetails"
      responses:
        200:
          description: submitted introduction with trader details with verification result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/reject-job:
    post:
      operationId: postIntroductionRejectJob
      summary: reject existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: reject existing introduction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/state:
    post:
      operationId: submitIntroductionState
      summary: submit new state for existing introduction
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit existing introduction with new state
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntroductionStateRequest"
      responses:
        200:
          description: submitted existing introduction with new state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/convert-job:
    post:
      operationId: postIntroductionConvertJob
      summary: convert existing introduction details to job and send comms to consumer
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: converted existing introduction to job and comms sent to consumer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/introduction/{id}/notification:
    post:
      operationId: postIntroductionNotification
      summary: resend notification to relevant party based on current state
      tags:
        - Introduction
      parameters:
        - name: id
          in: path
          description: introduction id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: resent notification to relevant party based on current state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Introduction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company:
    get:
      operationId: getCompanies
      summary: get all companies
      tags:
        - Company
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompany
      summary: post new company
      tags:
        - Company
      requestBody:
        description: post new company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyInput"
      responses:
        200:
          description: posted new company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}:
    get:
      operationId: getCompany
      summary: get existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCompany
      summary: put existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing company
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyInput"
      responses:
        200:
          description: put existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCompany
      summary: delete existing company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/billing:
    post:
      operationId: postCompanyBilling
      summary: post a new company billing for redirected payment page
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - $ref: "#/components/parameters/tier"
      responses:
        200:
          description: posted company billing redirect urls
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedirectURLs"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/billing-success:
    post:
      operationId: postCompanyBillingSuccess
      summary: post company billing success status
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: provider
          in: query
          description: billing provider
          schema:
            type: string
            enum:
              - stripe
              - premium_credit
        - $ref: "#/components/parameters/tier"
      responses:
        200:
          description: posted company billing redirect urls
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/director-verification:
    get:
      operationId: getCompanyDirectorVerification
      summary: get owner / director info from company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: email
          in: query
          description: filter owner / director by email
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got owner / director info from company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompanyDirectorVerification
      summary: owner / director to submit ID verification
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: email
          in: query
          description: owner / director email
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: submit owner / director ID verification
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectorVerification"
      responses:
        200:
          description: submitted owner / director ID verification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoCompany"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/director:
    post:
      operationId: directorCompany
      summary: send verification email to all non-verified directors for the company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got approved and verified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/referrals:
    get:
      operationId: getCompanyReferrals
      summary: get existing company referrals
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing company referrals
          content:
            application/json:
              schema:
                type: array
                title: referrals
                description: referrals associated with this company
                items:
                  $ref: "#/components/schemas/Referral"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCompanyReferrals
      summary: post existing company referrals
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: partner id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: post existing company referrals
        required: true
        content:
          application/json:
            schema:
              type: array
              title: referrals
              description: referrals to be added
              items:
                $ref: "#/components/schemas/Referral"
      responses:
        200:
          description: posted existing company referrals
          content:
            application/json:
              schema:
                type: array
                title: referrals
                description: referrals successfully added
                items:
                  $ref: "#/components/schemas/Referral"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/approve:
    post:
      operationId: approveCompany
      summary: >
        kanda staff to approve and verify company users and mark its lifecycle verified
        only allowed when company has already gone through company setup
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got approved and verified company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/{id}/decline:
    post:
      operationId: declineCompany
      summary: >
        kanda staff to reject or decline company and mark its lifecycle declined,
        apart from improper insurance document, all declines will disable company
        and suspend and disable all users associated with the company.
        for improper insurance document, document will be removed and lifecycle 
        re-calculated so tradesperson can upload a correct one again.
      tags:
        - Company
      parameters:
        - name: id
          in: path
          description: company id
          required: true
          schema:
            type: string
            minLength: 1
        - name: reason
          in: query
          description: reject or decline reason
          required: true
          schema:
            type: string
            enum:
              - "rejected_outdated_insurance_document"
              - "rejected_invalid_insurnace_document"
              - "rejected_not_on_trade_body_website"
              - "rejected_contact_us_on_application_error"
              - "declined_ccj_against_business_or_director"
              - "declined_ccj_against_previous_association"
              - "declined_listed_trade_type_not_covered"
              - "declined_several_negatives_against_company"
              - "declined_unable_to_complete_id_checks"
              - "declined_stop_comms"
      responses:
        200:
          description: got rejected or declined company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/all/export-fca-approved:
    post:
      operationId: exportFcaApproved
      summary: >
        kanda staff to export all companies with completed setup
        and FCA Approved at onboarding but have no lender configs yet
      tags:
        - Company
      parameters:
        - name: lender
          in: query
          description: for particular lender or all
          schema:
            type: string
            enum:
              - "humm"
              - "propensio"
      responses:
        200:
          description: got all companies with completed setup + fca approved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportCSV"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/company/all/import-fca-approved:
    post:
      operationId: importFcaApproved
      summary: >
        kanda staff to import all companies with completed setup
        and FCA Approved at onboarding with updates of lender configs
      tags:
        - Company
      parameters:
        - name: lender
          in: query
          description: for particular lender or all
          required: true
          schema:
            type: string
            enum:
              - "humm"
              - "propensio"
      requestBody:
        description: post all companies with completed setup + fca approved updates
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LenderImport"
      responses:
        200:
          description: got all companies with completed setup + fca approved updates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportCSV"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job:
    get:
      operationId: getJobs
      summary: get all jobs
      tags:
        - Job
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postJob
      summary: post new job
      tags:
        - Job
      requestBody:
        description: post new job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobInput"
      responses:
        200:
          description: posted new job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}:
    get:
      operationId: getJob
      summary: get existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putJob
      summary: put existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing job
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobInput"
      responses:
        200:
          description: put existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteJob
      summary: delete existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/send:
    post:
      operationId: sendJob
      summary: send existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: sent existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/resend:
    post:
      operationId: resendJob
      summary: resend existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/check:
    post:
      operationId: checkJob
      summary: >
        check existing job credit state, only allowed when job is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: checked existing job credit state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCreditState"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/complete:
    post:
      operationId: completeJob
      summary: >
        complete existing accepted job, only allowed when job status is accepted
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: completed existing accepted job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/archive:
    post:
      operationId: archiveJob
      summary: archive existing job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: archived existing job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/unarchive:
    post:
      operationId: unarchiveJob
      summary: unarchive existing already archived job
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: unarchived existing already archived job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/apply:
    post:
      operationId: applyJob
      summary: >
        customer to apply existing job with selected options,
        only allowed when job status is sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job apply options selected by customer
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerOptions"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/reapply:
    post:
      operationId: reapplyJob
      summary: >
        customer to reapply existing job with second line options,
        only allowed when job is applied and primary finance not approved
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: >
          when reapply job with empty object will populate secondary lender rates,
          and reset status and finance_status ready for picking customer options;
          when reapply job with customer options selected,
          previous credit application details will be copied over to new credit record
        content:
          application/json:
            schema:
              anyOf:
                - $ref: "#/components/schemas/CustomerOptions"
                - {}
      responses:
        200:
          description: got existing job with new secondary loan payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/pay:
    post:
      operationId: payJob
      summary: >
        customer to pay existing job, 
        only allowed when job status is beyond sent
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job payment option
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentOption"
      responses:
        200:
          description: got existing job with new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/viewSatNote:
    post:
      operationId: viewJobSatNote
      summary: >
        customer to view completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with viewed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/signSatNote:
    post:
      operationId: signJobSatNote
      summary: >
        customer to sign completed job with satisfaction note,
        only allowed when job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: customer to sign completed job with satisfaction note
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SatNote"
      responses:
        200:
          description: got existing job with signed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/approve:
    post:
      operationId: approveJobSatNote
      summary: >
        kanda staff to approve signed completed job with satisfaction note,
        only allowed when sat note is signed and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with signed and approved with satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/lender-review:
    post:
      operationId: lenderReviewJobSatNote
      summary: >
        kanda staff to send signed and completed job with satisfaction note to lender for review,
        only allowed when sat note is signed or delayed and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with signed and lender review with satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/delay:
    post:
      operationId: delayJobSatNote
      summary: >
        kanda staff to delay a signed satisfaction note for internal review,
        only allowed when sat note is signed and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with signed and delayed satisfaction note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/payout:
    post:
      operationId: payoutJob
      summary: >
        kanda staff to approve a payout for job,
        only allowed when provider approved sat note and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/all/payouts:
    post:
      operationId: payoutsJob
      summary: >
        kanda staff to approve all payouts for job,
        only allowed when provider approved sat note and job status is finished and is financed
      tags:
        - Job
      parameters:
        - name: job_type
          in: query
          description: optional job type for clearing particular payouts
          schema:
            type: string
            enum:
              - standard
              - solar
      responses:
        200:
          description: got existing jobs with finance status set to paid
          content:
            application/json:
              schema:
                type: array
                title: tallies
                items:
                  $ref: "#/components/schemas/Tally"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/override:
    post:
      operationId: overrideJob
      summary: >
        kanda staff to override a job status and trigger comms to be sent (if applicable),
        only allowed when job is applied for finance or financed.
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: job override to be applied to job
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobOverride"
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/checkoutLink:
    post:
      operationId: jobCheckoutLink
      summary: kanda staff only to generate a job checkout link with code
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job generated checkout link with code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedirectURLs"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/{id}/companyInfo:
    post:
      operationId: jobCompanyInfo
      summary: get existing job company info
      tags:
        - Job
      parameters:
        - name: id
          in: path
          description: job id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing job company info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCompanyInfo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/job/all/export-payouts:
    post:
      operationId: exportJobPayouts
      summary: >
        kanda staff to upload and sync job payments from xid
        only allowed when in sat note lender review and with matching xids
      tags:
        - Job
      parameters:
        - name: dryrun
          in: query
          description: dryrun
          schema:
            type: boolean
            default: true
        - name: payout
          in: query
          description: set payout status
          schema:
            type: string
            title: set payout status
            enum:
              - "set_payout_pending"
              - "set_paid"
      requestBody:
        description: array of xids which are ready to export to payout
        content:
          application/json:
            schema:
              type: array
              title: xids
              items:
                type: string
      responses:
        200:
          description: got existing job with finance status set to paid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportCSV"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment:
    get:
      operationId: getPayments
      summary: get all payments
      tags:
        - Payment
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postPayment
      summary: post new payment
      tags:
        - Payment
      requestBody:
        description: post new payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: posted new payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}:
    get:
      operationId: getPayment
      summary: get existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putPayment
      summary: put existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing payment
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        200:
          description: put existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deletePayment
      summary: delete existing payment
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/payment/{id}/{status}:
    post:
      operationId: markPayment
      summary: >
        company to mark existing payment as given status,
        only allowed when payment method is cash
      tags:
        - Payment
      parameters:
        - name: id
          in: path
          description: payment id
          required: true
          schema:
            type: string
            minLength: 1
        - name: status
          in: path
          description: status update for this payment
          required: true
          schema:
            type: string
            enum:
              - unpaid
              - paid
              - pay_on_completion
      responses:
        200:
          description: got existing payment marked as given status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit:
    get:
      operationId: getCredits
      summary: get all credits
      tags:
        - Credit
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all credits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postCredit
      summary: post new credit
      tags:
        - Credit
      requestBody:
        description: post new credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditInput"
      responses:
        200:
          description: posted new credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}:
    get:
      operationId: getCredit
      summary: get existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putCredit
      summary: put existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing credit
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditInput"
      responses:
        200:
          description: put existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteCredit
      summary: delete existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/quote:
    post:
      operationId: quoteCredit
      summary: quote existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: quoted existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/apply:
    post:
      operationId: applyCredit
      summary: apply existing credit
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: applied existing credit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/check:
    post:
      operationId: checkCredit
      summary: >
        check existing credit and refresh documents,
        only allowed when credit state is set
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: checked existing credit and refreshed documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/sign:
    post:
      operationId: signCredit
      summary: >
        sign existing credit documents,
        only allowed when credit state is accepted
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: signature and quote of existing credit documents
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignDocument"
      responses:
        200:
          description: fetch and update existing credit documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/migrate:
    post:
      operationId: migrateCredit
      summary: >
        send credit migration to new lender comms to homeowner for consent
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: credit which was sent comms for lender migration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/credit/{id}/consent-migrate:
    get:
      operationId: consentMigrateCredit
      summary: >
        homeowner gives consent to credit migration to new lender
      tags:
        - Credit
      parameters:
        - name: id
          in: path
          description: credit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: credit which was given consent by homeowner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
        303:
          description: >
            consent received by Kanda and redirection will take place
          headers:
            location:
              schema:
                type: string
              description: consent successful redirection
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document:
    get:
      operationId: getDocuments
      summary: get all documents
      tags:
        - Document
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postDocument
      summary: post new document
      tags:
        - Document
      requestBody:
        description: post new document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: posted new document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/document/{id}:
    get:
      operationId: getDocument
      summary: get existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putDocument
      summary: put existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing document
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          description: put existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteDocument
      summary: delete existing document
      tags:
        - Document
      parameters:
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription:
    get:
      operationId: getSubscriptions
      summary: get all subscriptions
      tags:
        - Subscription
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postSubscription
      summary: post new subscription
      tags:
        - Subscription
      requestBody:
        description: post new subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionInput"
      responses:
        200:
          description: posted new subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription/{id}:
    get:
      operationId: getSubscription
      summary: get existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putSubscription
      summary: put existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing subscription
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionInput"
      responses:
        200:
          description: put existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteSubscription
      summary: delete existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/subscription/{id}/pending:
    post:
      operationId: pendingSubscription
      summary: pending existing subscription
      tags:
        - Subscription
      parameters:
        - name: id
          in: path
          description: subscription id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/training:
    get:
      operationId: getTrainings
      summary: get all trainings
      tags:
        - Training
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all trainings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Training"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postTraining
      summary: post new training
      tags:
        - Training
      requestBody:
        description: post new training
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrainingInput"
      responses:
        200:
          description: posted new training
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Training"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/training/{id}:
    get:
      operationId: getTraining
      summary: get existing training
      tags:
        - Training
      parameters:
        - name: id
          in: path
          description: training id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing training
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Training"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putTraining
      summary: put existing training
      tags:
        - Training
      parameters:
        - name: id
          in: path
          description: training id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing training
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrainingInput"
      responses:
        200:
          description: put existing training
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Training"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteTraining
      summary: delete existing training
      tags:
        - Training
      parameters:
        - name: id
          in: path
          description: training id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing training
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Training"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/rate:
    get:
      operationId: getRates
      summary: kanda staff to get all rates
      tags:
        - Rate
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all rates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postRate
      summary: kanda staff to post new rate
      tags:
        - Rate
      requestBody:
        description: post new rate
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateInput"
      responses:
        200:
          description: posted new rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/rate/{id}:
    get:
      operationId: getRate
      summary: kanda staff to get existing rate
      tags:
        - Rate
      parameters:
        - name: id
          in: path
          description: rate id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putRate
      summary: kanda staff to put existing rate
      tags:
        - Rate
      parameters:
        - name: id
          in: path
          description: rate id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing rate
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateInput"
      responses:
        200:
          description: put existing rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteRate
      summary: kanda staff to delete existing rate
      tags:
        - Rate
      parameters:
        - name: id
          in: path
          description: rate id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/monitor:
    get:
      operationId: getMonitors
      summary: get all monitors
      tags:
        - Monitor
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got all monitors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: postMonitor
      summary: post new monitor
      tags:
        - Monitor
      requestBody:
        description: post new monitor
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MonitorInput"
      responses:
        200:
          description: posted new monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/monitor/{id}:
    get:
      operationId: getMonitor
      summary: get existing monitor
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: putMonitor
      summary: put existing monitor
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: put existing monitor
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MonitorInput"
      responses:
        200:
          description: put existing monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteMonitor
      summary: delete existing monitor
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: deleted existing monitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/monitor/{id}/flag:
    post:
      operationId: postMonitorFlag
      summary: post internal monitor with flag
      tags:
        - Monitor
      parameters:
        - name: id
          in: path
          description: monitor id
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: post internal monitor with flag
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flag"
      responses:
        200:
          description: posted internal monitor with flag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/audit:
    post:
      tags:
        - Audit
      summary: post audit
      description: post audit
      operationId: postAudit
      requestBody:
        description: post audit body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuditInput"
      responses:
        200:
          description: posted audit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Audit"
        default:
          description: got error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      tags:
        - Audit
      summary: get audits
      description: get audits
      operationId: getAudits
      parameters:
        - $ref: "#/components/parameters/format"
        - $ref: "#/components/parameters/q"
      responses:
        200:
          description: got audits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Audit"
        default:
          description: got error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/audit/{id}:
    get:
      operationId: getAudit
      summary: get existing audit
      tags:
        - Audit
      parameters:
        - name: id
          in: path
          description: audit id
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: got existing audit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Audit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/webhook/{provider}:
    get:
      operationId: providerCheckWebhook
      summary: provider check webhook
      tags:
        - Webhook
      parameters:
        - name: provider
          in: path
          description: provider name
          required: true
          schema:
            type: string
            enum:
              - allium
              - etika
              - gocardless
              - humm
              - novuna
              - omni
              - stripe
              - veriff
      responses:
        200:
          description: provider webhook accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: providerWebhook
      summary: provider webhook
      tags:
        - Webhook
      parameters:
        - name: provider
          in: path
          description: provider name
          required: true
          schema:
            type: string
            enum:
              - allium
              - etika
              - gocardless
              - humm
              - novuna
              - omni
              - stripe
              - veriff
      responses:
        200:
          description: provider webhook accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/adhoc/{action}:
    post:
      operationId: actionAdhoc
      summary: kanda staff only to run adhoc action
      tags:
        - Adhoc
      parameters:
        - name: action
          in: path
          description: adhoc action name
          required: true
          schema:
            type: string
      responses:
        200:
          description: adhoc action succeeded
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/runner:
    get:
      operationId: runner
      summary: runner for task event
      tags:
        - Task
      parameters:
        - name: event
          in: query
          description: runner event type
          required: true
          schema:
            type: string
            enum:
              - reminder
              - housekeeping
        - name: task
          in: query
          description: runner task name
          required: true
          schema:
            type: string
            enum:
              - dbv3_ho_application_customer_action_reminder
              - dbv3_ho_application_etika_customer_action_reminder
              - dbv3_ho_application_sat_note_sent_reminder
              - dbv3_ho_application_sat_note_lender_review_reminder
              - dbv3_ho_application_sat_note_lender_review_7k_reminder
              - dbv3_ho_application_sign_docs_reminder
              - dbv3_ho_initial_follow_up
              - dbv3_tp_initial_follow_up
              - dbv3_user_company_setup_reminder
              - dbv3_user_verify_director_reminder
              - dbv3_user_send_referrals
              - housekeeping_check_referral_expiry
              - housekeeping_check_lender_rate
              - housekeeping_check_lender_update
              - housekeeping_check_trade_summary
              - housekeeping_check_audit_action
              - housekeeping_run_propensio_payouts
      responses:
        200:
          description: runner has been completed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  parameters:
    format:
      name: format
      in: query
      schema:
        type: string
        title: query format
        description: query format to indicate response format
        enum:
          - "reduced"
          - "full"
        default: "full"

    q:
      name: q
      in: query
      schema:
        type: string
        title: query filter
        description: query filter in colon path+value pairs, with comma separated filters
        minLength: 1

    tier:
      name: tier
      in: query
      schema:
        type: string
        title: query tier
        description: tier level
        enum:
          - "base_rate"
          - "enterprise_rate"

    x_kanda_protected:
      name: x_kanda_protected
      in: header
      required: true
      schema:
        type: string
        title: kanda protected
        description: kanda protected request indicator
        enum:
          - "yes"
          - "no"
        default: "yes"

    x_kanda_bid:
      name: x_kanda_bid
      in: header
      schema:
        type: string
        title: kanda bid
        description: kanda bid
        minLength: 1

    x_kanda_cid:
      name: x_kanda_cid
      in: header
      schema:
        type: string
        title: kanda cid
        description: kanda cid
        minLength: 1

    x_kanda_eid:
      name: x_kanda_eid
      in: header
      schema:
        type: string
        title: kanda eid
        description: kanda eid
        minLength: 1

    x_kanda_tid:
      name: x_kanda_tid
      in: header
      schema:
        type: string
        title: kanda tid
        description: kanda tid
        minLength: 1

  schemas:
    AuthUser:
      type: object
      title: auth user
      required:
        - id
        - token
        - name
        - email
        - provider
        - subject
        - audience
        - issuer
        - verified
      properties:
        id:
          type: string
          title: id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        eid:
          type: string
          title: enterprise id
          readOnly: true
        bid:
          type: string
          title: branch id
          readOnly: true
        groups:
          type: array
          title: groups or regions
          items:
            type: string
          readOnly: true
        departments:
          type: array
          title: departments or areas
          items:
            type: string
          readOnly: true
        branches:
          type: array
          title: branches
          items:
            type: string
          readOnly: true
        token:
          type: string
          title: token
          readOnly: true
        name:
          type: string
          title: name
          minLength: 1
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        role:
          type: string
          title: role
          readOnly: true
        phone:
          type: string
          title: phone
          minLength: 1
          x-kanda-form-widget: PhoneNumberInput
        photoURL:
          type: string
          title: photo URL
          format: uri
        disabled:
          type: boolean
          title: disabled
          readOnly: true
        provider:
          type: string
          title: provider
          readOnly: true
        subject:
          type: string
          title: subject
          readOnly: true
        audience:
          type: string
          title: audience
          readOnly: true
        issuer:
          type: string
          title: issuer
          readOnly: true
        verified:
          type: boolean
          title: email verified
        authorisation_url:
          type: string
          title: authorisation url
          readOnly: true

    EnterpriseUserRole:
      type: object
      title: enterprise user role
      required:
        - email
        - role
        - groups
        - departments
        - branches
      properties:
        id:
          type: string
          title: enterprise user id
          readOnly: true
        eid:
          type: string
          title: enterprise id
          readOnly: true
        bid:
          type: string
          title: branch id
          readOnly: true
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        role:
          type: string
          title: role
        groups:
          type: array
          title: groups or regions
          items:
            type: string
        departments:
          type: array
          title: departments or areas
          items:
            type: string
        branches:
          type: array
          title: branches
          items:
            type: string

    InfoMe:
      type: object
      title: info me
      properties:
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        name:
          type: string
          title: name
          minLength: 1
        phone:
          type: string
          title: phone
          minLength: 1
          x-kanda-form-widget: PhoneNumberInput
        photoURL:
          type: string
          title: photo URL
          format: uri
        referrer:
          type: string
          title: referrer URL
          format: uri

    InfoGhost:
      type: object
      title: info ghost
      required:
        - email
      properties:
        email:
          type: string
          title: email for ghosted user
          format: email
          x-go-type: Email
        custom_role:
          type: string
          title: custom role set for ghosted user
        custom_token:
          type: string
          title: custom token
          readOnly: true
        bearer_token:
          type: string
          title: bearer token

    InfoQuery:
      type: object
      title: info query
      required:
        - query
      properties:
        query:
          type: string
          title: query for analytics
        result:
          type: string
          title: queried result in JSON string format

    InfoAuth:
      type: object
      title: info auth
      required:
        - email
      properties:
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        continue_url:
          type: string
          title: continue url
          format: uri

    InfoSession:
      type: object
      title: info session
      required:
        - code
      properties:
        code:
          type: string
          title: code
        custom_token:
          type: string
          title: custom token used for sign in exchange

    InfoLegacyRedirect:
      type: object
      title: info legacy redirect
      required:
        - reference
        - price
        - email
        - description_of_goods
        - enterprise_id
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        eid:
          type: string
          title: enterprise id
          readOnly: true
        bid:
          type: string
          title: branch id
          readOnly: true
        tid:
          type: string
          title: external trade id
          readOnly: true
        reference:
          type: string
          title: title
          description: >
            The reference for the loan application.
            Is mainly used for tracking loan applications
        price:
          type: integer
          format: int32
          title: price in pence
          description: >
            The price of the loan in pennies.
            Ex.: If the price is 2,450.99, the value should be passed as 245099.
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
          description: The email of the customer applying for the loan
        description_of_goods:
          type: string
          title: description of goods
          description: The description of the goods.
        enterprise_id:
          type: string
          title: enterprise id
          description: Your enterprise ID
        first_name:
          type: string
          title: first name
          description: The first name of the customer applying for the loan
        last_name:
          type: string
          title: last name
          description: The last name of the customer applying for the loan
        mobile:
          type: string
          title: mobile
          description: The mobile number of the customer applying for the loan
        deposit:
          type: integer
          format: int32
          title: Deposit in pence
        redirect_urls:
          type: object
          title: redirect urls
          $ref: "#/components/schemas/RedirectURLs"
        enabled_rates:
          type: array
          title: Enabled rates
          description: specified the enabled rates for the loan
          items:
            type: string
        work_type:
          type: string
          $ref: "#/components/schemas/WorkType"
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    InfoCheckoutRedirect:
      type: object
      title: info checkout redirect
      required:
        - reference
        - work_type
        - deposit_type
        - deposit_value
        - customer
        - job_items
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        eid:
          type: string
          title: enterprise id
          readOnly: true
        bid:
          type: string
          title: branch id
          readOnly: true
        tid:
          type: string
          title: external trade id
          readOnly: true
        flow_type:
          title: flow type
          $ref: "#/components/schemas/FlowType"
        checkout_options:
          type: array
          title: checkout options
          items:
            $ref: "#/components/schemas/CheckoutOption"
          minLength: 1
        reference:
          type: string
          title: title
          description: >
            The reference for the loan application.
            Is mainly used for tracking loan applications
          minLength: 1
        work_type:
          type: string
          $ref: "#/components/schemas/WorkType"
        enabled_rates:
          type: array
          title: Enabled rates
          description: specified the enabled rates optionally for the loan
          items:
            type: string
        deposit_type:
          type: string
          title: deposit type
          enum:
            - no_deposit
            - partial_deposit
            - fixed_deposit
          default: no_deposit
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        job_items:
          type: array
          items:
            $ref: "#/components/schemas/JobItem"
          title: job items
          minLength: 1
        redirect_urls:
          type: object
          title: redirect urls
          $ref: "#/components/schemas/RedirectURLs"
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    InfoStats:
      type: object
      title: info stats for trade
      required:
        - jobs_sent
        - jobs_applied_for_finance
        - jobs_approved_for_finance
        - jobs_total_revenue_of_approved
        - jobs_approval_rate
        - jobs_average_value_of_approved
      properties:
        id:
          type: string
          title: trade id
          readOnly: true
        jobs_sent:
          type: integer
          title: number of jobs sent
        jobs_applied_for_finance:
          type: integer
          title: number of jobs applied for finance
        jobs_approved_for_finance:
          type: integer
          title: number of jobs approved for finance
        jobs_total_revenue_of_approved:
          type: integer
          format: int32
          title: total revenue of jobs approved for finance in pence
        jobs_approval_rate:
          type: integer
          format: int32
          title: approval rate of financed jobs
        jobs_average_value_of_approved:
          type: integer
          format: int32
          title: average value of jobs approved

    InfoIP:
      type: object
      title: info ip
      required:
        - ipv4
      properties:
        ipv4:
          type: string
          title: ipv4 address

    Money:
      type: object
      title: money
      required:
        - amount
      properties:
        currency:
          type: string
          title: currency
          enum:
            - GBP
          default: GBP
        amount:
          type: integer
          format: int32
          title: amount in pence

    Metadata:
      type: object
      title: metadata
      required:
        - liveness
        - created_at
        - updated_at
      properties:
        liveness:
          type: boolean
          title: liveness
        created_at:
          type: string
          format: date-time
          title: created at
        updated_at:
          type: string
          format: date-time
          title: updated at

    Address:
      type: object
      title: address
      required:
        - line_1
        - city
        - country
        - postcode
      properties:
        building_number:
          type: string
          title: building number
          minLength: 1
        building_name:
          type: string
          title: building name
          minLength: 1
        line_1:
          type: string
          title: line 1
          minLength: 1
        line_2:
          type: string
          title: line 2
          minLength: 1
        city:
          type: string
          title: city / town
          minLength: 1
        county:
          type: string
          title: county / state
          minLength: 1
        country:
          type: string
          title: country
          minLength: 1
        postcode:
          type: string
          title: postcode / zipcode
          pattern: "^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$"
          x-kanda-form-widget: Postcode
        months_at_address:
          type: integer
          title: months at address
          format: int32
          minimum: 0
          maximum: 2147483647

    InfoCompany:
      type: object
      title: info company
      properties:
        id:
          type: string
          title: company info unique id
          readOnly: true
        sole_trader:
          type: object
          title: sole trader info
          $ref: "#/components/schemas/SoleTraderInfo"
          readOnly: true
        limited_company:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
          readOnly: true
        directors:
          type: array
          title: directors info
          items:
            $ref: "#/components/schemas/UserType"
          readOnly: true
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Partner:
      type: object
      title: partner
      description: partner
      required:
        - contact_info
        - rewards
      properties:
        id:
          type: string
          title: partner id
          description: partner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        emails:
          type: array
          items:
            type: string
            format: email
            x-go-type: Email
          title: emails for user who has api access
          readOnly: true
        contact_info:
          type: object
          title: partner contact info
          $ref: "#/components/schemas/ContactInfo"
        branding:
          type: object
          title: branding
          description: branding style override
          $ref: "#/components/schemas/Branding"
        cids:
          type: array
          title: cids
          description: referral signed up company ids
          items:
            type: string
          readOnly: true
        referrals:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Referral"
          title: referrals
          description: referrals with their lifecycle + status
        rewards:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Reward"
          readOnly: true
        current_reward:
          type: object
          title: current reward
          description: current reward
          $ref: "#/components/schemas/Reward"
          readOnly: true
        stats:
          type: object
          $ref: "#/components/schemas/ReferralStats"
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    ReferralStats:
      type: object
      title: referral stats
      description: current referral stats
      properties:
        total_referrals:
          type: integer
          title: number of referrals made
          description: number of referrals made
          format: int32
        signups:
          type: integer
          title: number of tradesperson signups
          description: number of tradesperson signups to unlock
          format: int32
        subscribers:
          type: integer
          title: number of referral company subscribers
          description: number of referral company subscribers
          format: int32
        verifications:
          type: integer
          title: number of referral company verifications
          description: number of referral company verifications
          format: int32
        activations:
          type: integer
          title: number of referral company activations
          description: number of referral company activations
          format: int32

    Branding:
      type: object
      title: branding override
      description: branding override object
      required:
        - logo
      properties:
        logo:
          type: object
          $ref: "#/components/schemas/Document"
      additionalProperties: true

    Reward:
      type: object
      title: reward
      description: reward in tiered system
      required:
        - name
      properties:
        name:
          type: string
          title: reward name
          description: reward name
        signups:
          type: integer
          title: number of tradesperson signups
          description: number of tradesperson signups to unlock
          format: int32
        subscribers:
          type: integer
          title: number of referral company subscribers
          description: number of referral company subscribers to unlock
          format: int32
        verifications:
          type: integer
          title: number of referral company verifications
          description: number of referral company verifications to unlock
          format: int32
        activations:
          type: integer
          title: number of referral company activations
          description: number of referral company activations to unlock
          format: int32
        rates_reduction_pct:
          type: integer
          title: rates reduction percentage in pence
          minimum: 0
          maximum: 2147483647
        rates_reduction_value:
          type: integer
          title: rates reduction value in pence
          minimum: 0
          maximum: 2147483647
        referral_commission_pct:
          type: integer
          title: referral commission percentage value in pence
          minimum: 0
          maximum: 2147483647
        referral_commission_value:
          type: integer
          title: referral commission value in pence
          minimum: 0
          maximum: 2147483647

    Referral:
      type: object
      title: referral
      description: referral summary
      required:
        - email
        - name
      properties:
        email:
          type: string
          title: referral email
          format: email
          x-go-type: Email
        name:
          type: string
          title: referral name
        mobile:
          type: string
          title: referral mobile
          x-kanda-form-widget: PhoneNumberInput
        from:
          type: string
          title: from referrer cid
          description: referrer company id
        cid:
          type: string
          title: referral cid
          description: referral signed up company id
          readOnly: true
        trading_name:
          type: string
          title: trading name
          readOnly: true
        lifecycle:
          type: string
          title: referral lifecycle
          description: referral company lifecycle
          readOnly: true
        billing:
          type: string
          title: referral billing
          description: referral company billing status
          readOnly: true
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Onboarding:
      type: object
      title: company onboarding
      description: company onboarding
      properties:
        id:
          type: string
          title: company unique id
        cid:
          type: string
          title: company id
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        current_stage:
          type: string
          title: onboarding current stage
          $ref: "#/components/schemas/OnboardingStage"
        stages:
          type: array
          title: onboarding stages
          items:
            $ref: "#/components/schemas/OnboardingStage"
          readOnly: true
        company_review:
          type: object
          title: company review
          description: company review stage
          properties:
            report:
              type: object
              $ref: "#/components/schemas/CompanyReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        director_review:
          type: object
          title: director review
          description: company director review stage
          properties:
            reports:
              type: object
              title: director report
              additionalProperties:
                type: object
                $ref: "#/components/schemas/CompanyDirectorReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        consumer_review:
          type: object
          title: consumer review
          description: consumer review stage
          properties:
            reports:
              type: object
              title: consumer report
              additionalProperties:
                type: object
                $ref: "#/components/schemas/ConsumerReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        owner_review:
          type: object
          title: owner review
          description: owner review stage
          properties:
            reports:
              type: object
              title: owner AML/AdverseMedia report
              additionalProperties:
                type: object
                $ref: "#/components/schemas/OwnerReport"
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        insurance_review:
          type: object
          title: insurance review
          description: insurance document and expiry check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        trade_review:
          type: object
          title: trade review
          description: trade info check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        online_review:
          type: object
          title: online review
          description: online presence check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        fca_upload:
          type: object
          title: fca upload
          description: fca upload check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        fca_awaiting_approval:
          type: object
          title: fca awaiting approval check and review
          description: fca awaiting approval check and review
          properties:
            approval:
              type: object
              $ref: "#/components/schemas/Approval"
        shared_note:
          type: string
          title: shared note
          description: shared and persistent note for staff to see
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    OnboardingStage:
      type: string
      title: onboarding stage
      enum:
        - "ongoing"
        - "company_report_review"
        - "company_report_reviewed"
        - "director_report_review"
        - "director_report_reviewed"
        - "consumer_report_review"
        - "consumer_report_reviewed"
        - "owner_report_review"
        - "owner_report_reviewed"
        - "insurance_review"
        - "insurance_reviewed"
        - "trade_review"
        - "trade_reviewed"
        - "online_review"
        - "online_reviewed"
        - "fca_upload_review"
        - "fca_upload_reviewed"
        - "fca_awaiting_approval"
        - "fca_approved"
        - "onboarding_not_approved"

    CompanyReport:
      type: object
      title: company report
      description: company onboarding report
      required:
        - status
        - incorporation_date
        - number_of_writs
        - active_ccj_exact
        - active_ccj_possible
        - satisfied_ccj
        - risk_score
        - credit_limit
        - report_pdf
        - people_ids
      properties:
        status:
          type: string
          title: status
          description: company status
        incorporation_date:
          type: string
          title: incorporation date
          description: company incorporation date
        number_of_writs:
          type: integer
          title: number of writs
          description: company number of writs (previous or negactive information)
        active_ccj_exact:
          type: integer
          title: active ccj exact
          description: company active ccj exact registered
        active_ccj_possible:
          type: integer
          title: active ccj possible
          description: company active ccj possible registered
        satisfied_ccj:
          type: integer
          title: satisfied ccj
          description: company satisfied ccj
        risk_score:
          type: string
          title: risk score
          description: company credit rating risk score
        credit_limit:
          type: string
          title: credit limit
          description: company credit rating credit limit
        report_pdf:
          type: object
          title: associated report in pdf
          $ref: "#/components/schemas/Document"
        people_ids:
          type: array
          title: people ids
          description: company director people ids
          items:
            type: string

    CompanyDirectorReport:
      type: object
      title: company director report
      description: company director report
      required:
        - people_id
        - director_name
        - number_of_current_appointments
        - current_appointment_ccj
        - number_of_inactive_appointments
        - inactive_appointment_ccj
        - number_of_previous_appointments
        - previous_appointment_ccj
        - disqualified
      properties:
        people_id:
          type: string
          title: people id
          description: company director people id
        director_name:
          type: string
          title: director name
          description: company director name
        number_of_current_appointments:
          type: integer
          title: number of current appointments
          description: company director number of current appointments
        current_appointment_ccj:
          type: integer
          title: current appointment ccj
          description: company director current appointment ccj
        number_of_inactive_appointments:
          type: integer
          title: number of inactive appointments
          description: company director number of inactive appointments
        inactive_appointment_ccj:
          type: integer
          title: inactive appointment ccj
          description: company director inactive appointment ccj
        number_of_previous_appointments:
          type: integer
          title: number of previous appointments
          description: company director number of previous appointments
        previous_appointment_ccj:
          type: integer
          title: previous appointment ccj
          description: company director previous appointment ccj
        disqualified:
          type: boolean
          title: disqualified
          description: company director disqualified

    ConsumerReport:
      type: object
      title: consumer report
      description: consumer report
      required:
        - active_ccj
        - satisfied_ccj
        - insolvencies
        - credit_score_band
        - credit_score
      properties:
        active_ccj:
          type: integer
          title: active ccj
          description: consumer active ccj
        satisfied_ccj:
          type: integer
          title: satisfied ccj
          description: consumer satisfied ccj
        insolvencies:
          type: boolean
          title: insolvencies
          description: consumer insolvencies at address currently insolvent
        credit_score_band:
          type: string
          title: credit score band
          description: consumer credit score band
        credit_score:
          type: string
          title: credit score
          description: consumer credit score

    OwnerReport:
      type: object
      title: owner report
      description: owner report with checks for AML + AdverseMedia
      properties:
        uk_credit_aml_warnings:
          type: string
          title: UK Credit AML Warnings
          description: UK Credit AML Warnings
        international_sanctions_warnings:
          type: string
          title: International Sanctions Warnings
          description: International Sanctions Warnings
        enhanced_international_saction_warnings:
          type: string
          title: Enhanced International Saction Warnings
          description: Enhanced International Saction Warnings
        edited_electoral_roll:
          type: string
          title: Edited Electoral Roll
          description: Edited Electoral Roll
        national_id_register:
          type: string
          title: National ID Register
          description: National ID Register
        uk_credit_header:
          type: string
          title: UK Credit Header
          description: UK Credit Header
        overall_pass:
          type: string
          title: Overall Pass
          description: Overall Pass
        adverse_media:
          type: string
          title: Adverse Media
          description: Adverse Media

    Approval:
      type: object
      title: approval
      description: approval
      required:
        - outcome
        - reason
      properties:
        outcome:
          type: string
          title: approval outcome
          enum:
            - "PASS"
            - "REVIEW"
            - "FAIL"
        reason:
          type: string
          title: approval outcome reason
          enum:
            - "approved"
            - "insufficient_details"
            - "invalid_details"
            - "mismatched_details"
            - "investigation_required"
            - "manual_review_required"
            - "not_approved"
            - "not_approved_ccj_against_business_or_director"
            - "not_approved_ccj_against_previous_association"
            - "not_approved_listed_trade_type_not_covered"
            - "not_approved_several_negatives_against_company"
        reason_note:
          type: string
          title: approval outcome reason note

    InfoOnboarding:
      type: object
      title: info for current company onboarding
      description: company onboarding
      properties:
        id:
          type: string
          title: company unique id
        cid:
          type: string
          title: company id
        current_stage:
          type: string
          title: onboarding current stage
          $ref: "#/components/schemas/OnboardingStage"
        current_approval:
          type: object
          title: onboarding current approval status and notes, without reports
          $ref: "#/components/schemas/Approval"
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    InfoRelation:
      type: object
      title: info relation
      required:
        - groups
        - departments
        - branches
      properties:
        id:
          type: string
          title: relation id
          description: relation id
          readOnly: true
        cid:
          type: string
          title: company id
        aid:
          type: string
          title: author id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        eid:
          type: string
          title: enterprise id
        bid:
          type: string
          title: branch id
        groups:
          type: array
          title: groups or regions
          items:
            type: string
        departments:
          type: array
          title: departments or areas
          items:
            type: string
        branches:
          type: array
          title: branches
          items:
            type: string
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Enterprise:
      type: object
      title: enterprise
      description: enterprise
      required:
        - enterprise_type
        - contact_info
      properties:
        id:
          type: string
          title: enterprise id
          description: enterprise id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        eid:
          type: string
          title: enterprise id
          readOnly: true
        bid:
          type: string
          title: branch id
          readOnly: true
        enterprise_type:
          type: string
          title: enterprise type
          enum:
            - "main_office"
            - "area_office"
            - "region_office"
            - "branch_office"
        subdomain:
          type: string
          title: subdomain address
          description: subdomain hosted on kanda
        branch_code:
          type: string
          title: branch code
          description: branch code
        emails:
          type: array
          items:
            type: string
            format: email
            x-go-type: Email
          title: emails for user who has api access
          readOnly: true
        users:
          type: array
          items:
            $ref: "#/components/schemas/EnterpriseUserType"
          title: users under this enterprise
        contact_info:
          type: object
          title: enterprise contact info
          $ref: "#/components/schemas/ContactInfo"
        branding:
          type: object
          title: branding
          description: branding style override
          $ref: "#/components/schemas/Branding"
        lender_configs:
          type: array
          title: lender configs
          description: lender configuration for this company
          items:
            $ref: "#/components/schemas/LenderConfig"
        metadata:
          type: object
          title: metadata
          $ref: "#/components/schemas/Metadata"
          readOnly: true

    Company:
      type: object
      title: company
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/CompanyInput"
        - type: object
          required:
            - emails
            - lifecycle
            - billing
          properties:
            analytics:
              type: object
              title: referrer
              $ref: "#/components/schemas/Analytics"
            emails:
              type: array
              items:
                type: string
                format: email
                x-go-type: Email
              title: emails for user who has api access
            finance_rates:
              type: array
              items:
                $ref: "#/components/schemas/FinanceRate"
              title: finance rates
            lifecycle:
              type: string
              $ref: "#/components/schemas/LifecycleStatus"
            billing:
              type: string
              $ref: "#/components/schemas/BillingStatus"
            referral_activated_at:
              type: string
              title: optional referral code activation date
              format: date-time
            referred_by:
              type: string
              title: referred by partner id
            lender_configs:
              type: array
              title: lender configs
              description: lender configuration for this company
              items:
                $ref: "#/components/schemas/LenderConfig"

    CompanyInput:
      type: object
      title: company input
      required:
        - company_type
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserType"
          title: users
        company_info:
          type: object
          $ref: "#/components/schemas/CompanyInfo"
          title: company info
        solar_company_info:
          type: object
          $ref: "#/components/schemas/SolarCompanyInfo"
          title: solar company info
        company_type:
          type: string
          $ref: "#/components/schemas/CompanyType"
        limited_company_info:
          type: object
          title: limited company info
          $ref: "#/components/schemas/LimitedCompanyInfo"
        sole_trader_info:
          type: object
          title: sole trader info
          $ref: "#/components/schemas/SoleTraderInfo"
        quote_preference:
          type: string
          $ref: "#/components/schemas/QuotePreference"
        skip_deposit:
          type: string
          $ref: "#/components/schemas/SkipDeposit"
        referral_code:
          type: string
          title: optional referral code used for the sign up
        company_logo:
          type: object
          title: company logo document
          $ref: "#/components/schemas/Document"
        bank_account:
          type: object
          $ref: "#/components/schemas/BankAccount"
        contact_info:
          type: object
          title: company contact info shared with customers
          $ref: "#/components/schemas/ContactInfo"
        redirect_urls:
          type: object
          title: redirects
          $ref: "#/components/schemas/RedirectURLs"
        fca_number:
          type: string
          title: FCA number
        welcome_pack:
          type: object
          title: welcome pack
          description: company welcome pack status
          $ref: "#/components/schemas/WelcomeSkipBanner"
        business_type:
          type: string
          title: business type
          description: main business type
        business_config:
          type: string
          $ref: "#/components/schemas/BusinessConfig"
        tier_config:
          $ref: "#/components/schemas/TierConfig"

    QuotePreference:
      type: string
      title: quote preference
      enum:
        - no_preference
        - kanda
        - custom
      default: no_preference

    SkipDeposit:
      type: string
      title: company is allowed to take own deposit
      enum:
        - "Yes"
        - "No"
      default: "No"

    LifecycleStatus:
      type: string
      title: company lifecycle status
      enum:
        - registered
        - subscribed
        - director_info_provided
        - director_details_submitted
        - onboarded
        - insurance_uploaded
        - completed_setup
        - verified
        - declined
      default: registered

    BillingStatus:
      type: string
      title: billing status
      enum:
        - legacy
        - trial
        - pending
        - referred
        - subscribed
        - recurring_payment_failed_1
        - recurring_payment_failed_2
        - recurring_payment_failed_3
        - suspended
        - cancelled
      default: legacy

    CompanyType:
      type: string
      title: company type
      enum:
        - limited_company
        - sole_trader
      x-kanda-form-widget: RadioSelect

    TierType:
      type: string
      title: tier type
      enum:
        - "base_rate"
        - "enterprise_rate"

    TierEvent:
      type: object
      title: tier event
      required:
        - tier
        - action
        - actioned_at
      properties:
        tier:
          $ref: "#/components/schemas/TierType"
        action:
          type: string
          $ref: "#/components/schemas/TierAction"
        actioned_at:
          type: string
          title: tier event created at
          format: date-time

    TierAction:
      type: string
      title: tier event action
      enum:
        - "add_tier"
        - "remove_tier"

    TierConfig:
      type: object
      title: tier config
      required:
        - current_tier
        - tiers
      properties:
        current_tier:
          type: string
          title: current tier
          $ref: "#/components/schemas/TierType"
        tiers:
          type: array
          title: all tier events
          items:
            $ref: "#/components/schemas/TierEvent"

    BusinessConfig:
      type: object
      title: business config
      required:
        - show
        - trade_type
        - trade_text
        - business_sector
        - lender
        - lender_rate_type
      properties:
        show:
          type: string
          $ref: "#/components/schemas/ShowYesNo"
        trade_type:
          type: string
          $ref: "#/components/schemas/TradeType"
        trade_text:
          type: string
          title: trade type in text
        business_sector:
          type: string
          $ref: "#/components/schemas/BusinessSector"
        extra:
          type: string
          title: extra text for unlisted trade types
        lender:
          type: string
          $ref: "#/components/schemas/FinanceProvider"
        lender_rate_type:
          type: string
          $ref: "#/components/schemas/LenderRateType"

    ShowYesNo:
      type: string
      title: show?
      enum:
        - "yes"
        - "no"

    BusinessSector:
      type: string
      title: busienss sector
      enum:
        - "Home improvement"
        - "Retail"
        - "IT and technology Services"
        - "Automotive services"
        - "Training and education"
        - "Events (including weddings)"
        - "Healthcare"
        - "Other"

    LenderRateType:
      type: string
      title: lender rate type
      enum:
        - "regulated"
        - "unregulated"
      default: "regulated"

    WelcomeSkipBanner:
      type: object
      title: welcome skip banner
      description: company welcome skip banner
      properties:
        director_verification:
          type: string
          $ref: "#/components/schemas/DirectorVerificationYesNo"
        invite_team_member:
          type: string
          $ref: "#/components/schemas/InviteTeamMemberYesNo"
        update_website:
          type: string
          $ref: "#/components/schemas/UpdateWebsiteYesNo"
        advert_finance_calculator:
          type: string
          $ref: "#/components/schemas/AdvertFinanceCalculatorYesNo"

    DirectorVerificationYesNo:
      type: string
      title: director verification
      enum:
        - "yes"
        - "no"

    InviteTeamMemberYesNo:
      type: string
      title: invite team member
      enum:
        - "yes"
        - "no"

    UpdateWebsiteYesNo:
      type: string
      title: update website
      enum:
        - "yes"
        - "no"

    AdvertFinanceCalculatorYesNo:
      type: string
      title: advert and finance calculator
      enum:
        - "yes"
        - "no"

    LenderConfig:
      type: object
      title: lender config
      description: lender configuration extra info
      required:
        - provider
        - xid
      properties:
        provider:
          type: string
          $ref: "#/components/schemas/FinanceProvider"
        xid:
          type: string
          title: external reference id for this lender

    SolarCompanyInfo:
      type: object
      required:
        - epvs_registration_number
        - solar_trade_association
        - solar_trade_association_number
        - electrical_trade_association
      properties:
        epvs_registration_number:
          type: string
          title: EPVS registration number
          minLength: 1
        solar_trade_association:
          type: string
          $ref: "#/components/schemas/SolarTradeAssociation"
        solar_trade_association_number:
          type: string
          title: solar trade association number
          minLength: 1
        electrical_trade_association:
          type: string
          $ref: "#/components/schemas/ElectricalTradeAssociation"
        electrical_trade_association_number:
          type: string
          title: electrical trade association number
          minLength: 1

    SolarTradeAssociation:
      type: string
      title: solar trade association
      enum:
        - "msc"
        - "heis"
        - "recc"
      x-kanda-form-widget: Select

    ElectricalTradeAssociation:
      type: string
      title: electrical trade association
      enum:
        - "niceic"
        - "napit"
        - "none"
      x-kanda-form-widget: Select

    TradeType:
      type: string
      title: trade type
      enum:
        - air_conditioning
        - artificial_grass_specialists
        - bathrooms
        - battery_storage
        - blinds_and_shutters
        - carpentry
        - cctv_and_security_installations
        - cladding_sofits_and_guttering
        - conservatories
        - curtains
        - decking
        - driveways_and_patios
        - electrician
        - ev_charger_installer
        - fencing
        - fireplaces
        - fitted_bedroom_furniture
        - floor_layer
        - garage_doors
        - garden_rooms
        - gas_engineer
        - gates
        - heat_pumps
        - heating_systems
        - home_insulation_excl_spray_foam
        - hot_tub_specialist
        - kitchen_fitter
        - kitchen_supplier
        - landscaping
        - loft_boarding
        - painting_and_decorating
        - plasterer
        - plumbing
        - rendering
        - resin_drive_specialist
        - resin_driveways
        - roofing__excluding_flat_roofs
        - security_systems
        - stair_case_specialist
        - tiler
        - verandas
        - windows_and_doors
        - multi_trade
        - other_trade
      x-kanda-form-widget: Select

    CompanyInfo:
      type: object
      required:
        - trade_type
        - trade_type_name
        - trade_body
        - trade_body_name
        - warranty_length
        - average_monthly_jobs
        - average_job_value
        - use_subcontractor
      properties:
        trade_type:
          type: string
          $ref: "#/components/schemas/TradeType"
        trade_type_name:
          type: string
          title: trade type name
          minLength: 1
        trade_body:
          type: string
          $ref: "#/components/schemas/TradeBody"
        trade_body_name:
          type: string
          title: trade body name
          minLength: 1
        trade_body_number:
          type: string
          title: trade body number
          minLength: 1
        warranty_length:
          type: integer
          title: warranty length
          minimum: 1
        average_monthly_jobs:
          type: integer
          title: average monthly jobs
          minimum: 1
          maximum: 2147483647
        average_job_value:
          type: integer
          format: int32
          title: average job value in pence
        use_subcontractor:
          type: string
          title: use subcontractor?
          enum:
            - "yes"
            - "no"
          x-kanda-form-widget: Select
        online_presence:
          type: object
          title: company online presence
          $ref: "#/components/schemas/OnlinePresence"
        insurance_document:
          type: object
          title: insurance document
          $ref: "#/components/schemas/Document"
        contract_agreement:
          type: object
          title: contract agreement
          $ref: "#/components/schemas/ContractAgreement"
        work_types:
          type: array
          title: work types
          items:
            $ref: "#/components/schemas/WorkType"

    TradeBody:
      type: string
      title: trade body
      enum:
        - "none"
        - "acrib"
        - "aphc"
        - "assure"
        - "certass"
        - "elecsa"
        - "fensa"
        - "feta"
        - "gas_safe"
        - "hetas"
        - "napit"
        - "nfrc"
        - "niceic"
        - "other"
      x-kanda-form-widget: Select

    OnlinePresence:
      type: object
      title: online presence
      required:
        - q_online
      properties:
        q_online:
          type: string
          $ref: "#/components/schemas/Q_Online"
        website:
          type: string
          title: website URL
          format: uri
        facebook:
          type: string
          title: facebook business name or link
        google:
          type: string
          title: google business name or link

    Q_Online:
      type: string
      title: Can you provide your business online details?
      enum:
        - "Yes, I can provide the details"
        - "No, I do not have this"
      x-kanda-form-widget: Select

    ContractAgreement:
      type: object
      title: contract agreement
      properties:
        contract:
          type: object
          title: contract
          $ref: "#/components/schemas/Document"
        agreed_terms_and_conditions:
          type: string
          $ref: "#/components/schemas/AgreedTermsAndConditions"
        agreed_to_become_iar_of_kanda:
          type: string
          $ref: "#/components/schemas/AgreedToBecomeIarOfKanda"
        print_name:
          type: string
          title: print name
          minLength: 1
        signed_at:
          type: string
          title: signed at
          format: date-time
          readOnly: true

    AgreedTermsAndConditions:
      type: string
      title: agreed terms and conditions
      enum:
        - "yes"
        - "no"
      default: "no"

    AgreedToBecomeIarOfKanda:
      type: string
      title: agreed to become IAR of Kanda
      enum:
        - "yes"
        - "no"
      default: "no"

    ContactInfo:
      type: object
      title: contact info
      properties:
        contact_name:
          type: string
          title: contact name
        contact_email:
          type: string
          title: contact email
          format: email
          x-go-type: Email
        contact_phone:
          type: string
          title: contact phone number
          x-kanda-form-widget: PhoneNumberInput
        contact_address:
          type: object
          title: contact address
          $ref: "#/components/schemas/Address"
        trading_name:
          type: string
          title: trading name

    Document:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          title: document id
          readOnly: true
        cid:
          type: string
          title: company id
          readOnly: true
        oid:
          type: string
          title: owner id
          readOnly: true
        aid:
          type: string
          title: author id
          readOnly: true
        eid:
          type: string
          title: enterprise id
          readOnly: true
        bid:
          type: string
          title: branch id
          readOnly: true
        tid:
          type: string
          title: external trade id
          readOnly: true
        name:
          type: string
          title: document name
          minLength: 1
        expiry:
          type: string
          title: document expiry
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput
        content:
          type: string
          format: base64
          title: document content
          maxLength: 1048487
          x-kanda-form-widget: File
        mimetype:
          type: string
          title: document mime type
          readOnly: true
        metadata:
          type: object
          $ref: "#/components/schemas/Metadata"
          title: metadata
          readOnly: true

    LimitedCompanyInfo:
      type: object
      required:
        - company_name
        - company_address
        - company_number
      properties:
        company_name:
          type: string
          title: company name
          minLength: 1
          x-kanda-form-widget: Company
        company_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: company address
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address
        company_number:
          type: string
          title: company number
          minLength: 1
        vat_number:
          type: string
          title: vat number
          pattern: "^(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})|NOT VAT REGISTERED$"
          minLength: 1
          default: "NOT VAT REGISTERED"

    SoleTraderInfo:
      type: object
      required:
        - trading_name
        - trading_address
      properties:
        national_insurance_number:
          type: string
          title: national insurance number
          minLength: 1
        trading_name:
          type: string
          title: trading name
          minLength: 1
        trading_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: trading address
        vat_number:
          type: string
          title: vat number
          pattern: "^(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})|NOT VAT REGISTERED$"
          minLength: 1
          default: "NOT VAT REGISTERED"

    DirectorVerification:
      type: object
      required:
        - first_name
        - last_name
        - email
        - mobile
        - home_address
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          x-go-type: Email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1
          x-kanda-form-widget: PhoneNumberInput
        date_of_birth:
          type: string
          title: date of birth
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address

    DirectorInfo:
      type: object
      required:
        - home_address
      properties:
        verification_status:
          type: string
          $ref: "#/components/schemas/VerificationStatus"
        home_address:
          type: object
          $ref: "#/components/schemas/Address"
          title: home address
        date_of_birth:
          type: string
          title: date of birth
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput

    VerificationStatus:
      type: string
      title: verification status
      enum:
        - not_verified
        - verification_submitted
        - verification_declined
        - verified

    CommPreferences:
      type: object
      title: comm preferences
      properties:
        pre_job:
          type: string
          title: pre job
          $ref: "#/components/schemas/PreferenceOption"
        post_job:
          type: string
          title: post job
          $ref: "#/components/schemas/PreferenceOption"
        other:
          type: string
          title: other
          $ref: "#/components/schemas/PreferenceOption"

    PreferenceOption:
      type: string
      title: preference option
      enum:
        - "enabled"
        - "disabled"
      default: "disabled"

    UserType:
      type: object
      required:
        - role
        - first_name
        - email
      properties:
        director_info:
          type: object
          $ref: "#/components/schemas/DirectorInfo"
          title: director info
        role:
          type: string
          $ref: "#/components/schemas/CompanyRole"
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          x-go-type: Email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1
          x-kanda-form-widget: PhoneNumberInput
        comm_preferences:
          type: object
          $ref: "#/components/schemas/CommPreferences"

    CompanyRole:
      type: string
      title: company role
      enum:
        - "company-admin"
        - "company-manager"
        - "company-staff"
      x-kanda-form-widget: Select

    EnterpriseUserType:
      type: object
      required:
        - role
        - name
        - email
      properties:
        uid:
          type: string
          title: user id
          readOnly: true
        role:
          type: string
          $ref: "#/components/schemas/EnterpriseRole"
        name:
          type: string
          title: user name
          minLength: 1
        email:
          type: string
          format: email
          x-go-type: Email
          title: email
        mobile:
          type: string
          title: mobile
          minLength: 1
          x-kanda-form-widget: PhoneNumberInput
        comm_preferences:
          type: object
          $ref: "#/components/schemas/CommPreferences"

    EnterpriseRole:
      type: string
      title: enterprise role
      enum:
        - "enterprise-admin"
        - "enterprise-user"
      x-kanda-form-widget: Select

    FinanceRate:
      type: object
      required:
        - name
        - fee
        - charge
        - enabled
        - finance_types
        - provider
      properties:
        name:
          type: string
          title: name
          minLength: 1
        credit_line:
          type: integer
          title: credit line
          minimum: 0
          maximum: 2147483647
        fee:
          type: integer
          title: fee
          minimum: 0
          maximum: 2147483647
        charge:
          type: integer
          title: charge
          minimum: 0
          maximum: 2147483647
        min_charge:
          type: integer
          title: minimum charge
          minimum: 0
          maximum: 2147483647
        enabled:
          type: boolean
          title: enabled?
        finance_types:
          type: array
          title: finance type
          items:
            $ref: "#/components/schemas/FinanceType"
        provider:
          type: string
          $ref: "#/components/schemas/FinanceProvider"
        apr_type:
          type: string
          $ref: "#/components/schemas/AprType"
        apr:
          type: integer
          title: apr in pence
          minimum: 0
          maximum: 2147483647
        deferred_duration:
          type: integer
          title: deferred duration in months
          minimum: 0
          maximum: 2147483647
        duration:
          type: integer
          title: duration in months
          minimum: 0
          maximum: 2147483647
        min_deposit_pct:
          type: integer
          title: min deposit percentage in pence
          minimum: 0
          maximum: 2147483647
        max_deposit_pct:
          type: integer
          title: max deposit percentage in pence
          minimum: 0
          maximum: 2147483647
        min_deposit_value:
          type: integer
          title: min deposit value in pence
          minimum: 0
          maximum: 2147483647
        max_deposit_value:
          type: integer
          title: max deposit value in pence
          minimum: 0
          maximum: 2147483647
        min_job_value:
          type: integer
          title: min job value in pence
          minimum: 0
          maximum: 2147483647
        max_job_value:
          type: integer
          title: max job value in pence
          minimum: 0
          maximum: 2147483647
        work_types:
          type: array
          title: work types
          items:
            $ref: "#/components/schemas/WorkType"

    AprType:
      type: string
      title: apr type
      enum:
        - "INTEREST_FREE"
        - "INTEREST_BEARING"
        - "BUYNOW_PAYLATER"

    FinanceType:
      type: string
      title: finance type
      enum:
        - "primary"
        - "secondary"

    Customer:
      type: object
      required:
        - first_name
        - last_name
        - email
        - phone
      properties:
        first_name:
          type: string
          title: first name
          minLength: 1
        last_name:
          type: string
          title: last name
          minLength: 1
        email:
          type: string
          format: email
          x-go-type: Email
          title: email
        phone:
          type: string
          title: phone number
          minLength: 1
          x-kanda-form-widget: PhoneNumberInput
        address:
          type: object
          $ref: "#/components/schemas/Address"

    RedirectURLs:
      type: object
      title: redirect urls
      properties:
        checkout_url:
          type: string
          title: checkout url
        success_url:
          type: string
          title: success url
        failure_url:
          type: string
          title: failure url
        webhook_url:
          type: string
          title: webhook url

    JobCompanyInfo:
      type: object
      title: job company info
      required:
        - company_name
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        company_name:
          type: string
          title: company name
          readOnly: true
        company_logo:
          type: object
          title: company logo
          $ref: "#/components/schemas/Document"
        vat_number:
          type: string
          title: vat number
          readOnly: true
        bank_account:
          type: object
          $ref: "#/components/schemas/BankAccount"
          readOnly: true
        contact_info:
          type: object
          title: job company contact info
          $ref: "#/components/schemas/ContactInfo"

    Job:
      type: object
      title: job
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/JobInput"
        - type: object
          required:
            - archived
            - status
            - finance_status
            - customer_options
            - payments
            - flow_type
            - job_type
            - total
          properties:
            archived:
              type: string
              $ref: "#/components/schemas/Archived"
            status:
              type: string
              $ref: "#/components/schemas/JobApplicationStatus"
            finance_status:
              title: finance status
              $ref: "#/components/schemas/FinanceStatus"
            customer_options:
              type: object
              title: customer selected options, updated only via custom endpoint
              $ref: "#/components/schemas/CustomerOptions"
            payments:
              type: array
              title: payments
              items:
                $ref: "#/components/schemas/Payment"
            sat_note_timeline:
              type: object
              title: customer satisfaction note timeline
              $ref: "#/components/schemas/SatNoteTimeline"
            sat_note:
              type: object
              title: customer satisfaction note
              $ref: "#/components/schemas/SatNote"
            job_type:
              type: string
              $ref: "#/components/schemas/JobBaseType"
            flow_type:
              title: flow type
              $ref: "#/components/schemas/FlowType"
            quoted_to:
              type: string
              title: quoted to
            introduced_to:
              type: string
              title: introduced to
            xid:
              type: string
              title: external reference id
            xref:
              type: string
              title: external reference
            redirect_urls:
              type: object
              title: redirect urls
              $ref: "#/components/schemas/RedirectURLs"
            total:
              type: object
              title: job total
              $ref: "#/components/schemas/MoneyTotal"

    JobInput:
      type: object
      title: job input
      required:
        - title
        - deposit_type
        - deposit_value
        - job_items
      properties:
        title:
          type: string
          title: job title
          minLength: 1
        description:
          type: string
          title: job description
          minLength: 1
        deposit_type:
          type: string
          $ref: "#/components/schemas/DepositType"
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        job_items:
          type: array
          items:
            $ref: "#/components/schemas/JobItem"
          title: job items
          minLength: 1
        work_type:
          type: string
          $ref: "#/components/schemas/WorkType"
        notes:
          type: array
          items:
            type: string
          title: job notes
        checkout_options:
          type: array
          title: checkout options
          items:
            $ref: "#/components/schemas/CheckoutOption"
          minLength: 1
        finance_options:
          type: array
          title: finance options
          items:
            type: object
            $ref: "#/components/schemas/FinanceRate"
        job_documents:
          type: array
          title: job documents
          items:
            $ref: "#/components/schemas/Document"

    JobApplicationStatus:
      type: string
      title: job application status
      enum:
        - draft
        - sent
        - accepted
        - declined
        - finished

    JobBaseType:
      type: string
      title: job type
      enum:
        - standard
        - solar

    DepositType:
      type: string
      title: deposit type
      enum:
        - no_deposit
        - partial_deposit
        - fixed_deposit
      default: no_deposit

    FlowType:
      type: string
      title: flow type
      enum:
        - "example"
        - "live"
      readOnly: true

    CustomerOptions:
      type: object
      title: customer selected options, updated only via custom endpoint
      required:
        - checkout_option
        - finance_option
      properties:
        checkout_option:
          type: string
          $ref: "#/components/schemas/CheckoutOption"
        finance_option:
          type: object
          title: finance option selected by customer
          $ref: "#/components/schemas/FinanceRate"
        deposit_value:
          type: object
          $ref: "#/components/schemas/Money"
          title: deposit value in pence

    SatNoteTimeline:
      type: object
      title: customer satisfaction note timeline
      properties:
        sent_at:
          type: string
          title: timestamp sat note is sent
          format: date-time
          readOnly: true
        viewed_at:
          type: string
          title: timestamp sat note is viewed
          format: date-time
          readOnly: true
        signed_at:
          type: string
          title: timestamp sat note is signed
          format: date-time
          readOnly: true

    SatNote:
      type: object
      title: customer satisfaction note and signature details
      required:
        - q_pressure
        - q_easiness
        - q_availability
        - q_application
        - q_advice
        - signature
        - certificate
      properties:
        q_pressure:
          type: string
          $ref: "#/components/schemas/Q_Pressure"
        q_easiness:
          type: string
          $ref: "#/components/schemas/Q_Easiness"
        q_availability:
          type: string
          $ref: "#/components/schemas/Q_Availability"
        q_application:
          type: string
          $ref: "#/components/schemas/Q_Application"
        q_advice:
          type: string
          $ref: "#/components/schemas/Q_Advice"
        q_rate:
          type: string
          $ref: "#/components/schemas/Q_Rate"
        q_saving:
          type: string
          $ref: "#/components/schemas/Q_Saving"
        signature:
          type: object
          title: sat note customer signature
          $ref: "#/components/schemas/Signature"
        certificate:
          type: object
          title: sat note generated document with e-signature
          $ref: "#/components/schemas/Document"

    Q_Pressure:
      type: string
      title: Did the installer pressure you to apply for finance?
      enum:
        - "no"
        - "somewhat"
        - "yes"
      x-kanda-form-widget: Select

    Q_Easiness:
      type: string
      title: Do you find it hard to apply for finance with Kanda?
      enum:
        - "no"
        - "somewhat"
        - "yes"
      x-kanda-form-widget: Select

    Q_Availability:
      type: string
      title: How did you first become aware that finance was available?
      enum:
        - "The installer told me when quoting me"
        - "I saw it advertised by the installer"
        - "I found out when the installer sent me a link via Kanda"
      x-kanda-form-widget: Select

    Q_Application:
      type: string
      title: Who completed your application for finance?
      enum:
        - "I completed the application myself"
        - "Someone completed the appliation on my behalf"
      x-kanda-form-widget: Select

    Q_Advice:
      type: string
      title: What advice did the installer give you on your finance application?
      enum:
        - "They just sent me a link to apply"
        - "They told me what rates where available"
        - "They helped me work out my potential repayments"
        - "They completed the application for me"
      x-kanda-form-widget: Select

    Q_Rate:
      type: string
      title: Were you advised to select a specific finance option by the tradesperson?
      enum:
        - "No - I was not told to choose a specific option"
        - "Yes - I was told to choose a specific option"
      x-kanda-form-widget: Select

    Q_Saving:
      type: string
      title: Were you told about any potential feed in tariffs, savings, returns or Renewable Heat incentive and do you understand that the actual amounts  you  receive, and your estimated returns/savings were based on varying factors including you own energy consumption and any returns/savings/payback periods are not linked to your repayments on this agreement.
      enum:
        - "Yes I understand"
        - "No I do not understand"

    JobItem:
      type: object
      required:
        - title
        - quantity
        - price
        - vat
      properties:
        title:
          type: string
          title: job item title
          minLength: 1
          x-kanda-form-widget: AutoSizeTextArea
        description:
          type: string
          title: job item description
          minLength: 1
          x-kanda-form-widget: RichTextInput
        quantity:
          type: integer
          format: int32
          title: job item quantity
        price:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item unit price in pence (vat exclusive)
        vat_rate:
          type: string
          title: vat applicable rate
        vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: job item total vat value in pence
        quote_document:
          type: object
          title: quote document
          $ref: "#/components/schemas/Document"
        style:
          type: string
          title: style
          enum:
            - kanda
            - custom
          default: kanda
          readOnly: true

    MoneyTotal:
      type: object
      title: total
      properties:
        amount_vat_inclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat inclusive)
          readOnly: true
        amount_vat_exclusive:
          type: object
          $ref: "#/components/schemas/Money"
          title: total amount in pence (vat exclusive)
          readOnly: true
        amount_vat:
          type: object
          $ref: "#/components/schemas/Money"
          title: total vat value in pence
          readOnly: true

    FinanceStatus:
      type: string
      title: finance status
      enum:
        - not_applied
        - under_review
        - applied_for_finance
        - finance_not_approved
        - financed
        - sat_note_sent
        - sat_note_viewed
        - sat_note_signed
        - sat_note_delayed
        - sat_note_lender_review
        - payout_pending
        - paid
        - finance_cancelled
      default: not_applied

    WorkType:
      type: string
      title: work type
      x-kanda-form-widget: FilterableSelect
      enum:
        - air_conditioning
        - alarm_systems
        - artificial_grass
        - bathrooms_supply_and_fitted
        - bathrooms_supply_only
        - bedrooms_furnitue_custom
        - blinds_awnings_shutters
        - boiler_swap
        - carpentry
        - cctv
        - central_heating_system
        - conservatory
        - conservatory_roof
        - decking
        - door_canopy
        - doors
        - driveways
        - electrical_installation
        - ev_charger
        - fencing
        - fireplaces
        - flooring_excluding_carpets
        - garage_doors
        - garden_buildings
        - gates
        - glass_splash_backs
        - granite_worktops
        - home_study
        - hot_tubs_and_spas
        - kitchens_fitted
        - kitchens_supply_only
        - landscaping
        - loft_boarding
        - loft_conversion
        - painting_and_decorating
        - patios
        - plastering
        - resin_driveways
        - roofing_excl_flat_roofs
        - roofline
        - rendering
        - security_lighting
        - staircases
        - tiling
        - underfloor_heating
        - verandas
        - wall_insulation_and_cladding
        - windows
        - windows_and_doors
        - other

    CheckoutOption:
      type: string
      title: checkout option
      description: checkout option picked by customer, updated only via custom action
      enum:
        - apply_for_finance
        - pay_on_card
        - decline_job
        - pay_on_completion

    Payment:
      type: object
      title: payment
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/PaymentInput"

    PaymentInput:
      type: object
      title: payment input
      required:
        - payment_option
      properties:
        kid:
          type: string
          title: internal kind id
        kind:
          type: string
          $ref: "#/components/schemas/Kind"
        xid:
          type: string
          title: external reference id
        xref:
          type: string
          title: external reference
        payment_option:
          type: object
          title: payment option
          $ref: "#/components/schemas/PaymentOption"
        status:
          type: string
          $ref: "#/components/schemas/PaymentCurrentStatus"
        flow_type:
          title: flow_type
          $ref: "#/components/schemas/FlowType"
        quoted_to:
          type: string
          title: quoted to
        introduced_to:
          type: string
          title: introduced to

    PaymentCurrentStatus:
      type: string
      title: payment current status
      enum:
        - unpaid
        - pending
        - paid
        - disputed
        - cancelled
        - refunded

    PaymentOption:
      type: object
      title: payment option
      required:
        - payment_method
        - amount
      properties:
        payment_method:
          type: string
          $ref: "#/components/schemas/PaymentMethod"
        amount:
          type: object
          $ref: "#/components/schemas/Money"
        provider:
          type: string
          $ref: "#/components/schemas/FinanceProvider"

    PaymentMethod:
      type: string
      title: payment method
      enum:
        - cash
        - card
        - loan
        - external
      default: cash
      x-kanda-form-widget: RadioSelect

    JobCreditState:
      type: object
      required:
        - id
        - has_finance_application
      properties:
        id:
          type: string
          title: job id
          readOnly: true
        has_finance_application:
          type: boolean
          title: job has finance application
          readOnly: true
        current_status:
          type: string
          title: job credit state current status
          enum:
            - not_submitted
            - accepted_sign_document
            - accepted_deposit_required
            - accepted
            - declined
            - referred
            - action_lender
            - action_customer
            - pending
            - finished
            - paid_out
            - cancelled
          readOnly: true
        xstatus:
          type: string
          title: job credit xstatus as per lender

    Introduction:
      type: object
      title: introduction
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/IntroductionInput"
        - type: object
          title: introduction states
          required:
            - archived
            - current_state
            - states
          properties:
            archived:
              type: string
              $ref: "#/components/schemas/Archived"
            current_state:
              type: string
              title: current state
              $ref: "#/components/schemas/IntroductionState"
            states:
              type: array
              title: all states
              items:
                $ref: "#/components/schemas/IntroductionState"

    IntroductionInput:
      type: object
      title: credit introduction input
      description: credit introduction input for enterprise
      required:
        - consumer
      properties:
        consumer:
          $ref: "#/components/schemas/Customer"
        consumer_signature:
          $ref: "#/components/schemas/ConsumerSignature"
        consumer_details:
          $ref: "#/components/schemas/ApplicantDetails"
        budgets:
          $ref: "#/components/schemas/Budgets"
        trader:
          $ref: "#/components/schemas/Trader"
        trader_signature:
          $ref: "#/components/schemas/Signature"
        trader_details:
          $ref: "#/components/schemas/TraderDetails"
        job_details:
          $ref: "#/components/schemas/JobDetails"
        flow_type:
          title: flow type
          $ref: "#/components/schemas/FlowType"

    ConsumerSignature:
      type: object
      title: consumer signature
      description: consumer pre-application questions and agreement with signature
      required:
        - pre_application_declarations
        - signature
      properties:
        pre_application_declarations:
          type: object
          title: pre-application declarations from consumer
          additionalProperties:
            type: string
        signature:
          $ref: "#/components/schemas/Signature"

    Trader:
      type: object
      title: trader
      description: trader info
      required:
        - trading_type
        - trading_name
        - trading_address
        - vat_number
        - contact_name
        - contact_email
        - contact_mobile
      properties:
        trading_type:
          type: string
          $ref: "#/components/schemas/CompanyType"
        trading_name:
          type: string
          title: trading name
        trading_address:
          $ref: "#/components/schemas/Address"
        vat_number:
          type: string
          title: vat number
          pattern: "^(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})|NOT VAT REGISTERED$"
          minLength: 1
          default: "NOT VAT REGISTERED"
        contact_name:
          type: string
          title: contact name
        contact_email:
          type: string
          title: contact email
          format: email
          x-go-type: Email
        contact_mobile:
          type: string
          title: contact mobile
          x-kanda-form-widget: PhoneNumberInput

    TraderDetails:
      type: object
      title: trader details
      description: trader details and bank account verification
      required:
        - company_type
        - bank_type
        - bank_account
      properties:
        company_type:
          type: string
          $ref: "#/components/schemas/CompanyType"
        limited_company_info:
          $ref: "#/components/schemas/LimitedCompanyInfo"
        sole_trader_info:
          $ref: "#/components/schemas/SoleTraderInfo"
        bank_type:
          type: string
          $ref: "#/components/schemas/BankAccountType"
        bank_account:
          type: object
          $ref: "#/components/schemas/BankAccount"
        bank_report:
          type: string
          title: bank report
        bank_verification:
          type: string
          $ref: "#/components/schemas/BankVerificationStatus"

    BankAccountType:
      type: string
      title: bank account type
      enum:
        - "Business"
        - "Personal"

    BankVerificationStatus:
      type: string
      title: bank verification status
      enum:
        - "not_started"
        - "verification_passed"
        - "verification_failed"
        - "verification_skipped"
        - "verification_error"

    Archived:
      type: string
      title: archived
      enum:
        - "no"
        - "yes"

    IntroductionState:
      type: string
      title: introduction state
      enum:
        - "consumer_sent"
        - "consumer_viewed"
        - "consumer_agreed"
        - "consumer_details_provided"
        - "consumer_budgets_set"
        - "consumer_rejected"
        - "consumer_is_accepted"
        - "consumer_is_declined"
        - "job_details_provided"
        - "trader_sent"
        - "trader_viewed"
        - "trader_agreed"
        - "trader_contact_provided"
        - "trader_details_provided"
        - "trader_rejected"
        - "trader_is_reviewed"
        - "trader_is_verified"
        - "trader_is_declined"
        - "job_converted"

    IntroductionStateRequest:
      type: object
      title: introduction state request
      required:
        - state
      properties:
        state:
          type: string
          $ref: "#/components/schemas/IntroductionState"

    Budgets:
      type: object
      title: budgets
      required:
        - min
        - max
      properties:
        min:
          $ref: "#/components/schemas/Money"
        max:
          $ref: "#/components/schemas/Money"

    JobDetails:
      type: object
      title: job details
      description: introduction job details
      required:
        - reference
        - description
        - items
      properties:
        reference:
          type: string
          title: job unique reference
        description:
          type: string
          title: job description
        items:
          type: array
          title: job items
          items:
            $ref: "#/components/schemas/JobItem"
        total:
          $ref: "#/components/schemas/MoneyTotal"

    Credit:
      type: object
      title: credit
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/CreditInput"
        - type: object
          title: credit
          required:
            - kid
            - kind
            - provider
            - state
            - amount
            - deposit_value
            - finance_option
          properties:
            kid:
              type: string
              title: internal kind id
            kind:
              type: string
              $ref: "#/components/schemas/Kind"
            provider:
              type: string
              $ref: "#/components/schemas/FinanceProvider"
            xid:
              type: string
              title: external reference id
            xref:
              type: string
              title: external reference
            xstatus:
              type: string
              title: external status
            state:
              type: string
              $ref: "#/components/schemas/CreditApplicationState"
            amount:
              type: object
              $ref: "#/components/schemas/Money"
              title: credit amount in pence
            deposit_value:
              type: object
              $ref: "#/components/schemas/Money"
              title: deposit value in pence
            finance_option:
              type: object
              $ref: "#/components/schemas/FinanceRate"
              title: finance option for this credit
            credit_documents:
              type: array
              title: credit documents
              items:
                $ref: "#/components/schemas/Document"
            signature:
              type: object
              title: elecontronic signature
              $ref: "#/components/schemas/Signature"
            flow_type:
              title: flow_type
              $ref: "#/components/schemas/FlowType"
            quoted_to:
              type: string
              title: quoted to
            introduced_to:
              type: string
              title: introduced to

    Kind:
      type: string
      title: kind
      enum:
        - job
        - charge

    CreditApplicationState:
      type: string
      title: credit application state
      enum:
        - accepted
        - declined
        - referred
        - action_lender
        - action_customer
        - pending
        - finished
        - paid_out
        - cancelled

    CreditInput:
      type: object
      title: credit input
      required:
        - bank_account
        - customer_details
        - employment_details
      properties:
        bank_account:
          type: object
          $ref: "#/components/schemas/BankAccount"
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: employment details
          $ref: "#/components/schemas/EmploymentDetails"
        additional_employment_details:
          type: array
          title: additional employment details
          items:
            $ref: "#/components/schemas/EmploymentDetails"
        finance_details:
          type: object
          title: finance details
          $ref: "#/components/schemas/FinanceDetails"
        extra_applicants:
          type: array
          title: extra applicants
          items:
            $ref: "#/components/schemas/ApplicantDetails"

    FinanceProvider:
      type: string
      title: finance provider
      enum:
        - allium
        - demo
        - etika
        - humm
        - novuna
        - omni
        - propensio
      default: omni

    BankAccount:
      type: object
      title: bank account
      required:
        - account_name
        - account_number
        - sort_code
      properties:
        account_name:
          type: string
          title: account name
          minLength: 1
        account_number:
          type: string
          title: account number
          minLength: 1
          pattern: "^[0-9]{7,8}$"
        sort_code:
          type: string
          title: sort code
          pattern: "^[0-9]{2}[-][0-9]{2}[-][0-9]{2}$"
          x-kanda-form-widget: NumberInput
        months_held:
          type: integer
          title: months held for bank account
          format: int32
          minimum: 0
          maximum: 2147483647

    Gender:
      type: string
      title: gender
      description: gender
      enum:
        - male
        - female

    Title:
      type: string
      title: title
      description: title
      enum:
        - mrs
        - mr
        - miss
        - ms
        - dr

    CustomerDetails:
      type: object
      title: customer details
      required:
        - email
        - gender
        - title
        - first_name
        - last_name
        - date_of_birth
        - marital_status
        - number_of_dependants
        - residential_status
        - current_address
      properties:
        email:
          type: string
          title: email
          format: email
          x-go-type: Email
        gender:
          $ref: "#/components/schemas/Gender"
        title:
          $ref: "#/components/schemas/Title"
        first_name:
          type: string
          title: first name
        middle_name:
          type: string
          title: middle name
        last_name:
          type: string
          title: last name
        maiden_name:
          type: string
          title: maiden name
        telephone:
          type: string
          title: telephone
          x-kanda-form-widget: PhoneNumberInput
        mobile:
          type: string
          title: mobile
          x-kanda-form-widget: PhoneNumberInput
        date_of_birth:
          type: string
          title: date of birth
          description: "Customer date of birth. Format to use: yyyy-mm-dd"
          pattern: "^[0-9]{4}-(0[0-9]|10|11|12)-([0-2][0-9]|30|31)(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?(Z|(\\+|-)[0-9]{2}:[0-9]{2})?)?$"
          x-kanda-form-widget: DatePickerInput
        marital_status:
          type: string
          $ref: "#/components/schemas/MaritalStatus"
        number_of_dependants:
          type: integer
          title: number of dependants
          format: int32
          minimum: 0
          maximum: 2147483647
        residential_status:
          type: string
          $ref: "#/components/schemas/ResidentialStatus"
        monthly_rent_amount:
          type: object
          title: monthly rent amount
          $ref: "#/components/schemas/Money"
        current_address:
          type: object
          title: current_address
          $ref: "#/components/schemas/Address"
        previous_address_one:
          type: object
          title: previous address one
          $ref: "#/components/schemas/Address"
        previous_address_two:
          type: object
          title: previous address two
          $ref: "#/components/schemas/Address"
        goods_delivery_address:
          type: object
          title: goods delivery address
          $ref: "#/components/schemas/Address"

    MaritalStatus:
      type: string
      title: marital status
      enum:
        - widowed
        - other
        - married
        - divorced
        - cohabiting
        - to_be_married
        - separated
        - single

    ResidentialStatus:
      type: string
      title: residential status
      enum:
        - tenant
        - council_tenant
        - living_with_parents
        - owner
        - owner_without_mortgage
        - homeowner_shared_ownership
        - homeowner_buy_to_let_living_elsewhere
        - lodger
        - armed_forces

    EmployedDetails:
      type: object
      title: employed details
      required:
        - employer_name
        - main_occupation
        - months_employed
      properties:
        employed_type:
          type: string
          $ref: "#/components/schemas/EmployedType"
        employer_name:
          type: string
          title: employer name
          minLength: 1
        main_occupation:
          type: string
          title: main occupation
          minLength: 1
        months_employed:
          type: integer
          format: int32
          title: months employed
          minimum: 1
          maximum: 2147483647
        employer_address:
          type: object
          title: employer address
          $ref: "#/components/schemas/Address"

    EmployedType:
      type: string
      title: employed type
      enum:
        - "full_time"
        - "part_time"

    SelfEmployedDetails:
      type: object
      title: self employed details
      required:
        - business_name
        - type_of_business
        - months_self_employed
      properties:
        self_employed_type:
          type: string
          $ref: "#/components/schemas/SelfEmployedType"
        business_name:
          type: string
          title: business name
          minLength: 1
        type_of_business:
          type: string
          title: type of business
          minLength: 1
        months_self_employed:
          type: integer
          format: int32
          title: months self employed
          minimum: 1
          maximum: 2147483647
        business_address:
          type: object
          title: business address
          $ref: "#/components/schemas/Address"

    SelfEmployedType:
      type: string
      title: self employed type
      enum:
        - "full_time"
        - "part_time"

    NotEmployedDetails:
      type: object
      title: not employed details
      required:
        - source_of_income
        - months_not_employed
      properties:
        source_of_income:
          type: string
          $ref: "#/components/schemas/SourceOfIncome"
        months_not_employed:
          type: integer
          title: months not employed
          format: int32
          minimum: 0
          maximum: 2147483647

    SourceOfIncome:
      type: string
      title: source of income
      enum:
        - partner
        - benefits
        - maintenance
        - disabled
        - fulltime_carer
        - homemaker
        - permanent_dla
        - student
        - other

    RetiredDetails:
      type: object
      title: retired details
      required:
        - months_retired
      properties:
        months_retired:
          type: integer
          title: months retired
          format: int32
          minimum: 0
          maximum: 2147483647

    EmploymentDetails:
      type: object
      required:
        - employment_status
        - gross_annual_income
      properties:
        employment_status:
          type: string
          title: employment status
          enum:
            - employed
            - self_employed
            - not_employed
            - retired
        employed_details:
          type: object
          title: employed details
          $ref: "#/components/schemas/EmployedDetails"
        self_employed_details:
          type: object
          title: self_employed details
          $ref: "#/components/schemas/SelfEmployedDetails"
        not_employed_details:
          type: object
          title: not employed details
          $ref: "#/components/schemas/NotEmployedDetails"
        retired_details:
          type: object
          title: retired details
          $ref: "#/components/schemas/RetiredDetails"
        gross_annual_income:
          type: object
          title: gross annual income
          $ref: "#/components/schemas/Money"
        household_annual_income:
          type: object
          title: household annual income
          $ref: "#/components/schemas/Money"

    SignDocument:
      type: object
      title: credit signature document with quote
      required:
        - signature
        - quote
      properties:
        signature:
          type: object
          title: signature
          $ref: "#/components/schemas/Signature"
        quote:
          type: object
          title: quote document to upload to provider
          $ref: "#/components/schemas/Document"

    Signature:
      type: object
      title: electronic signature
      required:
        - signed
        - fingerprint
      properties:
        signed:
          type: string
          $ref: "#/components/schemas/SignatureSignedStatus"
        fingerprint:
          type: string
          title: fingerprint reference such as IP

    SignatureSignedStatus:
      type: string
      title: signed your signature
      enum:
        - "yes"
        - "no"
      default: "yes"

    ApplicantDetails:
      type: object
      title: applicant details
      required:
        - bank_account
        - customer_details
        - employment_details
        - finance_details
      properties:
        bank_account:
          type: object
          $ref: "#/components/schemas/BankAccount"
        customer_details:
          type: object
          title: customer details
          $ref: "#/components/schemas/CustomerDetails"
        employment_details:
          type: object
          title: employment details
          $ref: "#/components/schemas/EmploymentDetails"
        additional_employment_details:
          type: array
          title: additional employment details
          items:
            $ref: "#/components/schemas/EmploymentDetails"
        finance_details:
          type: object
          title: finance details
          $ref: "#/components/schemas/FinanceDetails"

    FinanceDetails:
      type: object
      title: finance details
      properties:
        bankrupcy_or_iva_in_last_5_years:
          type: string
          $ref: "#/components/schemas/BankrupcyOrIvaInLast5Years"
        incomes:
          type: array
          title: incomes
          items:
            $ref: "#/components/schemas/Income"
        expenditures:
          type: array
          title: expenditures
          items:
            $ref: "#/components/schemas/Expenditure"

    BankrupcyOrIvaInLast5Years:
      type: string
      title: anay bankrupcy or IVA in the last 5 years?
      enum:
        - "yes"
        - "no"

    Income:
      type: object
      title: income
      properties:
        income_type:
          type: string
          enum:
            - "earning_after_tax"
            - "benefits"
            - "pensions"
            - "other_sources_of_income"
        income_type_info:
          type: string
          title: income type info
          enum:
            - applicant
            - household
            - not_specified
          default: applicant
        monthly_amount:
          type: object
          title: monthly amount
          $ref: "#/components/schemas/Money"

    Expenditure:
      type: object
      title: expenditure
      properties:
        expenditure_type:
          type: string
          enum:
            - "mortgage"
            - "rent"
            - "credit_card"
            - "clothes"
            - "council_tax_and_bills"
            - "child_support_agency"
            - "healthcare"
            - "holidays"
        monthly_amount:
          type: object
          title: monthly amount
          $ref: "#/components/schemas/Money"

    Subscription:
      type: object
      title: subscription
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - type: object
          title: subscription
          required:
            - amount
            - billing_status
          properties:
            billing:
              type: string
              title: billing reference
            billing_status:
              type: string
              title: billing status
            mandate:
              type: string
              title: mandate reference
            mandate_status:
              type: string
              title: mandate status
            authorisation_url:
              type: string
              title: authorisation url to submit a mandate agreement
            amount:
              type: object
              title: subscription amount
              $ref: "#/components/schemas/Money"
            xid:
              type: string
              title: external reference id
            xref:
              type: string
              title: external reference

    SubscriptionInput:
      type: object
      title: subscription input
      required:
        - interval
      properties:
        interval:
          type: string
          $ref: "#/components/schemas/SubscriptionInterval"
        day_of_month:
          type: integer
          title: day of month for collection
          format: int32
          minimum: -1
          maximum: 28

    SubscriptionInterval:
      type: string
      title: subscription interval
      enum:
        - monthly
        - yearly

    InfoValidationEmail:
      type: object
      title: info validation email
      properties:
        email:
          type: string
          title: email
          readOnly: true
          format: email
          x-go-type: Email
        verdict:
          type: string
          title: verdict
          readOnly: true
          enum:
            - valid
            - risky
            - invalid
          default: valid
        suggestion:
          type: string
          title: suggestion
          readOnly: true
        source:
          type: string
          title: source
          readOnly: true

    JobOverride:
      type: object
      title: job override
      required:
        - action
      properties:
        action:
          type: string
          title: action
          enum:
            - "mark_job_as_sat_note_delayed"
            - "mark_job_as_pending"
            - "mark_job_as_referred"
            - "mark_job_as_action_customer"
            - "mark_job_as_accepted"
            - "mark_job_as_declined"
            - "mark_job_as_cancelled"
        customer_options:
          type: object
          title: customer selected options, updated only via custom endpoint
          $ref: "#/components/schemas/CustomerOptions"
        xref:
          type: string
          title: external reference required to be updated

    Tally:
      type: object
      title: tally result
      required:
        - id
      properties:
        id:
          type: string
          title: record id
        failure:
          type: string
          title: failure reason

    Cache:
      type: object
      title: cache
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/CacheInput"

    CacheInput:
      type: object
      additionalProperties:
        type: string

    Rate:
      type: object
      title: rate
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/RateInput"

    RateInput:
      type: object
      title: rate input
      required:
        - finance_rates
      properties:
        finance_rates:
          type: array
          title: finance rates
          items:
            $ref: "#/components/schemas/FinanceRate"

    Analytics:
      type: object
      title: analytics
      properties:
        utms:
          type: array
          title: UTM parameters
          items:
            $ref: "#/components/schemas/UTM"

    UTM:
      type: object
      title: UTM parameter
      required:
        - utm_source
      properties:
        utm_source:
          type: string
          title: utm source
          default: kanda
        utm_medium:
          type: string
          title: utm medium
        utm_campaign:
          type: string
          title: utm campaign
        utm_term:
          type: string
          title: utm term
        utm_content:
          type: string
          title: utm content

    Monitor:
      type: object
      title: monitor
      allOf:
        - $ref: "#/components/schemas/MonitorInput"
        - type: object
          title: internal monitoring with flags
          properties:
            metadata:
              $ref: "#/components/schemas/Metadata"

    MonitorInput:
      type: object
      title: monitor input
      description: monitoring with flags input
      required:
        - id
        - flag
        - flags
      properties:
        id:
          type: string
          title: monitoring id
        flag:
          type: object
          $ref: "#/components/schemas/Flag"
        flags:
          type: array
          title: flags
          description: flags
          items:
            $ref: "#/components/schemas/Flag"

    Flag:
      type: object
      title: flag
      description: flag
      required:
        - level
      properties:
        aid:
          type: string
          title: author id
          description: kanda staff who authored this flag
          readOnly: true
        level:
          type: string
          title: level
          description: flag level
          enum:
            - "green"
            - "yellow"
            - "red"
        remark:
          type: string
          title: remark
          description: internal remark for this flag
        flagged_at:
          type: string
          format: date-time
          title: flagged at
          readOnly: true

    InfoEntity:
      type: object
      title: info entity of resources
      description: info entity of all relevant resources
      required:
        - company
        - credit
        - job
        - monitor
        - onboarding
        - payment
      properties:
        company:
          type: array
          title: relevant companies
          description: relevant companies
          items:
            $ref: "#/components/schemas/Company"
        credit:
          type: array
          title: relevant credits
          description: relevant credits
          items:
            $ref: "#/components/schemas/Credit"
        job:
          type: array
          title: relevant jobs
          description: relevant jobs
          items:
            $ref: "#/components/schemas/Job"
        monitor:
          type: array
          title: relevant monitors
          description: relevant monitors
          items:
            $ref: "#/components/schemas/Monitor"
        onboarding:
          type: array
          title: relevant onboardings
          description: relevant onboardings
          items:
            $ref: "#/components/schemas/Onboarding"
        payment:
          type: array
          title: relevant payments
          description: relevant payments
          items:
            $ref: "#/components/schemas/Payment"

    SearchIndex:
      type: string
      title: search specific index or multi-search
      enum:
        - "audit"
        - "company"
        - "credit"
        - "enterprise"
        - "introduction"
        - "job"
        - "onboarding"
        - "transaction"

    InfoSearch:
      type: object
      title: info search
      description: info search of resources
      required:
        - index
        - q
      properties:
        index:
          type: array
          title: search specific indexes or multi-search
          items:
            $ref: "#/components/schemas/SearchIndex"
        q:
          type: string
          title: search query (keyword and fuzzy)
        filter:
          type: string
          title: search filter (Lucene-like syntax)
        sort:
          type: array
          title: search sort (field:asc or field:desc)
          items:
            type: string
        offset:
          type: integer
          format: int64
          title: offset
        limit:
          type: integer
          format: int64
          title: limit
        total:
          type: integer
          format: int64
          title: total records returned
          readOnly: true
        hits:
          $ref: "#/components/schemas/SearchHits"
          readOnly: true

    SearchHits:
      type: object
      title: search hits
      description: search hits of resources
      required:
        - audit
        - audit_hits
        - audit_returned
        - company
        - company_hits
        - company_returned
        - credit
        - credit_hits
        - credit_returned
        - enterprise
        - enterprise_hits
        - enterprise_returned
        - introduction
        - introduction_hits
        - introduction_returned
        - job
        - job_hits
        - job_returned
        - onboarding
        - onboarding_hits
        - onboarding_returned
      properties:
        audit:
          type: array
          title: matching audits
          description: matching audits
          items:
            $ref: "#/components/schemas/Audit"
        audit_hits:
          type: integer
          format: int64
          title: matching audits hits
        audit_returned:
          type: integer
          format: int64
          title: matching audits returned
        company:
          type: array
          title: matching companies
          description: matching companies
          items:
            $ref: "#/components/schemas/Company"
        company_hits:
          type: integer
          format: int64
          title: matching companies hits
        company_returned:
          type: integer
          format: int64
          title: matching companies returned
        credit:
          type: array
          title: matching credits
          description: matching credits
          items:
            $ref: "#/components/schemas/Credit"
        credit_hits:
          type: integer
          format: int64
          title: matching credits hits
        credit_returned:
          type: integer
          format: int64
          title: matching credits returned
        enterprise:
          type: array
          title: matching enterprises
          description: matching enterprises
          items:
            $ref: "#/components/schemas/Enterprise"
        enterprise_hits:
          type: integer
          format: int64
          title: matching enterprises hits
        enterprise_returned:
          type: integer
          format: int64
          title: matching enterprises returned
        introduction:
          type: array
          title: matching introductions
          description: matching introductions
          items:
            $ref: "#/components/schemas/Introduction"
        introduction_hits:
          type: integer
          format: int64
          title: matching introductions hits
        introduction_returned:
          type: integer
          format: int64
          title: matching introductions returned
        job:
          type: array
          title: matching jobs
          description: matching jobs
          items:
            $ref: "#/components/schemas/Job"
        job_hits:
          type: integer
          format: int64
          title: matching jobs hits
        job_returned:
          type: integer
          format: int64
          title: matching jobs returned
        onboarding:
          type: array
          title: matching onboardings
          description: matching onboardings
          items:
            $ref: "#/components/schemas/Onboarding"
        onboarding_hits:
          type: integer
          format: int64
          title: matching onboardings hits
        onboarding_returned:
          type: integer
          format: int64
          title: matching onboardings returned

    InfoPartnerBranding:
      type: object
      title: info partner branding
      description: info partner branding
      required:
        - id
        - contact_info
      properties:
        id:
          type: string
          title: partner id
          description: partner id
        contact_info:
          type: object
          title: partner contact info
          $ref: "#/components/schemas/ContactInfo"
        branding:
          type: object
          title: branding
          description: branding style override
          $ref: "#/components/schemas/Branding"

    CommContext:
      type: object
      title: comm context
      description: comm context to be used in dynamic templates
      required:
        - template_name
        - template
        - sender
        - receiver
        - deposit
        - bank_account
        - cta_url
      properties:
        template_name:
          type: string
          title: template name
          x-go-type: TName
        template:
          type: string
          title: template content
        flow_type:
          title: flow type
          $ref: "#/components/schemas/FlowType"
        sender:
          type: object
          title: sender contact info
          $ref: "#/components/schemas/ContactInfo"
        receiver:
          type: object
          title: receiver contact info
          $ref: "#/components/schemas/ContactInfo"
        lender:
          type: object
          title: lender contact info
          $ref: "#/components/schemas/ContactInfo"
        deposit:
          $ref: "#/components/schemas/DepositContext"
        bank_account:
          type: object
          $ref: "#/components/schemas/BankAccount"
        cta_url:
          type: string
          title: cta url
        cta_sub_url:
          type: string
          title: cta sub url
        documents:
          type: array
          title: documents
          items:
            $ref: "#/components/schemas/Document"
        message:
          type: string
          title: message
          description: optional comm context message
        reference:
          type: string
          title: reference
          description: optional comm context reference

    DepositContext:
      type: object
      title: deposit relevant to context
      required:
        - original
        - applied
        - difference
      properties:
        original:
          type: string
          title: deposit original formatted value in pounds
        applied:
          type: string
          title: deposit applied formatted value in pounds
        difference:
          type: string
          title: deposit value formatted difference from original in pounds

    Training:
      type: object
      title: training
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - $ref: "#/components/schemas/TrainingInput"
        - type: object
          required:
            - result
          properties:
            result:
              type: string
              title: training result
              $ref: "#/components/schemas/TrainingState"

    TrainingInput:
      type: object
      title: training input
      required:
        - categories
      properties:
        categories:
          type: array
          title: training categories
          items:
            $ref: "#/components/schemas/TrainingCategory"
        quizzes:
          type: array
          title: quizzes
          items:
            $ref: "#/components/schemas/Quiz"

    TrainingState:
      type: string
      title: training result state
      enum:
        - "MISSING"
        - "PASSED"
        - "FAILED"
        - "VOIDED"
      default: "MISSING"
      readOnly: true

    TrainingCategory:
      type: object
      title: training category
      required:
        - section
        - number_of_quizzes
      properties:
        section:
          type: string
          title: section
          enum:
            - "what_is_an_iar_and_what_can_it_do"
            - "advertising_finance"
            - "treating_customers_fairly"
            - "howdens__the_basics_of_offering_finance"
            - "howdens__what_is_an_ar_and_what_can_it_do"
            - "howdens__senior_management_responsibilities"
            - "howdens__advertising_finance"
            - "howdens__fighting_financial_crime"
            - "howdens__treating_customers_fairly"
        number_of_quizzes:
          type: integer
          title: number of quizzes
          format: int32
        number_of_correct_quizzes:
          type: integer
          title: number of correct quizzes
          format: int32
        result:
          type: string
          title: quiz result
          $ref: "#/components/schemas/TrainingState"

    Quiz:
      type: object
      title: quiz
      required:
        - category
        - question
        - answers
      properties:
        category:
          type: string
          $ref: "#/components/schemas/TrainingCategory"
        question:
          type: string
          title: question
        videoId:
          type: string
          title: video ID
        answers:
          type: array
          title: answers
          items:
            type: string
            title: answer
        user_answer:
          type: string
          title: user answer
        correct_answer:
          type: string
          title: correct answer

    ExportCSV:
      type: object
      title: export csv
      description: export csv object
      required:
        - csv
      properties:
        csv:
          type: string
          title: csv

    LenderImport:
      type: object
      title: lender import for new account
      required:
        - ibc_ref
        - fca_number
      properties:
        ibc_ref:
          type: string
          title: ibc ref or account id
        cid:
          type: string
          title: cid
        fca_number:
          type: string
          title: fca number

    BaseId:
      type: object
      title: base id
      required:
        - id
        - metadata
      properties:
        id:
          type: string
          title: resource id
          description: resource id
        aid:
          type: string
          title: resource author id
          description: resource author id
        oid:
          type: string
          title: resource owner id
          description: resource owner id
        cid:
          type: string
          title: company id
          description: resource company id
        eid:
          type: string
          title: enterprise id
          description: resource enterprise id
        bid:
          type: string
          title: branch id
          description: resource branch id
        tid:
          type: string
          title: trader id
          description: resource trader id
        metadata:
          $ref: "#/components/schemas/Metadata"

    Audit:
      type: object
      title: audit
      description: audit of resource
      allOf:
        - $ref: "#/components/schemas/BaseId"
        - type: object
          required:
            - resources
            - resource_id
            - current_action_state
            - entries
          properties:
            resources:
              type: array
              title: resources
              description: resources of this audit attached to
              items:
                type: string
                title: resource
            resource_id:
              type: string
              title: resource id
              description: resource id of this audit attached to
            current_action_state:
              type: string
              title: current action state
              description: current action state for this resource
              $ref: "#/components/schemas/ActionState"
            entries:
              type: array
              title: entries
              description: entries ever taken for this resource
              items:
                $ref: "#/components/schemas/Entry"

    AuditInput:
      type: object
      title: audit input
      description: audit of resource input
      required:
        - assignee_email
        - resource
        - resource_id
        - action_state
        - note
      properties:
        assignee_email:
          type: string
          title: assignee email
          format: email
          x-go-type: Email
        resource:
          type: string
          title: resource
          description: resource of this audit attached to
        resource_id:
          type: string
          title: resource id
          description: resource id of this audit attached to
        action_state:
          type: string
          $ref: "#/components/schemas/ActionState"
        note:
          type: string
          title: note

    Entry:
      type: object
      title: entry
      description: entry of action
      required:
        - owner_name
        - owner_email
        - assignee_name
        - assignee_email
        - resource
        - resource_id
        - action_state
        - note
        - timestamp
      properties:
        owner_name:
          type: string
          title: owner name
        owner_email:
          type: string
          title: owner email
          format: email
          x-go-type: Email
        assignee_name:
          type: string
          title: assignee name
        assignee_email:
          type: string
          title: assignee email
          format: email
          x-go-type: Email
        resource:
          type: string
          title: resource
        resource_id:
          type: string
          title: resource id
        action_state:
          type: string
          $ref: "#/components/schemas/ActionState"
        note:
          type: string
          title: note
        timestamp:
          type: string
          title: timestamp
          format: date-time

    ActionState:
      type: string
      title: action state
      description: action state
      enum:
        - "action_not_needed"
        - "action_required"
        - "action_acknowledged"
        - "action_taken"
        - "action_to_follow_up"
        - "action_resolved"

    Error:
      type: object
      title: error
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          title: code
        message:
          type: string
          title: message
